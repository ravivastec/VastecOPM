//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VastecOPMSP.FHSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProjectWorkflowList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProjectWorkflow")]
    [System.SerializableAttribute()]
    public class ProjectWorkflowList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProjectWorkflow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectWorkflow", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProjectWorkflow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProjectWorkflowActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectWorkflowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjectWorkflowActive {
            get {
                return this.ProjectWorkflowActiveField;
            }
            set {
                if ((this.ProjectWorkflowActiveField.Equals(value) != true)) {
                    this.ProjectWorkflowActiveField = value;
                    this.RaisePropertyChanged("ProjectWorkflowActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectWorkflowId {
            get {
                return this.ProjectWorkflowIdField;
            }
            set {
                if ((this.ProjectWorkflowIdField.Equals(value) != true)) {
                    this.ProjectWorkflowIdField = value;
                    this.RaisePropertyChanged("ProjectWorkflowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RoleList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Role")]
    [System.SerializableAttribute()]
    public class RoleList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Role> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RoleActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RoleActive {
            get {
                return this.RoleActiveField;
            }
            set {
                if ((this.RoleActiveField.Equals(value) != true)) {
                    this.RoleActiveField = value;
                    this.RaisePropertyChanged("RoleActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleGroup {
            get {
                return this.RoleGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleGroupField, value) != true)) {
                    this.RoleGroupField = value;
                    this.RaisePropertyChanged("RoleGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TeamList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Team")]
    [System.SerializableAttribute()]
    public class TeamList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Team> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Team", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Team : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MemberInfoLoadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.UserList OperatorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TeamActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.UserList TeamLeadListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MemberInfoLoaded {
            get {
                return this.MemberInfoLoadedField;
            }
            set {
                if ((this.MemberInfoLoadedField.Equals(value) != true)) {
                    this.MemberInfoLoadedField = value;
                    this.RaisePropertyChanged("MemberInfoLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.UserList OperatorList {
            get {
                return this.OperatorListField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorListField, value) != true)) {
                    this.OperatorListField = value;
                    this.RaisePropertyChanged("OperatorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TeamActive {
            get {
                return this.TeamActiveField;
            }
            set {
                if ((this.TeamActiveField.Equals(value) != true)) {
                    this.TeamActiveField = value;
                    this.RaisePropertyChanged("TeamActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamIdentifier {
            get {
                return this.TeamIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamIdentifierField, value) != true)) {
                    this.TeamIdentifierField = value;
                    this.RaisePropertyChanged("TeamIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.UserList TeamLeadList {
            get {
                return this.TeamLeadListField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamLeadListField, value) != true)) {
                    this.TeamLeadListField = value;
                    this.RaisePropertyChanged("TeamLeadList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<VastecOPMSP.FHSvc.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.RoleList UserRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.RoleList UserRoles {
            get {
                return this.UserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRolesField, value) != true)) {
                    this.UserRolesField = value;
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TeamUserList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="TeamUser")]
    [System.SerializableAttribute()]
    public class TeamUserList : System.Collections.Generic.List<VastecOPMSP.FHSvc.TeamUser> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamUser", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class TeamUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChangeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TeamLeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TeamUserActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ChangeUserId {
            get {
                return this.ChangeUserIdField;
            }
            set {
                if ((this.ChangeUserIdField.Equals(value) != true)) {
                    this.ChangeUserIdField = value;
                    this.RaisePropertyChanged("ChangeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TeamLead {
            get {
                return this.TeamLeadField;
            }
            set {
                if ((this.TeamLeadField.Equals(value) != true)) {
                    this.TeamLeadField = value;
                    this.RaisePropertyChanged("TeamLead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TeamUserActive {
            get {
                return this.TeamUserActiveField;
            }
            set {
                if ((this.TeamUserActiveField.Equals(value) != true)) {
                    this.TeamUserActiveField = value;
                    this.RaisePropertyChanged("TeamUserActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamUserId {
            get {
                return this.TeamUserIdField;
            }
            set {
                if ((this.TeamUserIdField.Equals(value) != true)) {
                    this.TeamUserIdField = value;
                    this.RaisePropertyChanged("TeamUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TeamUserRoleList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="TeamUserRole")]
    [System.SerializableAttribute()]
    public class TeamUserRoleList : System.Collections.Generic.List<VastecOPMSP.FHSvc.TeamUserRole> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamUserRole", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class TeamUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamUserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeamUserRolePriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamUserId {
            get {
                return this.TeamUserIdField;
            }
            set {
                if ((this.TeamUserIdField.Equals(value) != true)) {
                    this.TeamUserIdField = value;
                    this.RaisePropertyChanged("TeamUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamUserRoleId {
            get {
                return this.TeamUserRoleIdField;
            }
            set {
                if ((this.TeamUserRoleIdField.Equals(value) != true)) {
                    this.TeamUserRoleIdField = value;
                    this.RaisePropertyChanged("TeamUserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamUserRolePriority {
            get {
                return this.TeamUserRolePriorityField;
            }
            set {
                if ((this.TeamUserRolePriorityField.Equals(value) != true)) {
                    this.TeamUserRolePriorityField = value;
                    this.RaisePropertyChanged("TeamUserRolePriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class UserActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivityStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityEndTime {
            get {
                return this.ActivityEndTimeField;
            }
            set {
                if ((this.ActivityEndTimeField.Equals(value) != true)) {
                    this.ActivityEndTimeField = value;
                    this.RaisePropertyChanged("ActivityEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivityStartTime {
            get {
                return this.ActivityStartTimeField;
            }
            set {
                if ((this.ActivityStartTimeField.Equals(value) != true)) {
                    this.ActivityStartTimeField = value;
                    this.RaisePropertyChanged("ActivityStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserActivityId {
            get {
                return this.UserActivityIdField;
            }
            set {
                if ((this.UserActivityIdField.Equals(value) != true)) {
                    this.UserActivityIdField = value;
                    this.RaisePropertyChanged("UserActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCookie", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class UserCookie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CookieGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CookieNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CookieValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserCookieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CookieGroup {
            get {
                return this.CookieGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.CookieGroupField, value) != true)) {
                    this.CookieGroupField = value;
                    this.RaisePropertyChanged("CookieGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CookieName {
            get {
                return this.CookieNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CookieNameField, value) != true)) {
                    this.CookieNameField = value;
                    this.RaisePropertyChanged("CookieName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CookieValue {
            get {
                return this.CookieValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CookieValueField, value) != true)) {
                    this.CookieValueField = value;
                    this.RaisePropertyChanged("CookieValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserCookieId {
            get {
                return this.UserCookieIdField;
            }
            set {
                if ((this.UserCookieIdField.Equals(value) != true)) {
                    this.UserCookieIdField = value;
                    this.RaisePropertyChanged("UserCookieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserNoteList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="UserNote")]
    [System.SerializableAttribute()]
    public class UserNoteList : System.Collections.Generic.List<VastecOPMSP.FHSvc.UserNote> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserNote", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class UserNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChangeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifyTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserNoteIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ChangeUserId {
            get {
                return this.ChangeUserIdField;
            }
            set {
                if ((this.ChangeUserIdField.Equals(value) != true)) {
                    this.ChangeUserIdField = value;
                    this.RaisePropertyChanged("ChangeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyTs {
            get {
                return this.ModifyTsField;
            }
            set {
                if ((this.ModifyTsField.Equals(value) != true)) {
                    this.ModifyTsField = value;
                    this.RaisePropertyChanged("ModifyTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteText {
            get {
                return this.NoteTextField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTextField, value) != true)) {
                    this.NoteTextField = value;
                    this.RaisePropertyChanged("NoteText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserNoteId {
            get {
                return this.UserNoteIdField;
            }
            set {
                if ((this.UserNoteIdField.Equals(value) != true)) {
                    this.UserNoteIdField = value;
                    this.RaisePropertyChanged("UserNoteId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserRoleList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="UserRole")]
    [System.SerializableAttribute()]
    public class UserRoleList : System.Collections.Generic.List<VastecOPMSP.FHSvc.UserRole> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class UserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserRoleActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserRoleActive {
            get {
                return this.UserRoleActiveField;
            }
            set {
                if ((this.UserRoleActiveField.Equals(value) != true)) {
                    this.UserRoleActiveField = value;
                    this.RaisePropertyChanged("UserRoleActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserRoleId {
            get {
                return this.UserRoleIdField;
            }
            set {
                if ((this.UserRoleIdField.Equals(value) != true)) {
                    this.UserRoleIdField = value;
                    this.RaisePropertyChanged("UserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="WorkflowList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Workflow")]
    [System.SerializableAttribute()]
    public class WorkflowList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Workflow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workflow", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Workflow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WorkflowActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Workflow.WorkflowScopes WorkflowScopeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WorkflowActive {
            get {
                return this.WorkflowActiveField;
            }
            set {
                if ((this.WorkflowActiveField.Equals(value) != true)) {
                    this.WorkflowActiveField = value;
                    this.RaisePropertyChanged("WorkflowActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowName {
            get {
                return this.WorkflowNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowNameField, value) != true)) {
                    this.WorkflowNameField = value;
                    this.RaisePropertyChanged("WorkflowName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Workflow.WorkflowScopes WorkflowScope {
            get {
                return this.WorkflowScopeField;
            }
            set {
                if ((this.WorkflowScopeField.Equals(value) != true)) {
                    this.WorkflowScopeField = value;
                    this.RaisePropertyChanged("WorkflowScope");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Workflow.WorkflowScopes", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
        public enum WorkflowScopes : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Box = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Job = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="WorkflowActivityList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="WorkflowActivity")]
    [System.SerializableAttribute()]
    public class WorkflowActivityList : System.Collections.Generic.List<VastecOPMSP.FHSvc.WorkflowActivity> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class WorkflowActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivityActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssociatedRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxWorkflowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActivityActive {
            get {
                return this.ActivityActiveField;
            }
            set {
                if ((this.ActivityActiveField.Equals(value) != true)) {
                    this.ActivityActiveField = value;
                    this.RaisePropertyChanged("ActivityActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityDescription {
            get {
                return this.ActivityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityDescriptionField, value) != true)) {
                    this.ActivityDescriptionField = value;
                    this.RaisePropertyChanged("ActivityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityOrder {
            get {
                return this.ActivityOrderField;
            }
            set {
                if ((this.ActivityOrderField.Equals(value) != true)) {
                    this.ActivityOrderField = value;
                    this.RaisePropertyChanged("ActivityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssociatedRoleId {
            get {
                return this.AssociatedRoleIdField;
            }
            set {
                if ((this.AssociatedRoleIdField.Equals(value) != true)) {
                    this.AssociatedRoleIdField = value;
                    this.RaisePropertyChanged("AssociatedRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxWorkflowId {
            get {
                return this.BoxWorkflowIdField;
            }
            set {
                if ((this.BoxWorkflowIdField.Equals(value) != true)) {
                    this.BoxWorkflowIdField = value;
                    this.RaisePropertyChanged("BoxWorkflowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowActivityId {
            get {
                return this.WorkflowActivityIdField;
            }
            set {
                if ((this.WorkflowActivityIdField.Equals(value) != true)) {
                    this.WorkflowActivityIdField = value;
                    this.RaisePropertyChanged("WorkflowActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManifestResponse", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ManifestResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseMessage {
            get {
                return this.ResponseMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseMessageField, value) != true)) {
                    this.ResponseMessageField = value;
                    this.RaisePropertyChanged("ResponseMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IssueNotificationList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="IssueNotification")]
    [System.SerializableAttribute()]
    public class IssueNotificationList : System.Collections.Generic.List<VastecOPMSP.FHSvc.IssueNotification> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueNotification", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IssueNotification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FileInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstanceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDebugInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProjectOfficeIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RecipientUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TargetRoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FileInfoId {
            get {
                return this.FileInfoIdField;
            }
            set {
                if ((this.FileInfoIdField.Equals(value) != true)) {
                    this.FileInfoIdField = value;
                    this.RaisePropertyChanged("FileInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstanceCount {
            get {
                return this.InstanceCountField;
            }
            set {
                if ((this.InstanceCountField.Equals(value) != true)) {
                    this.InstanceCountField = value;
                    this.RaisePropertyChanged("InstanceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDebugInfo {
            get {
                return this.IssueDebugInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDebugInfoField, value) != true)) {
                    this.IssueDebugInfoField = value;
                    this.RaisePropertyChanged("IssueDebugInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueMessage {
            get {
                return this.IssueMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueMessageField, value) != true)) {
                    this.IssueMessageField = value;
                    this.RaisePropertyChanged("IssueMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueNotificationId {
            get {
                return this.IssueNotificationIdField;
            }
            set {
                if ((this.IssueNotificationIdField.Equals(value) != true)) {
                    this.IssueNotificationIdField = value;
                    this.RaisePropertyChanged("IssueNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifyDate {
            get {
                return this.ModifyDateField;
            }
            set {
                if ((this.ModifyDateField.Equals(value) != true)) {
                    this.ModifyDateField = value;
                    this.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProjectOfficeIdentifierId {
            get {
                return this.ProjectOfficeIdentifierIdField;
            }
            set {
                if ((this.ProjectOfficeIdentifierIdField.Equals(value) != true)) {
                    this.ProjectOfficeIdentifierIdField = value;
                    this.RaisePropertyChanged("ProjectOfficeIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReadDate {
            get {
                return this.ReadDateField;
            }
            set {
                if ((this.ReadDateField.Equals(value) != true)) {
                    this.ReadDateField = value;
                    this.RaisePropertyChanged("ReadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RecipientUserId {
            get {
                return this.RecipientUserIdField;
            }
            set {
                if ((this.RecipientUserIdField.Equals(value) != true)) {
                    this.RecipientUserIdField = value;
                    this.RaisePropertyChanged("RecipientUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TargetRoleId {
            get {
                return this.TargetRoleIdField;
            }
            set {
                if ((this.TargetRoleIdField.Equals(value) != true)) {
                    this.TargetRoleIdField = value;
                    this.RaisePropertyChanged("TargetRoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="JobList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Job")]
    [System.SerializableAttribute()]
    public class JobList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Job> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobProfilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobScheduledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PickupDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobCompleted {
            get {
                return this.JobCompletedField;
            }
            set {
                if ((this.JobCompletedField.Equals(value) != true)) {
                    this.JobCompletedField = value;
                    this.RaisePropertyChanged("JobCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobDeadline {
            get {
                return this.JobDeadlineField;
            }
            set {
                if ((this.JobDeadlineField.Equals(value) != true)) {
                    this.JobDeadlineField = value;
                    this.RaisePropertyChanged("JobDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobProfilePath {
            get {
                return this.JobProfilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.JobProfilePathField, value) != true)) {
                    this.JobProfilePathField = value;
                    this.RaisePropertyChanged("JobProfilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRelativePath {
            get {
                return this.JobRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRelativePathField, value) != true)) {
                    this.JobRelativePathField = value;
                    this.RaisePropertyChanged("JobRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobScheduled {
            get {
                return this.JobScheduledField;
            }
            set {
                if ((this.JobScheduledField.Equals(value) != true)) {
                    this.JobScheduledField = value;
                    this.RaisePropertyChanged("JobScheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobStarted {
            get {
                return this.JobStartedField;
            }
            set {
                if ((this.JobStartedField.Equals(value) != true)) {
                    this.JobStartedField = value;
                    this.RaisePropertyChanged("JobStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PickupDate {
            get {
                return this.PickupDateField;
            }
            set {
                if ((this.PickupDateField.Equals(value) != true)) {
                    this.PickupDateField = value;
                    this.RaisePropertyChanged("PickupDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectLocationId {
            get {
                return this.ProjectLocationIdField;
            }
            set {
                if ((this.ProjectLocationIdField.Equals(value) != true)) {
                    this.ProjectLocationIdField = value;
                    this.RaisePropertyChanged("ProjectLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.JobData", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesJobData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesManager[] ManagersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesProjectLocation[] ProjectLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesTeam[] TeamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesManager[] Managers {
            get {
                return this.ManagersField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagersField, value) != true)) {
                    this.ManagersField = value;
                    this.RaisePropertyChanged("Managers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesProjectLocation[] ProjectLocations {
            get {
                return this.ProjectLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectLocationsField, value) != true)) {
                    this.ProjectLocationsField = value;
                    this.RaisePropertyChanged("ProjectLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesTeam[] Teams {
            get {
                return this.TeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamsField, value) != true)) {
                    this.TeamsField = value;
                    this.RaisePropertyChanged("Teams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.Manager", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesManager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFirstName {
            get {
                return this.UserFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFirstNameField, value) != true)) {
                    this.UserFirstNameField = value;
                    this.RaisePropertyChanged("UserFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLastName {
            get {
                return this.UserLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLastNameField, value) != true)) {
                    this.UserLastNameField = value;
                    this.RaisePropertyChanged("UserLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLogin {
            get {
                return this.UserLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginField, value) != true)) {
                    this.UserLoginField = value;
                    this.RaisePropertyChanged("UserLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserVersion {
            get {
                return this.UserVersionField;
            }
            set {
                if ((this.UserVersionField.Equals(value) != true)) {
                    this.UserVersionField = value;
                    this.RaisePropertyChanged("UserVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.ProjectLocation", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesProjectLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesJob[] JobsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUri {
            get {
                return this.BaseUriField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUriField, value) != true)) {
                    this.BaseUriField = value;
                    this.RaisePropertyChanged("BaseUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesJob[] Jobs {
            get {
                return this.JobsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsField, value) != true)) {
                    this.JobsField = value;
                    this.RaisePropertyChanged("Jobs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectLocationId {
            get {
                return this.ProjectLocationIdField;
            }
            set {
                if ((this.ProjectLocationIdField.Equals(value) != true)) {
                    this.ProjectLocationIdField = value;
                    this.RaisePropertyChanged("ProjectLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.Team", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesTeam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesTeamLead TeamLeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeamVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamIdentifier {
            get {
                return this.TeamIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamIdentifierField, value) != true)) {
                    this.TeamIdentifierField = value;
                    this.RaisePropertyChanged("TeamIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesTeamLead TeamLead {
            get {
                return this.TeamLeadField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamLeadField, value) != true)) {
                    this.TeamLeadField = value;
                    this.RaisePropertyChanged("TeamLead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamVersion {
            get {
                return this.TeamVersionField;
            }
            set {
                if ((this.TeamVersionField.Equals(value) != true)) {
                    this.TeamVersionField = value;
                    this.RaisePropertyChanged("TeamVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.Job", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesJob : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesJobActivity[] JobActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobScheduledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectOfficeIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesJobActivity[] JobActivities {
            get {
                return this.JobActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.JobActivitiesField, value) != true)) {
                    this.JobActivitiesField = value;
                    this.RaisePropertyChanged("JobActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobCompleted {
            get {
                return this.JobCompletedField;
            }
            set {
                if ((this.JobCompletedField.Equals(value) != true)) {
                    this.JobCompletedField = value;
                    this.RaisePropertyChanged("JobCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobDeadline {
            get {
                return this.JobDeadlineField;
            }
            set {
                if ((this.JobDeadlineField.Equals(value) != true)) {
                    this.JobDeadlineField = value;
                    this.RaisePropertyChanged("JobDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobPriority {
            get {
                return this.JobPriorityField;
            }
            set {
                if ((this.JobPriorityField.Equals(value) != true)) {
                    this.JobPriorityField = value;
                    this.RaisePropertyChanged("JobPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRelativePath {
            get {
                return this.JobRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRelativePathField, value) != true)) {
                    this.JobRelativePathField = value;
                    this.RaisePropertyChanged("JobRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobScheduled {
            get {
                return this.JobScheduledField;
            }
            set {
                if ((this.JobScheduledField.Equals(value) != true)) {
                    this.JobScheduledField = value;
                    this.RaisePropertyChanged("JobScheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobStarted {
            get {
                return this.JobStartedField;
            }
            set {
                if ((this.JobStartedField.Equals(value) != true)) {
                    this.JobStartedField = value;
                    this.RaisePropertyChanged("JobStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobVersion {
            get {
                return this.JobVersionField;
            }
            set {
                if ((this.JobVersionField.Equals(value) != true)) {
                    this.JobVersionField = value;
                    this.RaisePropertyChanged("JobVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeIdentifier {
            get {
                return this.OfficeIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeIdentifierField, value) != true)) {
                    this.OfficeIdentifierField = value;
                    this.RaisePropertyChanged("OfficeIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectOfficeIdentifierId {
            get {
                return this.ProjectOfficeIdentifierIdField;
            }
            set {
                if ((this.ProjectOfficeIdentifierIdField.Equals(value) != true)) {
                    this.ProjectOfficeIdentifierIdField = value;
                    this.RaisePropertyChanged("ProjectOfficeIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamIdentifier {
            get {
                return this.TeamIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamIdentifierField, value) != true)) {
                    this.TeamIdentifierField = value;
                    this.RaisePropertyChanged("TeamIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.JobActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesJobActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssignedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesBox[] BoxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesOperator[] EligibleOperatorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobActivityVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesProcess ProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowActivityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityAssigned {
            get {
                return this.ActivityAssignedField;
            }
            set {
                if ((this.ActivityAssignedField.Equals(value) != true)) {
                    this.ActivityAssignedField = value;
                    this.RaisePropertyChanged("ActivityAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityCompleted {
            get {
                return this.ActivityCompletedField;
            }
            set {
                if ((this.ActivityCompletedField.Equals(value) != true)) {
                    this.ActivityCompletedField = value;
                    this.RaisePropertyChanged("ActivityCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityOrder {
            get {
                return this.ActivityOrderField;
            }
            set {
                if ((this.ActivityOrderField.Equals(value) != true)) {
                    this.ActivityOrderField = value;
                    this.RaisePropertyChanged("ActivityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityStarted {
            get {
                return this.ActivityStartedField;
            }
            set {
                if ((this.ActivityStartedField.Equals(value) != true)) {
                    this.ActivityStartedField = value;
                    this.RaisePropertyChanged("ActivityStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedUserId {
            get {
                return this.AssignedUserIdField;
            }
            set {
                if ((this.AssignedUserIdField.Equals(value) != true)) {
                    this.AssignedUserIdField = value;
                    this.RaisePropertyChanged("AssignedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesBox[] Boxes {
            get {
                return this.BoxesField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxesField, value) != true)) {
                    this.BoxesField = value;
                    this.RaisePropertyChanged("Boxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesOperator[] EligibleOperators {
            get {
                return this.EligibleOperatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibleOperatorsField, value) != true)) {
                    this.EligibleOperatorsField = value;
                    this.RaisePropertyChanged("EligibleOperators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobActivityVersion {
            get {
                return this.JobActivityVersionField;
            }
            set {
                if ((this.JobActivityVersionField.Equals(value) != true)) {
                    this.JobActivityVersionField = value;
                    this.RaisePropertyChanged("JobActivityVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesProcess Process {
            get {
                return this.ProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessField, value) != true)) {
                    this.ProcessField = value;
                    this.RaisePropertyChanged("Process");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowActivityId {
            get {
                return this.WorkflowActivityIdField;
            }
            set {
                if ((this.WorkflowActivityIdField.Equals(value) != true)) {
                    this.WorkflowActivityIdField = value;
                    this.RaisePropertyChanged("WorkflowActivityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.Process", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutomatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessErroredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessQueueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProcessQueueRowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Automated {
            get {
                return this.AutomatedField;
            }
            set {
                if ((this.AutomatedField.Equals(value) != true)) {
                    this.AutomatedField = value;
                    this.RaisePropertyChanged("Automated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessCompleted {
            get {
                return this.ProcessCompletedField;
            }
            set {
                if ((this.ProcessCompletedField.Equals(value) != true)) {
                    this.ProcessCompletedField = value;
                    this.RaisePropertyChanged("ProcessCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessErrored {
            get {
                return this.ProcessErroredField;
            }
            set {
                if ((this.ProcessErroredField.Equals(value) != true)) {
                    this.ProcessErroredField = value;
                    this.RaisePropertyChanged("ProcessErrored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessQueueId {
            get {
                return this.ProcessQueueIdField;
            }
            set {
                if ((this.ProcessQueueIdField.Equals(value) != true)) {
                    this.ProcessQueueIdField = value;
                    this.RaisePropertyChanged("ProcessQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProcessQueueRowVersion {
            get {
                return this.ProcessQueueRowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessQueueRowVersionField, value) != true)) {
                    this.ProcessQueueRowVersionField = value;
                    this.RaisePropertyChanged("ProcessQueueRowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessStarted {
            get {
                return this.ProcessStartedField;
            }
            set {
                if ((this.ProcessStartedField.Equals(value) != true)) {
                    this.ProcessStartedField = value;
                    this.RaisePropertyChanged("ProcessStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.Box", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesBox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesBoxActivity[] BoxActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesBoxManifest BoxManifestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoxVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesBoxActivity[] BoxActivities {
            get {
                return this.BoxActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxActivitiesField, value) != true)) {
                    this.BoxActivitiesField = value;
                    this.RaisePropertyChanged("BoxActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesBoxManifest BoxManifest {
            get {
                return this.BoxManifestField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxManifestField, value) != true)) {
                    this.BoxManifestField = value;
                    this.RaisePropertyChanged("BoxManifest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxName {
            get {
                return this.BoxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxNameField, value) != true)) {
                    this.BoxNameField = value;
                    this.RaisePropertyChanged("BoxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxRelativePath {
            get {
                return this.BoxRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxRelativePathField, value) != true)) {
                    this.BoxRelativePathField = value;
                    this.RaisePropertyChanged("BoxRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoxVersion {
            get {
                return this.BoxVersionField;
            }
            set {
                if ((this.BoxVersionField.Equals(value) != true)) {
                    this.BoxVersionField = value;
                    this.RaisePropertyChanged("BoxVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.Operator", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesOperator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeamUserVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamUserId {
            get {
                return this.TeamUserIdField;
            }
            set {
                if ((this.TeamUserIdField.Equals(value) != true)) {
                    this.TeamUserIdField = value;
                    this.RaisePropertyChanged("TeamUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamUserVersion {
            get {
                return this.TeamUserVersionField;
            }
            set {
                if ((this.TeamUserVersionField.Equals(value) != true)) {
                    this.TeamUserVersionField = value;
                    this.RaisePropertyChanged("TeamUserVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFirstName {
            get {
                return this.UserFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFirstNameField, value) != true)) {
                    this.UserFirstNameField = value;
                    this.RaisePropertyChanged("UserFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLastName {
            get {
                return this.UserLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLastNameField, value) != true)) {
                    this.UserLastNameField = value;
                    this.RaisePropertyChanged("UserLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLogin {
            get {
                return this.UserLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginField, value) != true)) {
                    this.UserLoginField = value;
                    this.RaisePropertyChanged("UserLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserVersion {
            get {
                return this.UserVersionField;
            }
            set {
                if ((this.UserVersionField.Equals(value) != true)) {
                    this.UserVersionField = value;
                    this.RaisePropertyChanged("UserVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.BoxManifest", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesBoxManifest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BoxFinalizedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BoxLabelPrintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesBoxManifestItem[] BoxManifestItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BoxReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConversionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberParcelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectOfficeIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpManifestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BoxFinalizedDate {
            get {
                return this.BoxFinalizedDateField;
            }
            set {
                if ((this.BoxFinalizedDateField.Equals(value) != true)) {
                    this.BoxFinalizedDateField = value;
                    this.RaisePropertyChanged("BoxFinalizedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BoxLabelPrintDate {
            get {
                return this.BoxLabelPrintDateField;
            }
            set {
                if ((this.BoxLabelPrintDateField.Equals(value) != true)) {
                    this.BoxLabelPrintDateField = value;
                    this.RaisePropertyChanged("BoxLabelPrintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestId {
            get {
                return this.BoxManifestIdField;
            }
            set {
                if ((this.BoxManifestIdField.Equals(value) != true)) {
                    this.BoxManifestIdField = value;
                    this.RaisePropertyChanged("BoxManifestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesBoxManifestItem[] BoxManifestItems {
            get {
                return this.BoxManifestItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxManifestItemsField, value) != true)) {
                    this.BoxManifestItemsField = value;
                    this.RaisePropertyChanged("BoxManifestItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BoxReceivedDate {
            get {
                return this.BoxReceivedDateField;
            }
            set {
                if ((this.BoxReceivedDateField.Equals(value) != true)) {
                    this.BoxReceivedDateField = value;
                    this.RaisePropertyChanged("BoxReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxStatus {
            get {
                return this.BoxStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxStatusField, value) != true)) {
                    this.BoxStatusField = value;
                    this.RaisePropertyChanged("BoxStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConversionType {
            get {
                return this.ConversionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConversionTypeField, value) != true)) {
                    this.ConversionTypeField = value;
                    this.RaisePropertyChanged("ConversionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberParcels {
            get {
                return this.NumberParcelsField;
            }
            set {
                if ((this.NumberParcelsField.Equals(value) != true)) {
                    this.NumberParcelsField = value;
                    this.RaisePropertyChanged("NumberParcels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectOfficeIdentifierId {
            get {
                return this.ProjectOfficeIdentifierIdField;
            }
            set {
                if ((this.ProjectOfficeIdentifierIdField.Equals(value) != true)) {
                    this.ProjectOfficeIdentifierIdField = value;
                    this.RaisePropertyChanged("ProjectOfficeIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipmentType {
            get {
                return this.ShipmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipmentTypeField, value) != true)) {
                    this.ShipmentTypeField = value;
                    this.RaisePropertyChanged("ShipmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpManifestId {
            get {
                return this.SpManifestIdField;
            }
            set {
                if ((this.SpManifestIdField.Equals(value) != true)) {
                    this.SpManifestIdField = value;
                    this.RaisePropertyChanged("SpManifestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.BoxActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesBoxActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssignedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoxActivityVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesOperator[] EligibleOperatorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.JobProcessesProcess ProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowActivityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityAssigned {
            get {
                return this.ActivityAssignedField;
            }
            set {
                if ((this.ActivityAssignedField.Equals(value) != true)) {
                    this.ActivityAssignedField = value;
                    this.RaisePropertyChanged("ActivityAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityCompleted {
            get {
                return this.ActivityCompletedField;
            }
            set {
                if ((this.ActivityCompletedField.Equals(value) != true)) {
                    this.ActivityCompletedField = value;
                    this.RaisePropertyChanged("ActivityCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityOrder {
            get {
                return this.ActivityOrderField;
            }
            set {
                if ((this.ActivityOrderField.Equals(value) != true)) {
                    this.ActivityOrderField = value;
                    this.RaisePropertyChanged("ActivityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityStarted {
            get {
                return this.ActivityStartedField;
            }
            set {
                if ((this.ActivityStartedField.Equals(value) != true)) {
                    this.ActivityStartedField = value;
                    this.RaisePropertyChanged("ActivityStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedUserId {
            get {
                return this.AssignedUserIdField;
            }
            set {
                if ((this.AssignedUserIdField.Equals(value) != true)) {
                    this.AssignedUserIdField = value;
                    this.RaisePropertyChanged("AssignedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoxActivityVersion {
            get {
                return this.BoxActivityVersionField;
            }
            set {
                if ((this.BoxActivityVersionField.Equals(value) != true)) {
                    this.BoxActivityVersionField = value;
                    this.RaisePropertyChanged("BoxActivityVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesOperator[] EligibleOperators {
            get {
                return this.EligibleOperatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibleOperatorsField, value) != true)) {
                    this.EligibleOperatorsField = value;
                    this.RaisePropertyChanged("EligibleOperators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.JobProcessesProcess Process {
            get {
                return this.ProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessField, value) != true)) {
                    this.ProcessField = value;
                    this.RaisePropertyChanged("Process");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowActivityId {
            get {
                return this.WorkflowActivityIdField;
            }
            set {
                if ((this.WorkflowActivityIdField.Equals(value) != true)) {
                    this.WorkflowActivityIdField = value;
                    this.RaisePropertyChanged("WorkflowActivityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.BoxManifestItem", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesBoxManifestItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedToBoxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMergeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueFolderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriorityFolderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpBoxManifestItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedToBoxDate {
            get {
                return this.AddedToBoxDateField;
            }
            set {
                if ((this.AddedToBoxDateField.Equals(value) != true)) {
                    this.AddedToBoxDateField = value;
                    this.RaisePropertyChanged("AddedToBoxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxFolderId {
            get {
                return this.BoxFolderIdField;
            }
            set {
                if ((this.BoxFolderIdField.Equals(value) != true)) {
                    this.BoxFolderIdField = value;
                    this.RaisePropertyChanged("BoxFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestItemId {
            get {
                return this.BoxManifestItemIdField;
            }
            set {
                if ((this.BoxManifestItemIdField.Equals(value) != true)) {
                    this.BoxManifestItemIdField = value;
                    this.RaisePropertyChanged("BoxManifestItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMerge {
            get {
                return this.IsMergeField;
            }
            set {
                if ((this.IsMergeField.Equals(value) != true)) {
                    this.IsMergeField = value;
                    this.RaisePropertyChanged("IsMerge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueFolderDate {
            get {
                return this.IssueFolderDateField;
            }
            set {
                if ((this.IssueFolderDateField.Equals(value) != true)) {
                    this.IssueFolderDateField = value;
                    this.RaisePropertyChanged("IssueFolderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriorityFolderDate {
            get {
                return this.PriorityFolderDateField;
            }
            set {
                if ((this.PriorityFolderDateField.Equals(value) != true)) {
                    this.PriorityFolderDateField = value;
                    this.RaisePropertyChanged("PriorityFolderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpBoxManifestItemId {
            get {
                return this.SpBoxManifestItemIdField;
            }
            set {
                if ((this.SpBoxManifestItemIdField.Equals(value) != true)) {
                    this.SpBoxManifestItemIdField = value;
                    this.RaisePropertyChanged("SpBoxManifestItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProcesses.TeamLead", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.XSD_Classes")]
    [System.SerializableAttribute()]
    public partial class JobProcessesTeamLead : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeamUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeamUserVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeamUserId {
            get {
                return this.TeamUserIdField;
            }
            set {
                if ((this.TeamUserIdField.Equals(value) != true)) {
                    this.TeamUserIdField = value;
                    this.RaisePropertyChanged("TeamUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamUserVersion {
            get {
                return this.TeamUserVersionField;
            }
            set {
                if ((this.TeamUserVersionField.Equals(value) != true)) {
                    this.TeamUserVersionField = value;
                    this.RaisePropertyChanged("TeamUserVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFirstName {
            get {
                return this.UserFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFirstNameField, value) != true)) {
                    this.UserFirstNameField = value;
                    this.RaisePropertyChanged("UserFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLastName {
            get {
                return this.UserLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLastNameField, value) != true)) {
                    this.UserLastNameField = value;
                    this.RaisePropertyChanged("UserLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLogin {
            get {
                return this.UserLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginField, value) != true)) {
                    this.UserLoginField = value;
                    this.RaisePropertyChanged("UserLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserVersion {
            get {
                return this.UserVersionField;
            }
            set {
                if ((this.UserVersionField.Equals(value) != true)) {
                    this.UserVersionField = value;
                    this.RaisePropertyChanged("UserVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentJobActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class CurrentJobActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsABoxProcessActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobActivityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsABoxProcessActivity {
            get {
                return this.IsABoxProcessActivityField;
            }
            set {
                if ((this.IsABoxProcessActivityField.Equals(value) != true)) {
                    this.IsABoxProcessActivityField = value;
                    this.RaisePropertyChanged("IsABoxProcessActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="JobActivityList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="JobActivity")]
    [System.SerializableAttribute()]
    public class JobActivityList : System.Collections.Generic.List<VastecOPMSP.FHSvc.JobActivity> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class JobActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssignedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasOperationNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasUserNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.UserList UsersWithJobActivityRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsersWithJobActivityRoleLoadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowActivityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityAssigned {
            get {
                return this.ActivityAssignedField;
            }
            set {
                if ((this.ActivityAssignedField.Equals(value) != true)) {
                    this.ActivityAssignedField = value;
                    this.RaisePropertyChanged("ActivityAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityCompleted {
            get {
                return this.ActivityCompletedField;
            }
            set {
                if ((this.ActivityCompletedField.Equals(value) != true)) {
                    this.ActivityCompletedField = value;
                    this.RaisePropertyChanged("ActivityCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityStarted {
            get {
                return this.ActivityStartedField;
            }
            set {
                if ((this.ActivityStartedField.Equals(value) != true)) {
                    this.ActivityStartedField = value;
                    this.RaisePropertyChanged("ActivityStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedUserId {
            get {
                return this.AssignedUserIdField;
            }
            set {
                if ((this.AssignedUserIdField.Equals(value) != true)) {
                    this.AssignedUserIdField = value;
                    this.RaisePropertyChanged("AssignedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOperationNotes {
            get {
                return this.HasOperationNotesField;
            }
            set {
                if ((this.HasOperationNotesField.Equals(value) != true)) {
                    this.HasOperationNotesField = value;
                    this.RaisePropertyChanged("HasOperationNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasUserNotes {
            get {
                return this.HasUserNotesField;
            }
            set {
                if ((this.HasUserNotesField.Equals(value) != true)) {
                    this.HasUserNotesField = value;
                    this.RaisePropertyChanged("HasUserNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.UserList UsersWithJobActivityRole {
            get {
                return this.UsersWithJobActivityRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersWithJobActivityRoleField, value) != true)) {
                    this.UsersWithJobActivityRoleField = value;
                    this.RaisePropertyChanged("UsersWithJobActivityRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsersWithJobActivityRoleLoaded {
            get {
                return this.UsersWithJobActivityRoleLoadedField;
            }
            set {
                if ((this.UsersWithJobActivityRoleLoadedField.Equals(value) != true)) {
                    this.UsersWithJobActivityRoleLoadedField = value;
                    this.RaisePropertyChanged("UsersWithJobActivityRoleLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowActivityId {
            get {
                return this.WorkflowActivityIdField;
            }
            set {
                if ((this.WorkflowActivityIdField.Equals(value) != true)) {
                    this.WorkflowActivityIdField = value;
                    this.RaisePropertyChanged("WorkflowActivityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="JobUserRoleList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="JobUserRole")]
    [System.SerializableAttribute()]
    public class JobUserRoleList : System.Collections.Generic.List<VastecOPMSP.FHSvc.JobUserRole> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobUserRole", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class JobUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Job JobObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobUserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Role RoleObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.User UserObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserRolePriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Job JobObject {
            get {
                return this.JobObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.JobObjectField, value) != true)) {
                    this.JobObjectField = value;
                    this.RaisePropertyChanged("JobObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobUserRoleId {
            get {
                return this.JobUserRoleIdField;
            }
            set {
                if ((this.JobUserRoleIdField.Equals(value) != true)) {
                    this.JobUserRoleIdField = value;
                    this.RaisePropertyChanged("JobUserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Role RoleObject {
            get {
                return this.RoleObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleObjectField, value) != true)) {
                    this.RoleObjectField = value;
                    this.RaisePropertyChanged("RoleObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.User UserObject {
            get {
                return this.UserObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.UserObjectField, value) != true)) {
                    this.UserObjectField = value;
                    this.RaisePropertyChanged("UserObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserRolePriority {
            get {
                return this.UserRolePriorityField;
            }
            set {
                if ((this.UserRolePriorityField.Equals(value) != true)) {
                    this.UserRolePriorityField = value;
                    this.RaisePropertyChanged("UserRolePriority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LocationList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Location")]
    [System.SerializableAttribute()]
    public class LocationList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Location> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFieldList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdField")]
    [System.SerializableAttribute()]
    public class MdFieldList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdField> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdField", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaskedTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFieldIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Rectangle PrimeRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeXmlResolutionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaskedText {
            get {
                return this.MaskedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskedTextField, value) != true)) {
                    this.MaskedTextField = value;
                    this.RaisePropertyChanged("MaskedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFieldId {
            get {
                return this.MdFieldIdField;
            }
            set {
                if ((this.MdFieldIdField.Equals(value) != true)) {
                    this.MdFieldIdField = value;
                    this.RaisePropertyChanged("MdFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFieldIdentifierId {
            get {
                return this.MdFieldIdentifierIdField;
            }
            set {
                if ((this.MdFieldIdentifierIdField.Equals(value) != true)) {
                    this.MdFieldIdentifierIdField = value;
                    this.RaisePropertyChanged("MdFieldIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormPageId {
            get {
                return this.MdFormPageIdField;
            }
            set {
                if ((this.MdFormPageIdField.Equals(value) != true)) {
                    this.MdFormPageIdField = value;
                    this.RaisePropertyChanged("MdFormPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Rectangle PrimeRectangle {
            get {
                return this.PrimeRectangleField;
            }
            set {
                if ((this.PrimeRectangleField.Equals(value) != true)) {
                    this.PrimeRectangleField = value;
                    this.RaisePropertyChanged("PrimeRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeXmlResolution {
            get {
                return this.PrimeXmlResolutionField;
            }
            set {
                if ((this.PrimeXmlResolutionField.Equals(value) != true)) {
                    this.PrimeXmlResolutionField = value;
                    this.RaisePropertyChanged("PrimeXmlResolution");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rectangle", Namespace="http://schemas.datacontract.org/2004/07/System.Drawing")]
    [System.SerializableAttribute()]
    public partial struct Rectangle : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int heightField;
        
        private int widthField;
        
        private int xField;
        
        private int yField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFieldIdentifierList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdFieldIdentifier")]
    [System.SerializableAttribute()]
    public class MdFieldIdentifierList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdFieldIdentifier> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdFieldIdentifier", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdFieldIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMetadataFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFieldIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuleFieldTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMetadataField {
            get {
                return this.IsMetadataFieldField;
            }
            set {
                if ((this.IsMetadataFieldField.Equals(value) != true)) {
                    this.IsMetadataFieldField = value;
                    this.RaisePropertyChanged("IsMetadataField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFieldIdentifierId {
            get {
                return this.MdFieldIdentifierIdField;
            }
            set {
                if ((this.MdFieldIdentifierIdField.Equals(value) != true)) {
                    this.MdFieldIdentifierIdField = value;
                    this.RaisePropertyChanged("MdFieldIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleFieldType {
            get {
                return this.RuleFieldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleFieldTypeField, value) != true)) {
                    this.RuleFieldTypeField = value;
                    this.RaisePropertyChanged("RuleFieldType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFormList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdForm")]
    [System.SerializableAttribute()]
    public class MdFormList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdForm> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdForm", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdForm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderSideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FormGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAPackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VastecFormField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderSide {
            get {
                return this.FolderSideField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderSideField, value) != true)) {
                    this.FolderSideField = value;
                    this.RaisePropertyChanged("FolderSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormDescription {
            get {
                return this.FormDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormDescriptionField, value) != true)) {
                    this.FormDescriptionField = value;
                    this.RaisePropertyChanged("FormDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FormGroupId {
            get {
                return this.FormGroupIdField;
            }
            set {
                if ((this.FormGroupIdField.Equals(value) != true)) {
                    this.FormGroupIdField = value;
                    this.RaisePropertyChanged("FormGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormType {
            get {
                return this.FormTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FormTypeField, value) != true)) {
                    this.FormTypeField = value;
                    this.RaisePropertyChanged("FormType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormVersion {
            get {
                return this.FormVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormVersionField, value) != true)) {
                    this.FormVersionField = value;
                    this.RaisePropertyChanged("FormVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAPackage {
            get {
                return this.IsAPackageField;
            }
            set {
                if ((this.IsAPackageField.Equals(value) != true)) {
                    this.IsAPackageField = value;
                    this.RaisePropertyChanged("IsAPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormId {
            get {
                return this.MdFormIdField;
            }
            set {
                if ((this.MdFormIdField.Equals(value) != true)) {
                    this.MdFormIdField = value;
                    this.RaisePropertyChanged("MdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceAgency {
            get {
                return this.SourceAgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceAgencyField, value) != true)) {
                    this.SourceAgencyField = value;
                    this.RaisePropertyChanged("SourceAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VastecForm {
            get {
                return this.VastecFormField;
            }
            set {
                if ((this.VastecFormField.Equals(value) != true)) {
                    this.VastecFormField = value;
                    this.RaisePropertyChanged("VastecForm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFormPackageList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdFormPackage")]
    [System.SerializableAttribute()]
    public class MdFormPackageList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdFormPackage> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdFormPackage", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdFormPackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormPackageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PackageMdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VastecPackageMdFormIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormId {
            get {
                return this.MdFormIdField;
            }
            set {
                if ((this.MdFormIdField.Equals(value) != true)) {
                    this.MdFormIdField = value;
                    this.RaisePropertyChanged("MdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormPackageId {
            get {
                return this.MdFormPackageIdField;
            }
            set {
                if ((this.MdFormPackageIdField.Equals(value) != true)) {
                    this.MdFormPackageIdField = value;
                    this.RaisePropertyChanged("MdFormPackageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PackageMdFormId {
            get {
                return this.PackageMdFormIdField;
            }
            set {
                if ((this.PackageMdFormIdField.Equals(value) != true)) {
                    this.PackageMdFormIdField = value;
                    this.RaisePropertyChanged("PackageMdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VastecPackageMdFormId {
            get {
                return this.VastecPackageMdFormIdField;
            }
            set {
                if ((this.VastecPackageMdFormIdField.Equals(value) != true)) {
                    this.VastecPackageMdFormIdField = value;
                    this.RaisePropertyChanged("VastecPackageMdFormId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFormPageList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdFormPage")]
    [System.SerializableAttribute()]
    public class MdFormPageList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdFormPage> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdFormPage", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdFormPage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullTextMergeTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullTextMergeTemplate {
            get {
                return this.FullTextMergeTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.FullTextMergeTemplateField, value) != true)) {
                    this.FullTextMergeTemplateField = value;
                    this.RaisePropertyChanged("FullTextMergeTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormId {
            get {
                return this.MdFormIdField;
            }
            set {
                if ((this.MdFormIdField.Equals(value) != true)) {
                    this.MdFormIdField = value;
                    this.RaisePropertyChanged("MdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormPageId {
            get {
                return this.MdFormPageIdField;
            }
            set {
                if ((this.MdFormPageIdField.Equals(value) != true)) {
                    this.MdFormPageIdField = value;
                    this.RaisePropertyChanged("MdFormPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageGroupId {
            get {
                return this.PageGroupIdField;
            }
            set {
                if ((this.PageGroupIdField.Equals(value) != true)) {
                    this.PageGroupIdField = value;
                    this.RaisePropertyChanged("PageGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageHash {
            get {
                return this.PageHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PageHashField, value) != true)) {
                    this.PageHashField = value;
                    this.RaisePropertyChanged("PageHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageName {
            get {
                return this.PageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PageNameField, value) != true)) {
                    this.PageNameField = value;
                    this.RaisePropertyChanged("PageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateFilename {
            get {
                return this.TemplateFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateFilenameField, value) != true)) {
                    this.TemplateFilenameField = value;
                    this.RaisePropertyChanged("TemplateFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateText {
            get {
                return this.TemplateTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateTextField, value) != true)) {
                    this.TemplateTextField = value;
                    this.RaisePropertyChanged("TemplateText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFormZoneList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdFormZone")]
    [System.SerializableAttribute()]
    public class MdFormZoneList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdFormZone> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdFormZone", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdFormZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormZoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Rectangle PrimeRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeXmlResolutionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormPageId {
            get {
                return this.MdFormPageIdField;
            }
            set {
                if ((this.MdFormPageIdField.Equals(value) != true)) {
                    this.MdFormPageIdField = value;
                    this.RaisePropertyChanged("MdFormPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormZoneId {
            get {
                return this.MdFormZoneIdField;
            }
            set {
                if ((this.MdFormZoneIdField.Equals(value) != true)) {
                    this.MdFormZoneIdField = value;
                    this.RaisePropertyChanged("MdFormZoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Rectangle PrimeRectangle {
            get {
                return this.PrimeRectangleField;
            }
            set {
                if ((this.PrimeRectangleField.Equals(value) != true)) {
                    this.PrimeRectangleField = value;
                    this.RaisePropertyChanged("PrimeRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeXmlResolution {
            get {
                return this.PrimeXmlResolutionField;
            }
            set {
                if ((this.PrimeXmlResolutionField.Equals(value) != true)) {
                    this.PrimeXmlResolutionField = value;
                    this.RaisePropertyChanged("PrimeXmlResolution");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MdFormZoneAttribList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MdFormZoneAttrib")]
    [System.SerializableAttribute()]
    public class MdFormZoneAttribList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MdFormZoneAttrib> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdFormZoneAttrib", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MdFormZoneAttrib : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormZoneAttribIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormZoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NegationFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Rectangle PrimeRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeXmlResolutionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeText {
            get {
                return this.AttributeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTextField, value) != true)) {
                    this.AttributeTextField = value;
                    this.RaisePropertyChanged("AttributeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormZoneAttribId {
            get {
                return this.MdFormZoneAttribIdField;
            }
            set {
                if ((this.MdFormZoneAttribIdField.Equals(value) != true)) {
                    this.MdFormZoneAttribIdField = value;
                    this.RaisePropertyChanged("MdFormZoneAttribId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormZoneId {
            get {
                return this.MdFormZoneIdField;
            }
            set {
                if ((this.MdFormZoneIdField.Equals(value) != true)) {
                    this.MdFormZoneIdField = value;
                    this.RaisePropertyChanged("MdFormZoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NegationFlag {
            get {
                return this.NegationFlagField;
            }
            set {
                if ((this.NegationFlagField.Equals(value) != true)) {
                    this.NegationFlagField = value;
                    this.RaisePropertyChanged("NegationFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Rectangle PrimeRectangle {
            get {
                return this.PrimeRectangleField;
            }
            set {
                if ((this.PrimeRectangleField.Equals(value) != true)) {
                    this.PrimeRectangleField = value;
                    this.RaisePropertyChanged("PrimeRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeXmlResolution {
            get {
                return this.PrimeXmlResolutionField;
            }
            set {
                if ((this.PrimeXmlResolutionField.Equals(value) != true)) {
                    this.PrimeXmlResolutionField = value;
                    this.RaisePropertyChanged("PrimeXmlResolution");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MetadataTypeList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="MetadataType")]
    [System.SerializableAttribute()]
    public class MetadataTypeList : System.Collections.Generic.List<VastecOPMSP.FHSvc.MetadataType> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetadataType", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class MetadataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MetadataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetadataTypeId {
            get {
                return this.MetadataTypeIdField;
            }
            set {
                if ((this.MetadataTypeIdField.Equals(value) != true)) {
                    this.MetadataTypeIdField = value;
                    this.RaisePropertyChanged("MetadataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataTypeName {
            get {
                return this.MetadataTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataTypeNameField, value) != true)) {
                    this.MetadataTypeNameField = value;
                    this.RaisePropertyChanged("MetadataTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProcessConfigList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProcessConfig")]
    [System.SerializableAttribute()]
    public class ProcessConfigList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProcessConfig> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessConfig", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProcessConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessConfigIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigGroup {
            get {
                return this.ConfigGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigGroupField, value) != true)) {
                    this.ConfigGroupField = value;
                    this.RaisePropertyChanged("ConfigGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessConfigId {
            get {
                return this.ProcessConfigIdField;
            }
            set {
                if ((this.ProcessConfigIdField.Equals(value) != true)) {
                    this.ProcessConfigIdField = value;
                    this.RaisePropertyChanged("ProcessConfigId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProcessInfoList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProcessInfo")]
    [System.SerializableAttribute()]
    public class ProcessInfoList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProcessInfo> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessInfo", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProcessInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutomatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsableByWorkflowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Automated {
            get {
                return this.AutomatedField;
            }
            set {
                if ((this.AutomatedField.Equals(value) != true)) {
                    this.AutomatedField = value;
                    this.RaisePropertyChanged("Automated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEdit {
            get {
                return this.CanEditField;
            }
            set {
                if ((this.CanEditField.Equals(value) != true)) {
                    this.CanEditField = value;
                    this.RaisePropertyChanged("CanEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessDescription {
            get {
                return this.ProcessDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessDescriptionField, value) != true)) {
                    this.ProcessDescriptionField = value;
                    this.RaisePropertyChanged("ProcessDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsableByWorkflow {
            get {
                return this.UsableByWorkflowField;
            }
            set {
                if ((this.UsableByWorkflowField.Equals(value) != true)) {
                    this.UsableByWorkflowField = value;
                    this.RaisePropertyChanged("UsableByWorkflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProcessQueueList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProcessQueue")]
    [System.SerializableAttribute()]
    public class ProcessQueueList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProcessQueue> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessQueue", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProcessQueue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessErrorDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessQueueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SleepUntilTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessCompleted {
            get {
                return this.ProcessCompletedField;
            }
            set {
                if ((this.ProcessCompletedField.Equals(value) != true)) {
                    this.ProcessCompletedField = value;
                    this.RaisePropertyChanged("ProcessCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessErrorDate {
            get {
                return this.ProcessErrorDateField;
            }
            set {
                if ((this.ProcessErrorDateField.Equals(value) != true)) {
                    this.ProcessErrorDateField = value;
                    this.RaisePropertyChanged("ProcessErrorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessQueueId {
            get {
                return this.ProcessQueueIdField;
            }
            set {
                if ((this.ProcessQueueIdField.Equals(value) != true)) {
                    this.ProcessQueueIdField = value;
                    this.RaisePropertyChanged("ProcessQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessServerId {
            get {
                return this.ProcessServerIdField;
            }
            set {
                if ((this.ProcessServerIdField.Equals(value) != true)) {
                    this.ProcessServerIdField = value;
                    this.RaisePropertyChanged("ProcessServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessStarted {
            get {
                return this.ProcessStartedField;
            }
            set {
                if ((this.ProcessStartedField.Equals(value) != true)) {
                    this.ProcessStartedField = value;
                    this.RaisePropertyChanged("ProcessStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SleepUntilTime {
            get {
                return this.SleepUntilTimeField;
            }
            set {
                if ((this.SleepUntilTimeField.Equals(value) != true)) {
                    this.SleepUntilTimeField = value;
                    this.RaisePropertyChanged("SleepUntilTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxActivityDac.DualIndex", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.DataAccess")]
    [System.SerializableAttribute()]
    public partial class BoxActivityDacDualIndex : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobActivityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProcessQueueStateList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProcessQueueState")]
    [System.SerializableAttribute()]
    public class ProcessQueueStateList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProcessQueueState> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessQueueState", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProcessQueueState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessQueueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessQueueStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessQueueId {
            get {
                return this.ProcessQueueIdField;
            }
            set {
                if ((this.ProcessQueueIdField.Equals(value) != true)) {
                    this.ProcessQueueIdField = value;
                    this.RaisePropertyChanged("ProcessQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessQueueStateId {
            get {
                return this.ProcessQueueStateIdField;
            }
            set {
                if ((this.ProcessQueueStateIdField.Equals(value) != true)) {
                    this.ProcessQueueStateIdField = value;
                    this.RaisePropertyChanged("ProcessQueueStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingGroup {
            get {
                return this.SettingGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingGroupField, value) != true)) {
                    this.SettingGroupField = value;
                    this.RaisePropertyChanged("SettingGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingName {
            get {
                return this.SettingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingNameField, value) != true)) {
                    this.SettingNameField = value;
                    this.RaisePropertyChanged("SettingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingValue {
            get {
                return this.SettingValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingValueField, value) != true)) {
                    this.SettingValueField = value;
                    this.RaisePropertyChanged("SettingValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProcessServerList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProcessServer")]
    [System.SerializableAttribute()]
    public class ProcessServerList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProcessServer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessServer", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProcessServer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastHeartbeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastHeartbeat {
            get {
                return this.LastHeartbeatField;
            }
            set {
                if ((this.LastHeartbeatField.Equals(value) != true)) {
                    this.LastHeartbeatField = value;
                    this.RaisePropertyChanged("LastHeartbeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessServerId {
            get {
                return this.ProcessServerIdField;
            }
            set {
                if ((this.ProcessServerIdField.Equals(value) != true)) {
                    this.ProcessServerIdField = value;
                    this.RaisePropertyChanged("ProcessServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProjectList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Project")]
    [System.SerializableAttribute()]
    public class ProjectList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Project> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProjectActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjectActive {
            get {
                return this.ProjectActiveField;
            }
            set {
                if ((this.ProjectActiveField.Equals(value) != true)) {
                    this.ProjectActiveField = value;
                    this.RaisePropertyChanged("ProjectActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectDescription {
            get {
                return this.ProjectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectDescriptionField, value) != true)) {
                    this.ProjectDescriptionField = value;
                    this.RaisePropertyChanged("ProjectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProjectLocationList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProjectLocation")]
    [System.SerializableAttribute()]
    public class ProjectLocationList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProjectLocation> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectLocation", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProjectLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectLocationId {
            get {
                return this.ProjectLocationIdField;
            }
            set {
                if ((this.ProjectLocationIdField.Equals(value) != true)) {
                    this.ProjectLocationIdField = value;
                    this.RaisePropertyChanged("ProjectLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectRelativePath {
            get {
                return this.ProjectRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectRelativePathField, value) != true)) {
                    this.ProjectRelativePathField = value;
                    this.RaisePropertyChanged("ProjectRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProjectLocationUserRoleList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProjectLocationUserRole")]
    [System.SerializableAttribute()]
    public class ProjectLocationUserRoleList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProjectLocationUserRole> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectLocationUserRole", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProjectLocationUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.ProjectLocation ProjectLocationObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectLocationUserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Role RoleObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.User UserObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectLocationId {
            get {
                return this.ProjectLocationIdField;
            }
            set {
                if ((this.ProjectLocationIdField.Equals(value) != true)) {
                    this.ProjectLocationIdField = value;
                    this.RaisePropertyChanged("ProjectLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.ProjectLocation ProjectLocationObject {
            get {
                return this.ProjectLocationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectLocationObjectField, value) != true)) {
                    this.ProjectLocationObjectField = value;
                    this.RaisePropertyChanged("ProjectLocationObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectLocationUserRoleId {
            get {
                return this.ProjectLocationUserRoleIdField;
            }
            set {
                if ((this.ProjectLocationUserRoleIdField.Equals(value) != true)) {
                    this.ProjectLocationUserRoleIdField = value;
                    this.RaisePropertyChanged("ProjectLocationUserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Role RoleObject {
            get {
                return this.RoleObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleObjectField, value) != true)) {
                    this.RoleObjectField = value;
                    this.RaisePropertyChanged("RoleObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.User UserObject {
            get {
                return this.UserObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.UserObjectField, value) != true)) {
                    this.UserObjectField = value;
                    this.RaisePropertyChanged("UserObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProjectManifestLookupList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProjectManifestLookup")]
    [System.SerializableAttribute()]
    public class ProjectManifestLookupList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProjectManifestLookup> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectManifestLookup", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProjectManifestLookup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ChangeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectManifestLookupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ChangeUserId {
            get {
                return this.ChangeUserIdField;
            }
            set {
                if ((this.ChangeUserIdField.Equals(value) != true)) {
                    this.ChangeUserIdField = value;
                    this.RaisePropertyChanged("ChangeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTs {
            get {
                return this.CreateTsField;
            }
            set {
                if ((this.CreateTsField.Equals(value) != true)) {
                    this.CreateTsField = value;
                    this.RaisePropertyChanged("CreateTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryTypeField, value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectManifestLookupId {
            get {
                return this.ProjectManifestLookupIdField;
            }
            set {
                if ((this.ProjectManifestLookupIdField.Equals(value) != true)) {
                    this.ProjectManifestLookupIdField = value;
                    this.RaisePropertyChanged("ProjectManifestLookupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProjectOfficeIdentifierList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="ProjectOfficeIdentifier")]
    [System.SerializableAttribute()]
    public class ProjectOfficeIdentifierList : System.Collections.Generic.List<VastecOPMSP.FHSvc.ProjectOfficeIdentifier> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectOfficeIdentifier", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class ProjectOfficeIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectOfficeIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeIdentifier {
            get {
                return this.OfficeIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeIdentifierField, value) != true)) {
                    this.OfficeIdentifierField = value;
                    this.RaisePropertyChanged("OfficeIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectOfficeIdentifierId {
            get {
                return this.ProjectOfficeIdentifierIdField;
            }
            set {
                if ((this.ProjectOfficeIdentifierIdField.Equals(value) != true)) {
                    this.ProjectOfficeIdentifierIdField = value;
                    this.RaisePropertyChanged("ProjectOfficeIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Batch", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Batch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BatchAcceptedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BatchDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchFileCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BatchStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BatchAcceptedDate {
            get {
                return this.BatchAcceptedDateField;
            }
            set {
                if ((this.BatchAcceptedDateField.Equals(value) != true)) {
                    this.BatchAcceptedDateField = value;
                    this.RaisePropertyChanged("BatchAcceptedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BatchDeadline {
            get {
                return this.BatchDeadlineField;
            }
            set {
                if ((this.BatchDeadlineField.Equals(value) != true)) {
                    this.BatchDeadlineField = value;
                    this.RaisePropertyChanged("BatchDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchFileCount {
            get {
                return this.BatchFileCountField;
            }
            set {
                if ((this.BatchFileCountField.Equals(value) != true)) {
                    this.BatchFileCountField = value;
                    this.RaisePropertyChanged("BatchFileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchIdentifier {
            get {
                return this.BatchIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchIdentifierField, value) != true)) {
                    this.BatchIdentifierField = value;
                    this.RaisePropertyChanged("BatchIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchRelativePath {
            get {
                return this.BatchRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchRelativePathField, value) != true)) {
                    this.BatchRelativePathField = value;
                    this.RaisePropertyChanged("BatchRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BatchStart {
            get {
                return this.BatchStartField;
            }
            set {
                if ((this.BatchStartField.Equals(value) != true)) {
                    this.BatchStartField = value;
                    this.RaisePropertyChanged("BatchStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BoxList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Box")]
    [System.SerializableAttribute()]
    public class BoxList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Box> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Box", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Box : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.BoxActivityList BoxActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoxActivityLoadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoxFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoxHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.BoxActivityList BoxActivities {
            get {
                return this.BoxActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxActivitiesField, value) != true)) {
                    this.BoxActivitiesField = value;
                    this.RaisePropertyChanged("BoxActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoxActivityLoaded {
            get {
                return this.BoxActivityLoadedField;
            }
            set {
                if ((this.BoxActivityLoadedField.Equals(value) != true)) {
                    this.BoxActivityLoadedField = value;
                    this.RaisePropertyChanged("BoxActivityLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxContainer {
            get {
                return this.BoxContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxContainerField, value) != true)) {
                    this.BoxContainerField = value;
                    this.RaisePropertyChanged("BoxContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoxFinished {
            get {
                return this.BoxFinishedField;
            }
            set {
                if ((this.BoxFinishedField.Equals(value) != true)) {
                    this.BoxFinishedField = value;
                    this.RaisePropertyChanged("BoxFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoxHold {
            get {
                return this.BoxHoldField;
            }
            set {
                if ((this.BoxHoldField.Equals(value) != true)) {
                    this.BoxHoldField = value;
                    this.RaisePropertyChanged("BoxHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxName {
            get {
                return this.BoxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxNameField, value) != true)) {
                    this.BoxNameField = value;
                    this.RaisePropertyChanged("BoxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxRelativePath {
            get {
                return this.BoxRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxRelativePathField, value) != true)) {
                    this.BoxRelativePathField = value;
                    this.RaisePropertyChanged("BoxRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BoxActivityList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="BoxActivity")]
    [System.SerializableAttribute()]
    public class BoxActivityList : System.Collections.Generic.List<VastecOPMSP.FHSvc.BoxActivity> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class BoxActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssignedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasOperationNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasUserNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.UserList UsersWithBoxActivityRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsersWithBoxActivityRoleLoadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowActivityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityAssigned {
            get {
                return this.ActivityAssignedField;
            }
            set {
                if ((this.ActivityAssignedField.Equals(value) != true)) {
                    this.ActivityAssignedField = value;
                    this.RaisePropertyChanged("ActivityAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityCompleted {
            get {
                return this.ActivityCompletedField;
            }
            set {
                if ((this.ActivityCompletedField.Equals(value) != true)) {
                    this.ActivityCompletedField = value;
                    this.RaisePropertyChanged("ActivityCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityStarted {
            get {
                return this.ActivityStartedField;
            }
            set {
                if ((this.ActivityStartedField.Equals(value) != true)) {
                    this.ActivityStartedField = value;
                    this.RaisePropertyChanged("ActivityStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedUserId {
            get {
                return this.AssignedUserIdField;
            }
            set {
                if ((this.AssignedUserIdField.Equals(value) != true)) {
                    this.AssignedUserIdField = value;
                    this.RaisePropertyChanged("AssignedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOperationNotes {
            get {
                return this.HasOperationNotesField;
            }
            set {
                if ((this.HasOperationNotesField.Equals(value) != true)) {
                    this.HasOperationNotesField = value;
                    this.RaisePropertyChanged("HasOperationNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasUserNotes {
            get {
                return this.HasUserNotesField;
            }
            set {
                if ((this.HasUserNotesField.Equals(value) != true)) {
                    this.HasUserNotesField = value;
                    this.RaisePropertyChanged("HasUserNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.UserList UsersWithBoxActivityRole {
            get {
                return this.UsersWithBoxActivityRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersWithBoxActivityRoleField, value) != true)) {
                    this.UsersWithBoxActivityRoleField = value;
                    this.RaisePropertyChanged("UsersWithBoxActivityRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsersWithBoxActivityRoleLoaded {
            get {
                return this.UsersWithBoxActivityRoleLoadedField;
            }
            set {
                if ((this.UsersWithBoxActivityRoleLoadedField.Equals(value) != true)) {
                    this.UsersWithBoxActivityRoleLoadedField = value;
                    this.RaisePropertyChanged("UsersWithBoxActivityRoleLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowActivityId {
            get {
                return this.WorkflowActivityIdField;
            }
            set {
                if ((this.WorkflowActivityIdField.Equals(value) != true)) {
                    this.WorkflowActivityIdField = value;
                    this.RaisePropertyChanged("WorkflowActivityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxAndBoxActivityId", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class BoxAndBoxActivityId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BoxFolderList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="BoxFolder")]
    [System.SerializableAttribute()]
    public class BoxFolderList : System.Collections.Generic.List<VastecOPMSP.FHSvc.BoxFolder> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxFolder", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class BoxFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllFormsAreValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllFormsHadQaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScanFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllFormsAreValid {
            get {
                return this.AllFormsAreValidField;
            }
            set {
                if ((this.AllFormsAreValidField.Equals(value) != true)) {
                    this.AllFormsAreValidField = value;
                    this.RaisePropertyChanged("AllFormsAreValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllFormsHadQa {
            get {
                return this.AllFormsHadQaField;
            }
            set {
                if ((this.AllFormsHadQaField.Equals(value) != true)) {
                    this.AllFormsHadQaField = value;
                    this.RaisePropertyChanged("AllFormsHadQa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxFolderId {
            get {
                return this.BoxFolderIdField;
            }
            set {
                if ((this.BoxFolderIdField.Equals(value) != true)) {
                    this.BoxFolderIdField = value;
                    this.RaisePropertyChanged("BoxFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderRelativePath {
            get {
                return this.FolderRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderRelativePathField, value) != true)) {
                    this.FolderRelativePathField = value;
                    this.RaisePropertyChanged("FolderRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderStatus {
            get {
                return this.FolderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderStatusField, value) != true)) {
                    this.FolderStatusField = value;
                    this.RaisePropertyChanged("FolderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScanFileName {
            get {
                return this.ScanFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanFileNameField, value) != true)) {
                    this.ScanFileNameField = value;
                    this.RaisePropertyChanged("ScanFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BoxManifestList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="BoxManifest")]
    [System.SerializableAttribute()]
    public class BoxManifestList : System.Collections.Generic.List<VastecOPMSP.FHSvc.BoxManifest> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxManifest", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class BoxManifest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BoxFinalizedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BoxLabelPrintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BoxReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConversionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberParcelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectOfficeIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpManifestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BoxFinalizedDate {
            get {
                return this.BoxFinalizedDateField;
            }
            set {
                if ((this.BoxFinalizedDateField.Equals(value) != true)) {
                    this.BoxFinalizedDateField = value;
                    this.RaisePropertyChanged("BoxFinalizedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BoxLabelPrintDate {
            get {
                return this.BoxLabelPrintDateField;
            }
            set {
                if ((this.BoxLabelPrintDateField.Equals(value) != true)) {
                    this.BoxLabelPrintDateField = value;
                    this.RaisePropertyChanged("BoxLabelPrintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestId {
            get {
                return this.BoxManifestIdField;
            }
            set {
                if ((this.BoxManifestIdField.Equals(value) != true)) {
                    this.BoxManifestIdField = value;
                    this.RaisePropertyChanged("BoxManifestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BoxReceivedDate {
            get {
                return this.BoxReceivedDateField;
            }
            set {
                if ((this.BoxReceivedDateField.Equals(value) != true)) {
                    this.BoxReceivedDateField = value;
                    this.RaisePropertyChanged("BoxReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxStatus {
            get {
                return this.BoxStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxStatusField, value) != true)) {
                    this.BoxStatusField = value;
                    this.RaisePropertyChanged("BoxStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConversionType {
            get {
                return this.ConversionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConversionTypeField, value) != true)) {
                    this.ConversionTypeField = value;
                    this.RaisePropertyChanged("ConversionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberParcels {
            get {
                return this.NumberParcelsField;
            }
            set {
                if ((this.NumberParcelsField.Equals(value) != true)) {
                    this.NumberParcelsField = value;
                    this.RaisePropertyChanged("NumberParcels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectOfficeIdentifierId {
            get {
                return this.ProjectOfficeIdentifierIdField;
            }
            set {
                if ((this.ProjectOfficeIdentifierIdField.Equals(value) != true)) {
                    this.ProjectOfficeIdentifierIdField = value;
                    this.RaisePropertyChanged("ProjectOfficeIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipmentType {
            get {
                return this.ShipmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipmentTypeField, value) != true)) {
                    this.ShipmentTypeField = value;
                    this.RaisePropertyChanged("ShipmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpManifestId {
            get {
                return this.SpManifestIdField;
            }
            set {
                if ((this.SpManifestIdField.Equals(value) != true)) {
                    this.SpManifestIdField = value;
                    this.RaisePropertyChanged("SpManifestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BoxManifestItemList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="BoxManifestItem")]
    [System.SerializableAttribute()]
    public class BoxManifestItemList : System.Collections.Generic.List<VastecOPMSP.FHSvc.BoxManifestItem> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxManifestItem", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class BoxManifestItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedToBoxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMergeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueFolderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriorityFolderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpManifestItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedToBoxDate {
            get {
                return this.AddedToBoxDateField;
            }
            set {
                if ((this.AddedToBoxDateField.Equals(value) != true)) {
                    this.AddedToBoxDateField = value;
                    this.RaisePropertyChanged("AddedToBoxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxFolderId {
            get {
                return this.BoxFolderIdField;
            }
            set {
                if ((this.BoxFolderIdField.Equals(value) != true)) {
                    this.BoxFolderIdField = value;
                    this.RaisePropertyChanged("BoxFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestId {
            get {
                return this.BoxManifestIdField;
            }
            set {
                if ((this.BoxManifestIdField.Equals(value) != true)) {
                    this.BoxManifestIdField = value;
                    this.RaisePropertyChanged("BoxManifestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestItemId {
            get {
                return this.BoxManifestItemIdField;
            }
            set {
                if ((this.BoxManifestItemIdField.Equals(value) != true)) {
                    this.BoxManifestItemIdField = value;
                    this.RaisePropertyChanged("BoxManifestItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMerge {
            get {
                return this.IsMergeField;
            }
            set {
                if ((this.IsMergeField.Equals(value) != true)) {
                    this.IsMergeField = value;
                    this.RaisePropertyChanged("IsMerge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueFolderDate {
            get {
                return this.IssueFolderDateField;
            }
            set {
                if ((this.IssueFolderDateField.Equals(value) != true)) {
                    this.IssueFolderDateField = value;
                    this.RaisePropertyChanged("IssueFolderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriorityFolderDate {
            get {
                return this.PriorityFolderDateField;
            }
            set {
                if ((this.PriorityFolderDateField.Equals(value) != true)) {
                    this.PriorityFolderDateField = value;
                    this.RaisePropertyChanged("PriorityFolderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpManifestItemId {
            get {
                return this.SpManifestItemIdField;
            }
            set {
                if ((this.SpManifestItemIdField.Equals(value) != true)) {
                    this.SpManifestItemIdField = value;
                    this.RaisePropertyChanged("SpManifestItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BoxManifestItemTransmitList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="BoxManifestItemTransmit")]
    [System.SerializableAttribute()]
    public class BoxManifestItemTransmitList : System.Collections.Generic.List<VastecOPMSP.FHSvc.BoxManifestItemTransmit> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxManifestItemTransmit", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class BoxManifestItemTransmit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxManifestItemTransmitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PackageConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransmitDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestItemId {
            get {
                return this.BoxManifestItemIdField;
            }
            set {
                if ((this.BoxManifestItemIdField.Equals(value) != true)) {
                    this.BoxManifestItemIdField = value;
                    this.RaisePropertyChanged("BoxManifestItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxManifestItemTransmitId {
            get {
                return this.BoxManifestItemTransmitIdField;
            }
            set {
                if ((this.BoxManifestItemTransmitIdField.Equals(value) != true)) {
                    this.BoxManifestItemTransmitIdField = value;
                    this.RaisePropertyChanged("BoxManifestItemTransmitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PackageConfirmed {
            get {
                return this.PackageConfirmedField;
            }
            set {
                if ((this.PackageConfirmedField.Equals(value) != true)) {
                    this.PackageConfirmedField = value;
                    this.RaisePropertyChanged("PackageConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransmitDate {
            get {
                return this.TransmitDateField;
            }
            set {
                if ((this.TransmitDateField.Equals(value) != true)) {
                    this.TransmitDateField = value;
                    this.RaisePropertyChanged("TransmitDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Customer")]
    [System.SerializableAttribute()]
    public class CustomerList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Customer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustomerActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFolderUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MetadataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsesBoxManifestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerActive {
            get {
                return this.CustomerActiveField;
            }
            set {
                if ((this.CustomerActiveField.Equals(value) != true)) {
                    this.CustomerActiveField = value;
                    this.RaisePropertyChanged("CustomerActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFolderUri {
            get {
                return this.CustomerFolderUriField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFolderUriField, value) != true)) {
                    this.CustomerFolderUriField = value;
                    this.RaisePropertyChanged("CustomerFolderUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNotes {
            get {
                return this.CustomerNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNotesField, value) != true)) {
                    this.CustomerNotesField = value;
                    this.RaisePropertyChanged("CustomerNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetadataTypeId {
            get {
                return this.MetadataTypeIdField;
            }
            set {
                if ((this.MetadataTypeIdField.Equals(value) != true)) {
                    this.MetadataTypeIdField = value;
                    this.RaisePropertyChanged("MetadataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsesBoxManifest {
            get {
                return this.UsesBoxManifestField;
            }
            set {
                if ((this.UsesBoxManifestField.Equals(value) != true)) {
                    this.UsesBoxManifestField = value;
                    this.RaisePropertyChanged("UsesBoxManifest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerUserRoleList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="CustomerUserRole")]
    [System.SerializableAttribute()]
    public class CustomerUserRoleList : System.Collections.Generic.List<VastecOPMSP.FHSvc.CustomerUserRole> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerUserRole", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class CustomerUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Customer CustomerObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerUserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.Role RoleObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.User UserObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Customer CustomerObject {
            get {
                return this.CustomerObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerObjectField, value) != true)) {
                    this.CustomerObjectField = value;
                    this.RaisePropertyChanged("CustomerObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerUserRoleId {
            get {
                return this.CustomerUserRoleIdField;
            }
            set {
                if ((this.CustomerUserRoleIdField.Equals(value) != true)) {
                    this.CustomerUserRoleIdField = value;
                    this.RaisePropertyChanged("CustomerUserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.Role RoleObject {
            get {
                return this.RoleObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleObjectField, value) != true)) {
                    this.RoleObjectField = value;
                    this.RaisePropertyChanged("RoleObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.User UserObject {
            get {
                return this.UserObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.UserObjectField, value) != true)) {
                    this.UserObjectField = value;
                    this.RaisePropertyChanged("UserObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.ActivityStatusValues", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    public enum DataViewActivityStatusValues : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unassigned = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assigned = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnStarted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Uncompleted = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DataView.ActivityStatusList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="DataView.ActivityStatus")]
    [System.SerializableAttribute()]
    public class DataViewActivityStatusList : System.Collections.Generic.List<VastecOPMSP.FHSvc.DataViewActivityStatus> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.ActivityStatus", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewActivityStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivityCreateTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityModifyTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedUserDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssignedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedUserLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssocRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutomatedProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BoxActivityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BoxFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BoxOnHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BoxVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFolderUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerMetadataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasOperationNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasUserNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IssueCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobActivityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JobDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobProfileLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MissingFormCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserPriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityAccepted {
            get {
                return this.ActivityAcceptedField;
            }
            set {
                if ((this.ActivityAcceptedField.Equals(value) != true)) {
                    this.ActivityAcceptedField = value;
                    this.RaisePropertyChanged("ActivityAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityAssigned {
            get {
                return this.ActivityAssignedField;
            }
            set {
                if ((this.ActivityAssignedField.Equals(value) != true)) {
                    this.ActivityAssignedField = value;
                    this.RaisePropertyChanged("ActivityAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityCompleted {
            get {
                return this.ActivityCompletedField;
            }
            set {
                if ((this.ActivityCompletedField.Equals(value) != true)) {
                    this.ActivityCompletedField = value;
                    this.RaisePropertyChanged("ActivityCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivityCreateTs {
            get {
                return this.ActivityCreateTsField;
            }
            set {
                if ((this.ActivityCreateTsField.Equals(value) != true)) {
                    this.ActivityCreateTsField = value;
                    this.RaisePropertyChanged("ActivityCreateTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivityDate {
            get {
                return this.ActivityDateField;
            }
            set {
                if ((this.ActivityDateField.Equals(value) != true)) {
                    this.ActivityDateField = value;
                    this.RaisePropertyChanged("ActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityModifyTs {
            get {
                return this.ActivityModifyTsField;
            }
            set {
                if ((this.ActivityModifyTsField.Equals(value) != true)) {
                    this.ActivityModifyTsField = value;
                    this.RaisePropertyChanged("ActivityModifyTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivityStarted {
            get {
                return this.ActivityStartedField;
            }
            set {
                if ((this.ActivityStartedField.Equals(value) != true)) {
                    this.ActivityStartedField = value;
                    this.RaisePropertyChanged("ActivityStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityTypeField, value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityVersion {
            get {
                return this.ActivityVersionField;
            }
            set {
                if ((this.ActivityVersionField.Equals(value) != true)) {
                    this.ActivityVersionField = value;
                    this.RaisePropertyChanged("ActivityVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedUserDomain {
            get {
                return this.AssignedUserDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedUserDomainField, value) != true)) {
                    this.AssignedUserDomainField = value;
                    this.RaisePropertyChanged("AssignedUserDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedUserId {
            get {
                return this.AssignedUserIdField;
            }
            set {
                if ((this.AssignedUserIdField.Equals(value) != true)) {
                    this.AssignedUserIdField = value;
                    this.RaisePropertyChanged("AssignedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedUserLogin {
            get {
                return this.AssignedUserLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedUserLoginField, value) != true)) {
                    this.AssignedUserLoginField = value;
                    this.RaisePropertyChanged("AssignedUserLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssocRoleId {
            get {
                return this.AssocRoleIdField;
            }
            set {
                if ((this.AssocRoleIdField.Equals(value) != true)) {
                    this.AssocRoleIdField = value;
                    this.RaisePropertyChanged("AssocRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AutomatedProcess {
            get {
                return this.AutomatedProcessField;
            }
            set {
                if ((this.AutomatedProcessField.Equals(value) != true)) {
                    this.AutomatedProcessField = value;
                    this.RaisePropertyChanged("AutomatedProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BoxActivityOrder {
            get {
                return this.BoxActivityOrderField;
            }
            set {
                if ((this.BoxActivityOrderField.Equals(value) != true)) {
                    this.BoxActivityOrderField = value;
                    this.RaisePropertyChanged("BoxActivityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BoxFinished {
            get {
                return this.BoxFinishedField;
            }
            set {
                if ((this.BoxFinishedField.Equals(value) != true)) {
                    this.BoxFinishedField = value;
                    this.RaisePropertyChanged("BoxFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxName {
            get {
                return this.BoxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxNameField, value) != true)) {
                    this.BoxNameField = value;
                    this.RaisePropertyChanged("BoxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BoxOnHold {
            get {
                return this.BoxOnHoldField;
            }
            set {
                if ((this.BoxOnHoldField.Equals(value) != true)) {
                    this.BoxOnHoldField = value;
                    this.RaisePropertyChanged("BoxOnHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxRelativePath {
            get {
                return this.BoxRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxRelativePathField, value) != true)) {
                    this.BoxRelativePathField = value;
                    this.RaisePropertyChanged("BoxRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BoxVersion {
            get {
                return this.BoxVersionField;
            }
            set {
                if ((this.BoxVersionField.Equals(value) != true)) {
                    this.BoxVersionField = value;
                    this.RaisePropertyChanged("BoxVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFolderUri {
            get {
                return this.CustomerFolderUriField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFolderUriField, value) != true)) {
                    this.CustomerFolderUriField = value;
                    this.RaisePropertyChanged("CustomerFolderUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerMetadataTypeId {
            get {
                return this.CustomerMetadataTypeIdField;
            }
            set {
                if ((this.CustomerMetadataTypeIdField.Equals(value) != true)) {
                    this.CustomerMetadataTypeIdField = value;
                    this.RaisePropertyChanged("CustomerMetadataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerProcessInfoId {
            get {
                return this.CustomerProcessInfoIdField;
            }
            set {
                if ((this.CustomerProcessInfoIdField.Equals(value) != true)) {
                    this.CustomerProcessInfoIdField = value;
                    this.RaisePropertyChanged("CustomerProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormCount {
            get {
                return this.FormCountField;
            }
            set {
                if ((this.FormCountField.Equals(value) != true)) {
                    this.FormCountField = value;
                    this.RaisePropertyChanged("FormCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOperationNotes {
            get {
                return this.HasOperationNotesField;
            }
            set {
                if ((this.HasOperationNotesField.Equals(value) != true)) {
                    this.HasOperationNotesField = value;
                    this.RaisePropertyChanged("HasOperationNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasUserNotes {
            get {
                return this.HasUserNotesField;
            }
            set {
                if ((this.HasUserNotesField.Equals(value) != true)) {
                    this.HasUserNotesField = value;
                    this.RaisePropertyChanged("HasUserNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IssueCount {
            get {
                return this.IssueCountField;
            }
            set {
                if ((this.IssueCountField.Equals(value) != true)) {
                    this.IssueCountField = value;
                    this.RaisePropertyChanged("IssueCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobActivityOrder {
            get {
                return this.JobActivityOrderField;
            }
            set {
                if ((this.JobActivityOrderField.Equals(value) != true)) {
                    this.JobActivityOrderField = value;
                    this.RaisePropertyChanged("JobActivityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JobDeadline {
            get {
                return this.JobDeadlineField;
            }
            set {
                if ((this.JobDeadlineField.Equals(value) != true)) {
                    this.JobDeadlineField = value;
                    this.RaisePropertyChanged("JobDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobPriority {
            get {
                return this.JobPriorityField;
            }
            set {
                if ((this.JobPriorityField.Equals(value) != true)) {
                    this.JobPriorityField = value;
                    this.RaisePropertyChanged("JobPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobProfileLocation {
            get {
                return this.JobProfileLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.JobProfileLocationField, value) != true)) {
                    this.JobProfileLocationField = value;
                    this.RaisePropertyChanged("JobProfileLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRelativePath {
            get {
                return this.JobRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRelativePathField, value) != true)) {
                    this.JobRelativePathField = value;
                    this.RaisePropertyChanged("JobRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MissingFormCount {
            get {
                return this.MissingFormCountField;
            }
            set {
                if ((this.MissingFormCountField.Equals(value) != true)) {
                    this.MissingFormCountField = value;
                    this.RaisePropertyChanged("MissingFormCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectLocationId {
            get {
                return this.ProjectLocationIdField;
            }
            set {
                if ((this.ProjectLocationIdField.Equals(value) != true)) {
                    this.ProjectLocationIdField = value;
                    this.RaisePropertyChanged("ProjectLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectProcessInfoId {
            get {
                return this.ProjectProcessInfoIdField;
            }
            set {
                if ((this.ProjectProcessInfoIdField.Equals(value) != true)) {
                    this.ProjectProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProjectProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectRelativePath {
            get {
                return this.ProjectRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectRelativePathField, value) != true)) {
                    this.ProjectRelativePathField = value;
                    this.RaisePropertyChanged("ProjectRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserPriority {
            get {
                return this.UserPriorityField;
            }
            set {
                if ((this.UserPriorityField.Equals(value) != true)) {
                    this.UserPriorityField = value;
                    this.RaisePropertyChanged("UserPriority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.ProcessingTotals", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewProcessingTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActivitiesInScanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AvgFormsPerFolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AvgPagesPerFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxesReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FoldersCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FoldersManifestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FoldersReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FormsCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueFoldersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PagesCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PagesTransmittedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PriorityFoldersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActivitiesInScan {
            get {
                return this.ActivitiesInScanField;
            }
            set {
                if ((this.ActivitiesInScanField.Equals(value) != true)) {
                    this.ActivitiesInScanField = value;
                    this.RaisePropertyChanged("ActivitiesInScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AvgFormsPerFolder {
            get {
                return this.AvgFormsPerFolderField;
            }
            set {
                if ((this.AvgFormsPerFolderField.Equals(value) != true)) {
                    this.AvgFormsPerFolderField = value;
                    this.RaisePropertyChanged("AvgFormsPerFolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AvgPagesPerForm {
            get {
                return this.AvgPagesPerFormField;
            }
            set {
                if ((this.AvgPagesPerFormField.Equals(value) != true)) {
                    this.AvgPagesPerFormField = value;
                    this.RaisePropertyChanged("AvgPagesPerForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxesReceived {
            get {
                return this.BoxesReceivedField;
            }
            set {
                if ((this.BoxesReceivedField.Equals(value) != true)) {
                    this.BoxesReceivedField = value;
                    this.RaisePropertyChanged("BoxesReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FoldersCompleted {
            get {
                return this.FoldersCompletedField;
            }
            set {
                if ((this.FoldersCompletedField.Equals(value) != true)) {
                    this.FoldersCompletedField = value;
                    this.RaisePropertyChanged("FoldersCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FoldersManifested {
            get {
                return this.FoldersManifestedField;
            }
            set {
                if ((this.FoldersManifestedField.Equals(value) != true)) {
                    this.FoldersManifestedField = value;
                    this.RaisePropertyChanged("FoldersManifested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FoldersReceived {
            get {
                return this.FoldersReceivedField;
            }
            set {
                if ((this.FoldersReceivedField.Equals(value) != true)) {
                    this.FoldersReceivedField = value;
                    this.RaisePropertyChanged("FoldersReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FormsCompleted {
            get {
                return this.FormsCompletedField;
            }
            set {
                if ((this.FormsCompletedField.Equals(value) != true)) {
                    this.FormsCompletedField = value;
                    this.RaisePropertyChanged("FormsCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueFolders {
            get {
                return this.IssueFoldersField;
            }
            set {
                if ((this.IssueFoldersField.Equals(value) != true)) {
                    this.IssueFoldersField = value;
                    this.RaisePropertyChanged("IssueFolders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeIdentifier {
            get {
                return this.OfficeIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeIdentifierField, value) != true)) {
                    this.OfficeIdentifierField = value;
                    this.RaisePropertyChanged("OfficeIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PagesCompleted {
            get {
                return this.PagesCompletedField;
            }
            set {
                if ((this.PagesCompletedField.Equals(value) != true)) {
                    this.PagesCompletedField = value;
                    this.RaisePropertyChanged("PagesCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PagesTransmitted {
            get {
                return this.PagesTransmittedField;
            }
            set {
                if ((this.PagesTransmittedField.Equals(value) != true)) {
                    this.PagesTransmittedField = value;
                    this.RaisePropertyChanged("PagesTransmitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PriorityFolders {
            get {
                return this.PriorityFoldersField;
            }
            set {
                if ((this.PriorityFoldersField.Equals(value) != true)) {
                    this.PriorityFoldersField = value;
                    this.RaisePropertyChanged("PriorityFolders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.UniqueSaveStateItems", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewUniqueSaveStateItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemTextCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFieldIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MdFieldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemText {
            get {
                return this.ItemTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTextField, value) != true)) {
                    this.ItemTextField = value;
                    this.RaisePropertyChanged("ItemText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemTextCount {
            get {
                return this.ItemTextCountField;
            }
            set {
                if ((this.ItemTextCountField.Equals(value) != true)) {
                    this.ItemTextCountField = value;
                    this.RaisePropertyChanged("ItemTextCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFieldIdentifierId {
            get {
                return this.MdFieldIdentifierIdField;
            }
            set {
                if ((this.MdFieldIdentifierIdField.Equals(value) != true)) {
                    this.MdFieldIdentifierIdField = value;
                    this.RaisePropertyChanged("MdFieldIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdFieldName {
            get {
                return this.MdFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MdFieldNameField, value) != true)) {
                    this.MdFieldNameField = value;
                    this.RaisePropertyChanged("MdFieldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.SaveStateValueLookup", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewSaveStateValueLookup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexSaveStateItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MdFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PdfFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoId {
            get {
                return this.FileInfoIdField;
            }
            set {
                if ((this.FileInfoIdField.Equals(value) != true)) {
                    this.FileInfoIdField = value;
                    this.RaisePropertyChanged("FileInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexSaveStateItemId {
            get {
                return this.IndexSaveStateItemIdField;
            }
            set {
                if ((this.IndexSaveStateItemIdField.Equals(value) != true)) {
                    this.IndexSaveStateItemIdField = value;
                    this.RaisePropertyChanged("IndexSaveStateItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdFieldName {
            get {
                return this.MdFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MdFieldNameField, value) != true)) {
                    this.MdFieldNameField = value;
                    this.RaisePropertyChanged("MdFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PdfFileName {
            get {
                return this.PdfFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PdfFileNameField, value) != true)) {
                    this.PdfFileNameField = value;
                    this.RaisePropertyChanged("PdfFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.SaveStateHistory", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewSaveStateHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MdFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PdfFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeToNextChangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemText {
            get {
                return this.ItemTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTextField, value) != true)) {
                    this.ItemTextField = value;
                    this.RaisePropertyChanged("ItemText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdFieldName {
            get {
                return this.MdFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MdFieldNameField, value) != true)) {
                    this.MdFieldNameField = value;
                    this.RaisePropertyChanged("MdFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PdfFileName {
            get {
                return this.PdfFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PdfFileNameField, value) != true)) {
                    this.PdfFileNameField = value;
                    this.RaisePropertyChanged("PdfFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordAction {
            get {
                return this.RecordActionField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordActionField, value) != true)) {
                    this.RecordActionField = value;
                    this.RaisePropertyChanged("RecordAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeToNextChange {
            get {
                return this.TimeToNextChangeField;
            }
            set {
                if ((this.TimeToNextChangeField.Equals(value) != true)) {
                    this.TimeToNextChangeField = value;
                    this.RaisePropertyChanged("TimeToNextChange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.FileTouchAvg", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewFileTouchAvg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AvgDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AvgTimeBetweenFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AvgTimeInFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TotalTimeInFilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AvgDelta {
            get {
                return this.AvgDeltaField;
            }
            set {
                if ((this.AvgDeltaField.Equals(value) != true)) {
                    this.AvgDeltaField = value;
                    this.RaisePropertyChanged("AvgDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AvgTimeBetweenFiles {
            get {
                return this.AvgTimeBetweenFilesField;
            }
            set {
                if ((this.AvgTimeBetweenFilesField.Equals(value) != true)) {
                    this.AvgTimeBetweenFilesField = value;
                    this.RaisePropertyChanged("AvgTimeBetweenFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AvgTimeInFile {
            get {
                return this.AvgTimeInFileField;
            }
            set {
                if ((this.AvgTimeInFileField.Equals(value) != true)) {
                    this.AvgTimeInFileField = value;
                    this.RaisePropertyChanged("AvgTimeInFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TotalTimeInFiles {
            get {
                return this.TotalTimeInFilesField;
            }
            set {
                if ((this.TotalTimeInFilesField.Equals(value) != true)) {
                    this.TotalTimeInFilesField = value;
                    this.RaisePropertyChanged("TotalTimeInFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.ProcessErrors", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewProcessErrors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.DataViewProcessErrorIssues[] IssueNotificationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProcessErrorDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessQueueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxActivityId {
            get {
                return this.BoxActivityIdField;
            }
            set {
                if ((this.BoxActivityIdField.Equals(value) != true)) {
                    this.BoxActivityIdField = value;
                    this.RaisePropertyChanged("BoxActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxRelativePath {
            get {
                return this.BoxRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxRelativePathField, value) != true)) {
                    this.BoxRelativePathField = value;
                    this.RaisePropertyChanged("BoxRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.DataViewProcessErrorIssues[] IssueNotificationList {
            get {
                return this.IssueNotificationListField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueNotificationListField, value) != true)) {
                    this.IssueNotificationListField = value;
                    this.RaisePropertyChanged("IssueNotificationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobActivityId {
            get {
                return this.JobActivityIdField;
            }
            set {
                if ((this.JobActivityIdField.Equals(value) != true)) {
                    this.JobActivityIdField = value;
                    this.RaisePropertyChanged("JobActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRelativePath {
            get {
                return this.JobRelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRelativePathField, value) != true)) {
                    this.JobRelativePathField = value;
                    this.RaisePropertyChanged("JobRelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProcessErrorDate {
            get {
                return this.ProcessErrorDateField;
            }
            set {
                if ((this.ProcessErrorDateField.Equals(value) != true)) {
                    this.ProcessErrorDateField = value;
                    this.RaisePropertyChanged("ProcessErrorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInfoId {
            get {
                return this.ProcessInfoIdField;
            }
            set {
                if ((this.ProcessInfoIdField.Equals(value) != true)) {
                    this.ProcessInfoIdField = value;
                    this.RaisePropertyChanged("ProcessInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessQueueId {
            get {
                return this.ProcessQueueIdField;
            }
            set {
                if ((this.ProcessQueueIdField.Equals(value) != true)) {
                    this.ProcessQueueIdField = value;
                    this.RaisePropertyChanged("ProcessQueueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataView.ProcessErrorIssues", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class DataViewProcessErrorIssues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDebugInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueNotificationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDebugInfo {
            get {
                return this.IssueDebugInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDebugInfoField, value) != true)) {
                    this.IssueDebugInfoField = value;
                    this.RaisePropertyChanged("IssueDebugInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueMessage {
            get {
                return this.IssueMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueMessageField, value) != true)) {
                    this.IssueMessageField = value;
                    this.RaisePropertyChanged("IssueMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueNotificationId {
            get {
                return this.IssueNotificationIdField;
            }
            set {
                if ((this.IssueNotificationIdField.Equals(value) != true)) {
                    this.IssueNotificationIdField = value;
                    this.RaisePropertyChanged("IssueNotificationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DocumentationList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="Documentation")]
    [System.SerializableAttribute()]
    public class DocumentationList : System.Collections.Generic.List<VastecOPMSP.FHSvc.Documentation> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Documentation", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class Documentation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChangeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DocumentationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalDocumentationUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalDocumentationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProjectLocationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ChangeUserId {
            get {
                return this.ChangeUserIdField;
            }
            set {
                if ((this.ChangeUserIdField.Equals(value) != true)) {
                    this.ChangeUserIdField = value;
                    this.RaisePropertyChanged("ChangeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTs {
            get {
                return this.CreateTsField;
            }
            set {
                if ((this.CreateTsField.Equals(value) != true)) {
                    this.CreateTsField = value;
                    this.RaisePropertyChanged("CreateTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocumentationId {
            get {
                return this.DocumentationIdField;
            }
            set {
                if ((this.DocumentationIdField.Equals(value) != true)) {
                    this.DocumentationIdField = value;
                    this.RaisePropertyChanged("DocumentationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalDocumentationUri {
            get {
                return this.ExternalDocumentationUriField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalDocumentationUriField, value) != true)) {
                    this.ExternalDocumentationUriField = value;
                    this.RaisePropertyChanged("ExternalDocumentationUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalDocumentation {
            get {
                return this.InternalDocumentationField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalDocumentationField, value) != true)) {
                    this.InternalDocumentationField = value;
                    this.RaisePropertyChanged("InternalDocumentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProjectLocationId {
            get {
                return this.ProjectLocationIdField;
            }
            set {
                if ((this.ProjectLocationIdField.Equals(value) != true)) {
                    this.ProjectLocationIdField = value;
                    this.RaisePropertyChanged("ProjectLocationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FileInfoList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="File_Info")]
    [System.SerializableAttribute()]
    public class FileInfoList : System.Collections.Generic.List<VastecOPMSP.FHSvc.File_Info> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File_Info", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class File_Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormTypeOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OcrEndPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OcrStartPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PdfFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QaConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserAccessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserReleasedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WasConfirmedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxFolderId {
            get {
                return this.BoxFolderIdField;
            }
            set {
                if ((this.BoxFolderIdField.Equals(value) != true)) {
                    this.BoxFolderIdField = value;
                    this.RaisePropertyChanged("BoxFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BoxId {
            get {
                return this.BoxIdField;
            }
            set {
                if ((this.BoxIdField.Equals(value) != true)) {
                    this.BoxIdField = value;
                    this.RaisePropertyChanged("BoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoId {
            get {
                return this.FileInfoIdField;
            }
            set {
                if ((this.FileInfoIdField.Equals(value) != true)) {
                    this.FileInfoIdField = value;
                    this.RaisePropertyChanged("FileInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormTypeOverride {
            get {
                return this.FormTypeOverrideField;
            }
            set {
                if ((object.ReferenceEquals(this.FormTypeOverrideField, value) != true)) {
                    this.FormTypeOverrideField = value;
                    this.RaisePropertyChanged("FormTypeOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexFileName {
            get {
                return this.IndexFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexFileNameField, value) != true)) {
                    this.IndexFileNameField = value;
                    this.RaisePropertyChanged("IndexFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MdFormId {
            get {
                return this.MdFormIdField;
            }
            set {
                if ((this.MdFormIdField.Equals(value) != true)) {
                    this.MdFormIdField = value;
                    this.RaisePropertyChanged("MdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OcrEndPage {
            get {
                return this.OcrEndPageField;
            }
            set {
                if ((this.OcrEndPageField.Equals(value) != true)) {
                    this.OcrEndPageField = value;
                    this.RaisePropertyChanged("OcrEndPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OcrStartPage {
            get {
                return this.OcrStartPageField;
            }
            set {
                if ((this.OcrStartPageField.Equals(value) != true)) {
                    this.OcrStartPageField = value;
                    this.RaisePropertyChanged("OcrStartPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PdfFileName {
            get {
                return this.PdfFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PdfFileNameField, value) != true)) {
                    this.PdfFileNameField = value;
                    this.RaisePropertyChanged("PdfFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QaConfirmed {
            get {
                return this.QaConfirmedField;
            }
            set {
                if ((this.QaConfirmedField.Equals(value) != true)) {
                    this.QaConfirmedField = value;
                    this.RaisePropertyChanged("QaConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceLocation {
            get {
                return this.SourceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceLocationField, value) != true)) {
                    this.SourceLocationField = value;
                    this.RaisePropertyChanged("SourceLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserAccessed {
            get {
                return this.UserAccessedField;
            }
            set {
                if ((this.UserAccessedField.Equals(value) != true)) {
                    this.UserAccessedField = value;
                    this.RaisePropertyChanged("UserAccessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserReleased {
            get {
                return this.UserReleasedField;
            }
            set {
                if ((this.UserReleasedField.Equals(value) != true)) {
                    this.UserReleasedField = value;
                    this.RaisePropertyChanged("UserReleased");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WasConfirmed {
            get {
                return this.WasConfirmedField;
            }
            set {
                if ((this.WasConfirmedField.Equals(value) != true)) {
                    this.WasConfirmedField = value;
                    this.RaisePropertyChanged("WasConfirmed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FileInfoPackageFormList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="FileInfoPackageForm")]
    [System.SerializableAttribute()]
    public class FileInfoPackageFormList : System.Collections.Generic.List<VastecOPMSP.FHSvc.FileInfoPackageForm> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfoPackageForm", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class FileInfoPackageForm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoPackageFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PdfStartPageNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoId {
            get {
                return this.FileInfoIdField;
            }
            set {
                if ((this.FileInfoIdField.Equals(value) != true)) {
                    this.FileInfoIdField = value;
                    this.RaisePropertyChanged("FileInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoPackageFormId {
            get {
                return this.FileInfoPackageFormIdField;
            }
            set {
                if ((this.FileInfoPackageFormIdField.Equals(value) != true)) {
                    this.FileInfoPackageFormIdField = value;
                    this.RaisePropertyChanged("FileInfoPackageFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFormId {
            get {
                return this.MdFormIdField;
            }
            set {
                if ((this.MdFormIdField.Equals(value) != true)) {
                    this.MdFormIdField = value;
                    this.RaisePropertyChanged("MdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PdfStartPageNumber {
            get {
                return this.PdfStartPageNumberField;
            }
            set {
                if ((this.PdfStartPageNumberField.Equals(value) != true)) {
                    this.PdfStartPageNumberField = value;
                    this.RaisePropertyChanged("PdfStartPageNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FileInfoFieldList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="FileInfoField")]
    [System.SerializableAttribute()]
    public class FileInfoFieldList : System.Collections.Generic.List<VastecOPMSP.FHSvc.FileInfoField> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfoField", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class FileInfoField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CharConfidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtractedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoFieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FileInfoPackageFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PdfPageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeBottomCoordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeLeftCoordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeRightCoordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimeTopCoordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CharConfidence {
            get {
                return this.CharConfidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CharConfidenceField, value) != true)) {
                    this.CharConfidenceField = value;
                    this.RaisePropertyChanged("CharConfidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtractedValue {
            get {
                return this.ExtractedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtractedValueField, value) != true)) {
                    this.ExtractedValueField = value;
                    this.RaisePropertyChanged("ExtractedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoFieldId {
            get {
                return this.FileInfoFieldIdField;
            }
            set {
                if ((this.FileInfoFieldIdField.Equals(value) != true)) {
                    this.FileInfoFieldIdField = value;
                    this.RaisePropertyChanged("FileInfoFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoId {
            get {
                return this.FileInfoIdField;
            }
            set {
                if ((this.FileInfoIdField.Equals(value) != true)) {
                    this.FileInfoIdField = value;
                    this.RaisePropertyChanged("FileInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FileInfoPackageFormId {
            get {
                return this.FileInfoPackageFormIdField;
            }
            set {
                if ((this.FileInfoPackageFormIdField.Equals(value) != true)) {
                    this.FileInfoPackageFormIdField = value;
                    this.RaisePropertyChanged("FileInfoPackageFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFieldId {
            get {
                return this.MdFieldIdField;
            }
            set {
                if ((this.MdFieldIdField.Equals(value) != true)) {
                    this.MdFieldIdField = value;
                    this.RaisePropertyChanged("MdFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PdfPageNumber {
            get {
                return this.PdfPageNumberField;
            }
            set {
                if ((this.PdfPageNumberField.Equals(value) != true)) {
                    this.PdfPageNumberField = value;
                    this.RaisePropertyChanged("PdfPageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeBottomCoord {
            get {
                return this.PrimeBottomCoordField;
            }
            set {
                if ((this.PrimeBottomCoordField.Equals(value) != true)) {
                    this.PrimeBottomCoordField = value;
                    this.RaisePropertyChanged("PrimeBottomCoord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeLeftCoord {
            get {
                return this.PrimeLeftCoordField;
            }
            set {
                if ((this.PrimeLeftCoordField.Equals(value) != true)) {
                    this.PrimeLeftCoordField = value;
                    this.RaisePropertyChanged("PrimeLeftCoord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeRightCoord {
            get {
                return this.PrimeRightCoordField;
            }
            set {
                if ((this.PrimeRightCoordField.Equals(value) != true)) {
                    this.PrimeRightCoordField = value;
                    this.RaisePropertyChanged("PrimeRightCoord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimeTopCoord {
            get {
                return this.PrimeTopCoordField;
            }
            set {
                if ((this.PrimeTopCoordField.Equals(value) != true)) {
                    this.PrimeTopCoordField = value;
                    this.RaisePropertyChanged("PrimeTopCoord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IndexProfileList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="IndexProfile")]
    [System.SerializableAttribute()]
    public class IndexProfileList : System.Collections.Generic.List<VastecOPMSP.FHSvc.IndexProfile> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfile", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxFilenameSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MdFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MetadataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileId {
            get {
                return this.IndexProfileIdField;
            }
            set {
                if ((this.IndexProfileIdField.Equals(value) != true)) {
                    this.IndexProfileIdField = value;
                    this.RaisePropertyChanged("IndexProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxFilenameSize {
            get {
                return this.MaxFilenameSizeField;
            }
            set {
                if ((this.MaxFilenameSizeField.Equals(value) != true)) {
                    this.MaxFilenameSizeField = value;
                    this.RaisePropertyChanged("MaxFilenameSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MdFormId {
            get {
                return this.MdFormIdField;
            }
            set {
                if ((this.MdFormIdField.Equals(value) != true)) {
                    this.MdFormIdField = value;
                    this.RaisePropertyChanged("MdFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MetadataTypeId {
            get {
                return this.MetadataTypeIdField;
            }
            set {
                if ((this.MetadataTypeIdField.Equals(value) != true)) {
                    this.MetadataTypeIdField = value;
                    this.RaisePropertyChanged("MetadataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IndexProfileItemList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="IndexProfileItem")]
    [System.SerializableAttribute()]
    public class IndexProfileItemList : System.Collections.Generic.List<VastecOPMSP.FHSvc.IndexProfileItem> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfileItem", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexProfileItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowCloningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.IndexProfileItem.AlternateMdFieldIdentifierItem[] AlternateMdFieldIdentifierIdListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameCharSubsFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameCharSubsToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameDefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FilenamePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameStringFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalUniqueKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.IndexProfileItemAssocData IndexProfileItemAssocDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.IndexProfileItemAssoc[] IndexProfileItemAssocListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VastecOPMSP.FHSvc.IndexProfileItemPickListItem[] IndexProfileItemPickListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutoCapitalizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutofillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBoxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDateFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDateParsePairField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFullTextEditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIndexedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsJobNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMultilineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOperatorFeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPickListDropDownBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRichTextEditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaximumTextLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MdFieldIdentifierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataDefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MetadataPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataStringFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MultilineDelimiterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MultilineNumItemsInFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegexValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaticValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSpellCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSpellCheckSuggestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ValidYearFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ValidYearToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowCloning {
            get {
                return this.AllowCloningField;
            }
            set {
                if ((this.AllowCloningField.Equals(value) != true)) {
                    this.AllowCloningField = value;
                    this.RaisePropertyChanged("AllowCloning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.IndexProfileItem.AlternateMdFieldIdentifierItem[] AlternateMdFieldIdentifierIdList {
            get {
                return this.AlternateMdFieldIdentifierIdListField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateMdFieldIdentifierIdListField, value) != true)) {
                    this.AlternateMdFieldIdentifierIdListField = value;
                    this.RaisePropertyChanged("AlternateMdFieldIdentifierIdList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldLabel {
            get {
                return this.FieldLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldLabelField, value) != true)) {
                    this.FieldLabelField = value;
                    this.RaisePropertyChanged("FieldLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldPosition {
            get {
                return this.FieldPositionField;
            }
            set {
                if ((this.FieldPositionField.Equals(value) != true)) {
                    this.FieldPositionField = value;
                    this.RaisePropertyChanged("FieldPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameCharSubsFrom {
            get {
                return this.FilenameCharSubsFromField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameCharSubsFromField, value) != true)) {
                    this.FilenameCharSubsFromField = value;
                    this.RaisePropertyChanged("FilenameCharSubsFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameCharSubsTo {
            get {
                return this.FilenameCharSubsToField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameCharSubsToField, value) != true)) {
                    this.FilenameCharSubsToField = value;
                    this.RaisePropertyChanged("FilenameCharSubsTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameDefaultValue {
            get {
                return this.FilenameDefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameDefaultValueField, value) != true)) {
                    this.FilenameDefaultValueField = value;
                    this.RaisePropertyChanged("FilenameDefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FilenamePosition {
            get {
                return this.FilenamePositionField;
            }
            set {
                if ((this.FilenamePositionField.Equals(value) != true)) {
                    this.FilenamePositionField = value;
                    this.RaisePropertyChanged("FilenamePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameStringFormat {
            get {
                return this.FilenameStringFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameStringFormatField, value) != true)) {
                    this.FilenameStringFormatField = value;
                    this.RaisePropertyChanged("FilenameStringFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalUniqueKey {
            get {
                return this.GlobalUniqueKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalUniqueKeyField, value) != true)) {
                    this.GlobalUniqueKeyField = value;
                    this.RaisePropertyChanged("GlobalUniqueKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileId {
            get {
                return this.IndexProfileIdField;
            }
            set {
                if ((this.IndexProfileIdField.Equals(value) != true)) {
                    this.IndexProfileIdField = value;
                    this.RaisePropertyChanged("IndexProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.IndexProfileItemAssocData IndexProfileItemAssocData {
            get {
                return this.IndexProfileItemAssocDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexProfileItemAssocDataField, value) != true)) {
                    this.IndexProfileItemAssocDataField = value;
                    this.RaisePropertyChanged("IndexProfileItemAssocData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.IndexProfileItemAssoc[] IndexProfileItemAssocList {
            get {
                return this.IndexProfileItemAssocListField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexProfileItemAssocListField, value) != true)) {
                    this.IndexProfileItemAssocListField = value;
                    this.RaisePropertyChanged("IndexProfileItemAssocList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemId {
            get {
                return this.IndexProfileItemIdField;
            }
            set {
                if ((this.IndexProfileItemIdField.Equals(value) != true)) {
                    this.IndexProfileItemIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VastecOPMSP.FHSvc.IndexProfileItemPickListItem[] IndexProfileItemPickList {
            get {
                return this.IndexProfileItemPickListField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexProfileItemPickListField, value) != true)) {
                    this.IndexProfileItemPickListField = value;
                    this.RaisePropertyChanged("IndexProfileItemPickList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutoCapitalize {
            get {
                return this.IsAutoCapitalizeField;
            }
            set {
                if ((this.IsAutoCapitalizeField.Equals(value) != true)) {
                    this.IsAutoCapitalizeField = value;
                    this.RaisePropertyChanged("IsAutoCapitalize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutofill {
            get {
                return this.IsAutofillField;
            }
            set {
                if ((this.IsAutofillField.Equals(value) != true)) {
                    this.IsAutofillField = value;
                    this.RaisePropertyChanged("IsAutofill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBoxNumber {
            get {
                return this.IsBoxNumberField;
            }
            set {
                if ((this.IsBoxNumberField.Equals(value) != true)) {
                    this.IsBoxNumberField = value;
                    this.RaisePropertyChanged("IsBoxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDateField {
            get {
                return this.IsDateFieldField;
            }
            set {
                if ((this.IsDateFieldField.Equals(value) != true)) {
                    this.IsDateFieldField = value;
                    this.RaisePropertyChanged("IsDateField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDateParsePair {
            get {
                return this.IsDateParsePairField;
            }
            set {
                if ((this.IsDateParsePairField.Equals(value) != true)) {
                    this.IsDateParsePairField = value;
                    this.RaisePropertyChanged("IsDateParsePair");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFullTextEditor {
            get {
                return this.IsFullTextEditorField;
            }
            set {
                if ((this.IsFullTextEditorField.Equals(value) != true)) {
                    this.IsFullTextEditorField = value;
                    this.RaisePropertyChanged("IsFullTextEditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIndexed {
            get {
                return this.IsIndexedField;
            }
            set {
                if ((this.IsIndexedField.Equals(value) != true)) {
                    this.IsIndexedField = value;
                    this.RaisePropertyChanged("IsIndexed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsJobNumber {
            get {
                return this.IsJobNumberField;
            }
            set {
                if ((this.IsJobNumberField.Equals(value) != true)) {
                    this.IsJobNumberField = value;
                    this.RaisePropertyChanged("IsJobNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMultiline {
            get {
                return this.IsMultilineField;
            }
            set {
                if ((this.IsMultilineField.Equals(value) != true)) {
                    this.IsMultilineField = value;
                    this.RaisePropertyChanged("IsMultiline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOperatorFeedback {
            get {
                return this.IsOperatorFeedbackField;
            }
            set {
                if ((this.IsOperatorFeedbackField.Equals(value) != true)) {
                    this.IsOperatorFeedbackField = value;
                    this.RaisePropertyChanged("IsOperatorFeedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPickListDropDownBox {
            get {
                return this.IsPickListDropDownBoxField;
            }
            set {
                if ((this.IsPickListDropDownBoxField.Equals(value) != true)) {
                    this.IsPickListDropDownBoxField = value;
                    this.RaisePropertyChanged("IsPickListDropDownBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired {
            get {
                return this.IsRequiredField;
            }
            set {
                if ((this.IsRequiredField.Equals(value) != true)) {
                    this.IsRequiredField = value;
                    this.RaisePropertyChanged("IsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRichTextEditor {
            get {
                return this.IsRichTextEditorField;
            }
            set {
                if ((this.IsRichTextEditorField.Equals(value) != true)) {
                    this.IsRichTextEditorField = value;
                    this.RaisePropertyChanged("IsRichTextEditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaximumTextLength {
            get {
                return this.MaximumTextLengthField;
            }
            set {
                if ((this.MaximumTextLengthField.Equals(value) != true)) {
                    this.MaximumTextLengthField = value;
                    this.RaisePropertyChanged("MaximumTextLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MdFieldIdentifierId {
            get {
                return this.MdFieldIdentifierIdField;
            }
            set {
                if ((this.MdFieldIdentifierIdField.Equals(value) != true)) {
                    this.MdFieldIdentifierIdField = value;
                    this.RaisePropertyChanged("MdFieldIdentifierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataDefaultValue {
            get {
                return this.MetadataDefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataDefaultValueField, value) != true)) {
                    this.MetadataDefaultValueField = value;
                    this.RaisePropertyChanged("MetadataDefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataFieldName {
            get {
                return this.MetadataFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataFieldNameField, value) != true)) {
                    this.MetadataFieldNameField = value;
                    this.RaisePropertyChanged("MetadataFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MetadataPosition {
            get {
                return this.MetadataPositionField;
            }
            set {
                if ((this.MetadataPositionField.Equals(value) != true)) {
                    this.MetadataPositionField = value;
                    this.RaisePropertyChanged("MetadataPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataStringFormat {
            get {
                return this.MetadataStringFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataStringFormatField, value) != true)) {
                    this.MetadataStringFormatField = value;
                    this.RaisePropertyChanged("MetadataStringFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MultilineDelimiter {
            get {
                return this.MultilineDelimiterField;
            }
            set {
                if ((object.ReferenceEquals(this.MultilineDelimiterField, value) != true)) {
                    this.MultilineDelimiterField = value;
                    this.RaisePropertyChanged("MultilineDelimiter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MultilineNumItemsInFilename {
            get {
                return this.MultilineNumItemsInFilenameField;
            }
            set {
                if ((this.MultilineNumItemsInFilenameField.Equals(value) != true)) {
                    this.MultilineNumItemsInFilenameField = value;
                    this.RaisePropertyChanged("MultilineNumItemsInFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegexValidation {
            get {
                return this.RegexValidationField;
            }
            set {
                if ((object.ReferenceEquals(this.RegexValidationField, value) != true)) {
                    this.RegexValidationField = value;
                    this.RaisePropertyChanged("RegexValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaticValue {
            get {
                return this.StaticValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StaticValueField, value) != true)) {
                    this.StaticValueField = value;
                    this.RaisePropertyChanged("StaticValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSpellCheck {
            get {
                return this.UseSpellCheckField;
            }
            set {
                if ((this.UseSpellCheckField.Equals(value) != true)) {
                    this.UseSpellCheckField = value;
                    this.RaisePropertyChanged("UseSpellCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSpellCheckSuggestions {
            get {
                return this.UseSpellCheckSuggestionsField;
            }
            set {
                if ((this.UseSpellCheckSuggestionsField.Equals(value) != true)) {
                    this.UseSpellCheckSuggestionsField = value;
                    this.RaisePropertyChanged("UseSpellCheckSuggestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ValidYearFrom {
            get {
                return this.ValidYearFromField;
            }
            set {
                if ((this.ValidYearFromField.Equals(value) != true)) {
                    this.ValidYearFromField = value;
                    this.RaisePropertyChanged("ValidYearFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ValidYearTo {
            get {
                return this.ValidYearToField;
            }
            set {
                if ((this.ValidYearToField.Equals(value) != true)) {
                    this.ValidYearToField = value;
                    this.RaisePropertyChanged("ValidYearTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfileItem.AlternateMdFieldIdentifierItem", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
        [System.SerializableAttribute()]
        public partial class AlternateMdFieldIdentifierItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long IndexProfileItemAltMdFieldIdentifierIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long MdFieldIdentifierIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int PrecedenceOrderField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long IndexProfileItemAltMdFieldIdentifierId {
                get {
                    return this.IndexProfileItemAltMdFieldIdentifierIdField;
                }
                set {
                    if ((this.IndexProfileItemAltMdFieldIdentifierIdField.Equals(value) != true)) {
                        this.IndexProfileItemAltMdFieldIdentifierIdField = value;
                        this.RaisePropertyChanged("IndexProfileItemAltMdFieldIdentifierId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long MdFieldIdentifierId {
                get {
                    return this.MdFieldIdentifierIdField;
                }
                set {
                    if ((this.MdFieldIdentifierIdField.Equals(value) != true)) {
                        this.MdFieldIdentifierIdField = value;
                        this.RaisePropertyChanged("MdFieldIdentifierId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int PrecedenceOrder {
                get {
                    return this.PrecedenceOrderField;
                }
                set {
                    if ((this.PrecedenceOrderField.Equals(value) != true)) {
                        this.PrecedenceOrderField = value;
                        this.RaisePropertyChanged("PrecedenceOrder");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfileItemAssocData", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexProfileItemAssocData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemAssocDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemAssocListIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IndexProfileItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionName {
            get {
                return this.CollectionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionNameField, value) != true)) {
                    this.CollectionNameField = value;
                    this.RaisePropertyChanged("CollectionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemAssocDataId {
            get {
                return this.IndexProfileItemAssocDataIdField;
            }
            set {
                if ((this.IndexProfileItemAssocDataIdField.Equals(value) != true)) {
                    this.IndexProfileItemAssocDataIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemAssocDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemAssocListId {
            get {
                return this.IndexProfileItemAssocListIdField;
            }
            set {
                if ((this.IndexProfileItemAssocListIdField.Equals(value) != true)) {
                    this.IndexProfileItemAssocListIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemAssocListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IndexProfileItemId {
            get {
                return this.IndexProfileItemIdField;
            }
            set {
                if ((this.IndexProfileItemIdField.Equals(value) != true)) {
                    this.IndexProfileItemIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfileItemAssoc", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexProfileItemAssoc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AssocListLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemAssocIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ListItemFilenamePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListItemMetadataNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ListItemMetadataPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AssocListLevel {
            get {
                return this.AssocListLevelField;
            }
            set {
                if ((this.AssocListLevelField.Equals(value) != true)) {
                    this.AssocListLevelField = value;
                    this.RaisePropertyChanged("AssocListLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemAssocId {
            get {
                return this.IndexProfileItemAssocIdField;
            }
            set {
                if ((this.IndexProfileItemAssocIdField.Equals(value) != true)) {
                    this.IndexProfileItemAssocIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemAssocId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemId {
            get {
                return this.IndexProfileItemIdField;
            }
            set {
                if ((this.IndexProfileItemIdField.Equals(value) != true)) {
                    this.IndexProfileItemIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ListItemFilenamePosition {
            get {
                return this.ListItemFilenamePositionField;
            }
            set {
                if ((this.ListItemFilenamePositionField.Equals(value) != true)) {
                    this.ListItemFilenamePositionField = value;
                    this.RaisePropertyChanged("ListItemFilenamePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListItemMetadataName {
            get {
                return this.ListItemMetadataNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemMetadataNameField, value) != true)) {
                    this.ListItemMetadataNameField = value;
                    this.RaisePropertyChanged("ListItemMetadataName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ListItemMetadataPosition {
            get {
                return this.ListItemMetadataPositionField;
            }
            set {
                if ((this.ListItemMetadataPositionField.Equals(value) != true)) {
                    this.ListItemMetadataPositionField = value;
                    this.RaisePropertyChanged("ListItemMetadataPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfileItemPickListItem", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexProfileItemPickListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IndexProfilePicklistItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicklistItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemId {
            get {
                return this.IndexProfileItemIdField;
            }
            set {
                if ((this.IndexProfileItemIdField.Equals(value) != true)) {
                    this.IndexProfileItemIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IndexProfilePicklistItemId {
            get {
                return this.IndexProfilePicklistItemIdField;
            }
            set {
                if ((this.IndexProfilePicklistItemIdField.Equals(value) != true)) {
                    this.IndexProfilePicklistItemIdField = value;
                    this.RaisePropertyChanged("IndexProfilePicklistItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicklistItem {
            get {
                return this.PicklistItemField;
            }
            set {
                if ((object.ReferenceEquals(this.PicklistItemField, value) != true)) {
                    this.PicklistItemField = value;
                    this.RaisePropertyChanged("PicklistItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexProfileItemAssocList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexProfileItemAssocList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemAssocListIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NodeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParentAssocListIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemAssocListId {
            get {
                return this.IndexProfileItemAssocListIdField;
            }
            set {
                if ((this.IndexProfileItemAssocListIdField.Equals(value) != true)) {
                    this.IndexProfileItemAssocListIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemAssocListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NodeLevel {
            get {
                return this.NodeLevelField;
            }
            set {
                if ((this.NodeLevelField.Equals(value) != true)) {
                    this.NodeLevelField = value;
                    this.RaisePropertyChanged("NodeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeValue {
            get {
                return this.NodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeValueField, value) != true)) {
                    this.NodeValueField = value;
                    this.RaisePropertyChanged("NodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ParentAssocListId {
            get {
                return this.ParentAssocListIdField;
            }
            set {
                if ((this.ParentAssocListIdField.Equals(value) != true)) {
                    this.ParentAssocListIdField = value;
                    this.RaisePropertyChanged("ParentAssocListId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IndexSaveStateItemList", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business", ItemName="IndexSaveStateItem")]
    [System.SerializableAttribute()]
    public class IndexSaveStateItemList : System.Collections.Generic.List<VastecOPMSP.FHSvc.IndexSaveStateItem> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexSaveStateItem", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class IndexSaveStateItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChangeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexProfileItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndexSaveStateItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MdFieldIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ChangeUserId {
            get {
                return this.ChangeUserIdField;
            }
            set {
                if ((this.ChangeUserIdField.Equals(value) != true)) {
                    this.ChangeUserIdField = value;
                    this.RaisePropertyChanged("ChangeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileInfoId {
            get {
                return this.FileInfoIdField;
            }
            set {
                if ((this.FileInfoIdField.Equals(value) != true)) {
                    this.FileInfoIdField = value;
                    this.RaisePropertyChanged("FileInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexProfileItemId {
            get {
                return this.IndexProfileItemIdField;
            }
            set {
                if ((this.IndexProfileItemIdField.Equals(value) != true)) {
                    this.IndexProfileItemIdField = value;
                    this.RaisePropertyChanged("IndexProfileItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndexSaveStateItemId {
            get {
                return this.IndexSaveStateItemIdField;
            }
            set {
                if ((this.IndexSaveStateItemIdField.Equals(value) != true)) {
                    this.IndexSaveStateItemIdField = value;
                    this.RaisePropertyChanged("IndexSaveStateItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemText {
            get {
                return this.ItemTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTextField, value) != true)) {
                    this.ItemTextField = value;
                    this.RaisePropertyChanged("ItemText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MdFieldId {
            get {
                return this.MdFieldIdField;
            }
            set {
                if ((this.MdFieldIdField.Equals(value) != true)) {
                    this.MdFieldIdField = value;
                    this.RaisePropertyChanged("MdFieldId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UniqueItemText", Namespace="http://schemas.datacontract.org/2004/07/FlowHubData.Business")]
    [System.SerializableAttribute()]
    public partial class UniqueItemText : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MdFieldIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifyTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsageCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemText {
            get {
                return this.ItemTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTextField, value) != true)) {
                    this.ItemTextField = value;
                    this.RaisePropertyChanged("ItemText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MdFieldIdentifier {
            get {
                return this.MdFieldIdentifierField;
            }
            set {
                if ((this.MdFieldIdentifierField.Equals(value) != true)) {
                    this.MdFieldIdentifierField = value;
                    this.RaisePropertyChanged("MdFieldIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyTime {
            get {
                return this.ModifyTimeField;
            }
            set {
                if ((this.ModifyTimeField.Equals(value) != true)) {
                    this.ModifyTimeField = value;
                    this.RaisePropertyChanged("ModifyTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsageCount {
            get {
                return this.UsageCountField;
            }
            set {
                if ((this.UsageCountField.Equals(value) != true)) {
                    this.UsageCountField = value;
                    this.RaisePropertyChanged("UsageCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Vastec.FlowHub.Service", ConfigurationName="FHSvc.IFlowHub")]
    public interface IFlowHub {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierInsertResponse")]
        long ProjectOfficeIdentifierInsert(long projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierInsertResponse")]
        System.Threading.Tasks.Task<long> ProjectOfficeIdentifierInsertAsync(long projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierUpdateResponse")]
        void ProjectOfficeIdentifierUpdate(long projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, System.Nullable<bool> isActive, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierUpdateResponse")]
        System.Threading.Tasks.Task ProjectOfficeIdentifierUpdateAsync(long projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, System.Nullable<bool> isActive, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierDeleteResponse")]
        int ProjectOfficeIdentifierDelete(long projectOfficeIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierDeleteResponse")]
        System.Threading.Tasks.Task<int> ProjectOfficeIdentifierDeleteAsync(long projectOfficeIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowGetListResponse")]
        VastecOPMSP.FHSvc.ProjectWorkflowList ProjectWorkflowGetList(System.Nullable<long> projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectWorkflowList> ProjectWorkflowGetListAsync(System.Nullable<long> projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowInsertResponse")]
        long ProjectWorkflowInsert(long projectId, long workflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowInsertResponse")]
        System.Threading.Tasks.Task<long> ProjectWorkflowInsertAsync(long projectId, long workflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdateResponse")]
        void ProjectWorkflowUpdate(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdateResponse")]
        System.Threading.Tasks.Task ProjectWorkflowUpdateAsync(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdateSafeResponse")]
        void ProjectWorkflowUpdateSafe(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowUpdateSafeResponse")]
        System.Threading.Tasks.Task ProjectWorkflowUpdateSafeAsync(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowDeleteResponse")]
        int ProjectWorkflowDelete(long projectWorkflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectWorkflowDeleteResponse")]
        System.Threading.Tasks.Task<int> ProjectWorkflowDeleteAsync(long projectWorkflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleGetListResponse")]
        VastecOPMSP.FHSvc.RoleList RoleGetList(string roleGroup, System.Nullable<bool> roleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.RoleList> RoleGetListAsync(string roleGroup, System.Nullable<bool> roleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleInsertResponse")]
        long RoleInsert(string roleGroup, string roleName, int displayOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleInsertResponse")]
        System.Threading.Tasks.Task<long> RoleInsertAsync(string roleGroup, string roleName, int displayOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleUpdateResponse")]
        void RoleUpdate(long roleId, string roleGroup, string roleName, System.Nullable<int> displayOrder, System.Nullable<bool> roleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleUpdateResponse")]
        System.Threading.Tasks.Task RoleUpdateAsync(long roleId, string roleGroup, string roleName, System.Nullable<int> displayOrder, System.Nullable<bool> roleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleDeleteResponse")]
        int RoleDelete(long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/RoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/RoleDeleteResponse")]
        System.Threading.Tasks.Task<int> RoleDeleteAsync(long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamGetListResponse")]
        VastecOPMSP.FHSvc.TeamList TeamGetList(System.Nullable<long> teamId, string teamIdentifier, System.Nullable<bool> teamActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamList> TeamGetListAsync(System.Nullable<long> teamId, string teamIdentifier, System.Nullable<bool> teamActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetTeamWithMemberInfoList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetTeamWithMemberInfoListResponse")]
        VastecOPMSP.FHSvc.TeamList GetTeamWithMemberInfoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetTeamWithMemberInfoList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetTeamWithMemberInfoListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamList> GetTeamWithMemberInfoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamInsertResponse")]
        long TeamInsert(string teamIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamInsertResponse")]
        System.Threading.Tasks.Task<long> TeamInsertAsync(string teamIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdateResponse")]
        void TeamUpdate(long teamId, string teamIdentifier, System.Nullable<bool> teamActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdateResponse")]
        System.Threading.Tasks.Task TeamUpdateAsync(long teamId, string teamIdentifier, System.Nullable<bool> teamActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdateSafeResponse")]
        void TeamUpdateSafe(long teamId, string teamIdentifier, System.Nullable<bool> teamActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUpdateSafeResponse")]
        System.Threading.Tasks.Task TeamUpdateSafeAsync(long teamId, string teamIdentifier, System.Nullable<bool> teamActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamDeleteResponse")]
        int TeamDelete(long teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamDeleteResponse")]
        System.Threading.Tasks.Task<int> TeamDeleteAsync(long teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserGetListResponse")]
        VastecOPMSP.FHSvc.TeamUserList TeamUserGetList(System.Nullable<long> teamUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamUserList> TeamUserGetListAsync(System.Nullable<long> teamUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserInsertResponse")]
        long TeamUserInsert(long teamId, long userId, System.Nullable<bool> teamLead, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserInsertResponse")]
        System.Threading.Tasks.Task<long> TeamUserInsertAsync(long teamId, long userId, System.Nullable<bool> teamLead, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdateResponse")]
        void TeamUserUpdate(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdateResponse")]
        System.Threading.Tasks.Task TeamUserUpdateAsync(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdateSafeResponse")]
        void TeamUserUpdateSafe(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserUpdateSafeResponse")]
        System.Threading.Tasks.Task TeamUserUpdateSafeAsync(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserDeleteResponse")]
        int TeamUserDelete(long teamUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserDeleteResponse")]
        System.Threading.Tasks.Task<int> TeamUserDeleteAsync(long teamUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleGetListResponse")]
        VastecOPMSP.FHSvc.TeamUserRoleList TeamUserRoleGetList(System.Nullable<long> teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamUserRoleList> TeamUserRoleGetListAsync(System.Nullable<long> teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleInsertResponse")]
        long TeamUserRoleInsert(long teamUserId, long roleId, int teamUserRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleInsertResponse")]
        System.Threading.Tasks.Task<long> TeamUserRoleInsertAsync(long teamUserId, long roleId, int teamUserRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdateResponse")]
        void TeamUserRoleUpdate(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdateResponse")]
        System.Threading.Tasks.Task TeamUserRoleUpdateAsync(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdateSafeResponse")]
        void TeamUserRoleUpdateSafe(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleUpdateSafeResponse")]
        System.Threading.Tasks.Task TeamUserRoleUpdateSafeAsync(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleDeleteResponse")]
        int TeamUserRoleDelete(long teamUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/TeamUserRoleDeleteResponse")]
        System.Threading.Tasks.Task<int> TeamUserRoleDeleteAsync(long teamUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesByLogin", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesByLoginResponse")]
        VastecOPMSP.FHSvc.User UserGetWithRolesByLogin(long locationId, string domainName, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesByLogin", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesByLoginResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.User> UserGetWithRolesByLoginAsync(long locationId, string domainName, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesById", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesByIdResponse")]
        VastecOPMSP.FHSvc.User UserGetWithRolesById(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesById", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserGetWithRolesByIdResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.User> UserGetWithRolesByIdAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserGetListResponse")]
        VastecOPMSP.FHSvc.UserList UserGetList(System.Nullable<long> userId, string domain, string login, System.Nullable<bool> userActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserList> UserGetListAsync(System.Nullable<long> userId, string domain, string login, System.Nullable<bool> userActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithJobActivityRoleList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithJobActivityRoleListResponse")]
        VastecOPMSP.FHSvc.UserList GetUserWithJobActivityRoleList(long jobActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithJobActivityRoleList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithJobActivityRoleListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserList> GetUserWithJobActivityRoleListAsync(long jobActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithBoxActivityRoleList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithBoxActivityRoleListResponse")]
        VastecOPMSP.FHSvc.UserList GetUserWithBoxActivityRoleList(long boxActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithBoxActivityRoleList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithBoxActivityRoleListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserList> GetUserWithBoxActivityRoleListAsync(long boxActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithRolesList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithRolesListResponse")]
        string GetUserWithRolesList(System.Nullable<long> userId, System.Nullable<long> teamId, string domain, string login, System.Nullable<bool> userActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithRolesList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUserWithRolesListResponse")]
        System.Threading.Tasks.Task<string> GetUserWithRolesListAsync(System.Nullable<long> userId, System.Nullable<long> teamId, string domain, string login, System.Nullable<bool> userActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRegister", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRegisterResponse")]
        long UserRegister(long locationId, string domain, string login, string lastName, string firstName, bool setLastLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRegister", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRegisterResponse")]
        System.Threading.Tasks.Task<long> UserRegisterAsync(long locationId, string domain, string login, string lastName, string firstName, bool setLastLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserInsertResponse")]
        long UserInsert(long locationId, string domain, string login, string lastName, string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserInsertResponse")]
        System.Threading.Tasks.Task<long> UserInsertAsync(long locationId, string domain, string login, string lastName, string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserUpdateResponse")]
        void UserUpdate(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserUpdateResponse")]
        System.Threading.Tasks.Task UserUpdateAsync(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserUpdateSafeResponse")]
        void UserUpdateSafe(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserUpdateSafeResponse")]
        System.Threading.Tasks.Task UserUpdateSafeAsync(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserDeleteResponse")]
        int UserDelete(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserDeleteResponse")]
        System.Threading.Tasks.Task<int> UserDeleteAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityGetListResponse")]
        VastecOPMSP.FHSvc.UserActivity[] UserActivityGetList(System.Nullable<long> userActivityId, System.Nullable<long> userId, string activityName, System.Nullable<System.DateTime> activityTimeStart, System.Nullable<System.DateTime> activityTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserActivity[]> UserActivityGetListAsync(System.Nullable<long> userActivityId, System.Nullable<long> userId, string activityName, System.Nullable<System.DateTime> activityTimeStart, System.Nullable<System.DateTime> activityTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityInsertResponse")]
        long UserActivityInsert(long userId, string activityName, System.Nullable<System.DateTime> activityStartTime, System.Nullable<System.DateTime> activityEndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityInsertResponse")]
        System.Threading.Tasks.Task<long> UserActivityInsertAsync(long userId, string activityName, System.Nullable<System.DateTime> activityStartTime, System.Nullable<System.DateTime> activityEndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityUpdateResponse")]
        void UserActivityUpdate(long userActivityId, System.DateTime activityEndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityUpdateResponse")]
        System.Threading.Tasks.Task UserActivityUpdateAsync(long userActivityId, System.DateTime activityEndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityDeleteResponse")]
        int UserActivityDelete(long userActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserActivityDeleteResponse")]
        System.Threading.Tasks.Task<int> UserActivityDeleteAsync(long userActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieGetListResponse")]
        VastecOPMSP.FHSvc.UserCookie[] UserCookieGetList(System.Nullable<long> userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserCookie[]> UserCookieGetListAsync(System.Nullable<long> userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieInsertResponse")]
        long UserCookieInsert(long userId, string applicationName, string cookieGroup, string cookieName, string cookieValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieInsertResponse")]
        System.Threading.Tasks.Task<long> UserCookieInsertAsync(long userId, string applicationName, string cookieGroup, string cookieName, string cookieValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieUpdateResponse")]
        void UserCookieUpdate(long userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName, string cookieValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieUpdateResponse")]
        System.Threading.Tasks.Task UserCookieUpdateAsync(long userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName, string cookieValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDeleteResponse")]
        int UserCookieDelete(long userCookieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDeleteResponse")]
        System.Threading.Tasks.Task<int> UserCookieDeleteAsync(long userCookieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDeleteByUserId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDeleteByUserIdResponse")]
        int UserCookieDeleteByUserId(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDeleteByUserId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserCookieDeleteByUserIdResponse")]
        System.Threading.Tasks.Task<int> UserCookieDeleteByUserIdAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteGetListResponse")]
        VastecOPMSP.FHSvc.UserNoteList UserNoteGetList(System.Nullable<long> userNoteId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserNoteList> UserNoteGetListAsync(System.Nullable<long> userNoteId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteInsertResponse")]
        long UserNoteInsert(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, long changeUserId, string noteText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteInsertResponse")]
        System.Threading.Tasks.Task<long> UserNoteInsertAsync(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, long changeUserId, string noteText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteUpdateResponse")]
        void UserNoteUpdate(long userNoteId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId, string noteText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteUpdateResponse")]
        System.Threading.Tasks.Task UserNoteUpdateAsync(long userNoteId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId, string noteText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteDeleteResponse")]
        int UserNoteDelete(long userNoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserNoteDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserNoteDeleteResponse")]
        System.Threading.Tasks.Task<int> UserNoteDeleteAsync(long userNoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleGetListResponse")]
        VastecOPMSP.FHSvc.UserRoleList UserRoleGetList(System.Nullable<long> userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserRoleList> UserRoleGetListAsync(System.Nullable<long> userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleInsertResponse")]
        long UserRoleInsert(long userId, long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleInsertResponse")]
        System.Threading.Tasks.Task<long> UserRoleInsertAsync(long userId, long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdateResponse")]
        void UserRoleUpdate(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdateResponse")]
        System.Threading.Tasks.Task UserRoleUpdateAsync(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdateSafeResponse")]
        void UserRoleUpdateSafe(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleUpdateSafeResponse")]
        System.Threading.Tasks.Task UserRoleUpdateSafeAsync(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleDeleteResponse")]
        int UserRoleDelete(long userRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UserRoleDeleteResponse")]
        System.Threading.Tasks.Task<int> UserRoleDeleteAsync(long userRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowGetListResponse")]
        VastecOPMSP.FHSvc.WorkflowList WorkflowGetList(System.Nullable<long> workflowId, string workflowName, System.Nullable<bool> workflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.WorkflowList> WorkflowGetListAsync(System.Nullable<long> workflowId, string workflowName, System.Nullable<bool> workflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowInsertResponse")]
        long WorkflowInsert(long changeUserId, string workflowName, string description, VastecOPMSP.FHSvc.Workflow.WorkflowScopes workflowScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowInsertResponse")]
        System.Threading.Tasks.Task<long> WorkflowInsertAsync(long changeUserId, string workflowName, string description, VastecOPMSP.FHSvc.Workflow.WorkflowScopes workflowScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdateResponse")]
        void WorkflowUpdate(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdateResponse")]
        System.Threading.Tasks.Task WorkflowUpdateAsync(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdateSafeResponse")]
        void WorkflowUpdateSafe(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowUpdateSafeResponse")]
        System.Threading.Tasks.Task WorkflowUpdateSafeAsync(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowDeleteResponse")]
        int WorkflowDelete(long workflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowDeleteResponse")]
        System.Threading.Tasks.Task<int> WorkflowDeleteAsync(long workflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityGetListResponse")]
        VastecOPMSP.FHSvc.WorkflowActivityList WorkflowActivityGetList(System.Nullable<long> workflowId, System.Nullable<long> workflowActivityId, string workflowName, System.Nullable<bool> workflowActivityActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.WorkflowActivityList> WorkflowActivityGetListAsync(System.Nullable<long> workflowId, System.Nullable<long> workflowActivityId, string workflowName, System.Nullable<bool> workflowActivityActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityInsertResponse")]
        long WorkflowActivityInsert(long workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, int activityOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityInsertResponse")]
        System.Threading.Tasks.Task<long> WorkflowActivityInsertAsync(long workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, int activityOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdateResponse")]
        void WorkflowActivityUpdate(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdateResponse")]
        System.Threading.Tasks.Task WorkflowActivityUpdateAsync(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdateSafeResponse")]
        void WorkflowActivityUpdateSafe(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityUpdateSafeResponse")]
        System.Threading.Tasks.Task WorkflowActivityUpdateSafeAsync(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityDeleteResponse")]
        int WorkflowActivityDelete(long workflowActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/WorkflowActivityDeleteResponse")]
        System.Threading.Tasks.Task<int> WorkflowActivityDeleteAsync(long workflowActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/SharePointNewManifestInfo", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/SharePointNewManifestInfoResponse")]
        VastecOPMSP.FHSvc.ManifestResponse SharePointNewManifestInfo(string agencyName, int manifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/SharePointNewManifestInfo", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/SharePointNewManifestInfoResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ManifestResponse> SharePointNewManifestInfoAsync(string agencyName, int manifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemPriority", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemPriorityResponse")]
        string MakeManifestItemPriority(string agencyName, long spBoxManifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemPriority", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemPriorityResponse")]
        System.Threading.Tasks.Task<string> MakeManifestItemPriorityAsync(string agencyName, long spBoxManifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemIssue", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemIssueResponse")]
        string MakeManifestItemIssue(string agencyName, long spBoxManifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemIssue", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MakeManifestItemIssueResponse")]
        System.Threading.Tasks.Task<string> MakeManifestItemIssueAsync(string agencyName, long spBoxManifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemUpdateResponse")]
        void IndexSaveStateItemUpdate(long indexSaveStateItemId, bool userMustBeAssignedActivity, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId, System.Nullable<long> mdFieldId, long changeUserId, string itemText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemUpdateResponse")]
        System.Threading.Tasks.Task IndexSaveStateItemUpdateAsync(long indexSaveStateItemId, bool userMustBeAssignedActivity, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId, System.Nullable<long> mdFieldId, long changeUserId, string itemText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDeleteResponse")]
        int IndexSaveStateItemDelete(long indexSaveStateItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDeleteResponse")]
        System.Threading.Tasks.Task<int> IndexSaveStateItemDeleteAsync(long indexSaveStateItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDeleteByFileInfoId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDeleteByFileInfoIdRespon" +
            "se")]
        int IndexSaveStateItemDeleteByFileInfoId(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDeleteByFileInfoId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemDeleteByFileInfoIdRespon" +
            "se")]
        System.Threading.Tasks.Task<int> IndexSaveStateItemDeleteByFileInfoIdAsync(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationGetListResponse")]
        VastecOPMSP.FHSvc.IssueNotificationList IssueNotificationGetList(System.Nullable<long> issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, System.Nullable<bool> deletedOnly, System.Nullable<bool> readOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IssueNotificationList> IssueNotificationGetListAsync(System.Nullable<long> issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, System.Nullable<bool> deletedOnly, System.Nullable<bool> readOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationInsertResponse")]
        long IssueNotificationInsert(System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationInsertResponse")]
        System.Threading.Tasks.Task<long> IssueNotificationInsertAsync(System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdateResponse")]
        void IssueNotificationUpdate(long issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo, System.Nullable<bool> markAsRead, System.Nullable<bool> markAsDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdateResponse")]
        System.Threading.Tasks.Task IssueNotificationUpdateAsync(long issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo, System.Nullable<bool> markAsRead, System.Nullable<bool> markAsDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdateSafeResponse")]
        void IssueNotificationUpdateSafe(
                    long issueNotificationId, 
                    System.Nullable<long> projectId, 
                    System.Nullable<long> projectOfficeIdentifierId, 
                    System.Nullable<long> jobId, 
                    System.Nullable<long> jobActivityId, 
                    System.Nullable<long> boxId, 
                    System.Nullable<long> boxActivityId, 
                    System.Nullable<long> fileInfoId, 
                    System.Nullable<long> recipientUserId, 
                    System.Nullable<long> targetRoleId, 
                    long changeUserId, 
                    string issueMessage, 
                    string issueDebugInfo, 
                    System.Nullable<bool> markAsRead, 
                    System.Nullable<bool> markAsDeleted, 
                    string rowVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationUpdateSafeResponse")]
        System.Threading.Tasks.Task IssueNotificationUpdateSafeAsync(
                    long issueNotificationId, 
                    System.Nullable<long> projectId, 
                    System.Nullable<long> projectOfficeIdentifierId, 
                    System.Nullable<long> jobId, 
                    System.Nullable<long> jobActivityId, 
                    System.Nullable<long> boxId, 
                    System.Nullable<long> boxActivityId, 
                    System.Nullable<long> fileInfoId, 
                    System.Nullable<long> recipientUserId, 
                    System.Nullable<long> targetRoleId, 
                    long changeUserId, 
                    string issueMessage, 
                    string issueDebugInfo, 
                    System.Nullable<bool> markAsRead, 
                    System.Nullable<bool> markAsDeleted, 
                    string rowVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationDeleteResponse")]
        int IssueNotificationDelete(long issueNotificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IssueNotificationDeleteResponse")]
        System.Threading.Tasks.Task<int> IssueNotificationDeleteAsync(long issueNotificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetListResponse")]
        VastecOPMSP.FHSvc.JobList JobGetList(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobList> JobGetListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetActiveList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetActiveListResponse")]
        VastecOPMSP.FHSvc.JobList JobGetActiveList(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetActiveList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetActiveListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobList> JobGetActiveListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessXmlResponse")]
        string JobGetProcessXml(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId, bool showBoxManifestItems, bool showTeamLeads, bool showManagers, bool showEligibleOperators, bool showBoxFolders, bool showExtractedDfrData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessXmlResponse")]
        System.Threading.Tasks.Task<string> JobGetProcessXmlAsync(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId, bool showBoxManifestItems, bool showTeamLeads, bool showManagers, bool showEligibleOperators, bool showBoxFolders, bool showExtractedDfrData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessStatus", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessStatusResponse")]
        VastecOPMSP.FHSvc.JobProcessesJobData JobGetProcessStatus(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessStatus", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetProcessStatusResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobProcessesJobData> JobGetProcessStatusAsync(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetCurrentActivityId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetCurrentActivityIdResponse")]
        VastecOPMSP.FHSvc.CurrentJobActivity JobGetCurrentActivityId(long jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobGetCurrentActivityId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobGetCurrentActivityIdResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CurrentJobActivity> JobGetCurrentActivityIdAsync(long jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobInsertResponse")]
        long JobInsert(long projectLocationId, System.Nullable<long> teamId, long workflowId, System.Nullable<long> batchId, long changeUserId, string jobName, string jobDescription, string jobRelativePath, System.Nullable<int> priority, string jobProfilePath, System.Nullable<System.DateTime> pickupDate, System.Nullable<System.DateTime> jobScheduled, System.Nullable<System.DateTime> jobDeadline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobInsertResponse")]
        System.Threading.Tasks.Task<long> JobInsertAsync(long projectLocationId, System.Nullable<long> teamId, long workflowId, System.Nullable<long> batchId, long changeUserId, string jobName, string jobDescription, string jobRelativePath, System.Nullable<int> priority, string jobProfilePath, System.Nullable<System.DateTime> pickupDate, System.Nullable<System.DateTime> jobScheduled, System.Nullable<System.DateTime> jobDeadline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobInitiate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobInitiateResponse")]
        long JobInitiate(long jobId, int version, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobInitiate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobInitiateResponse")]
        System.Threading.Tasks.Task<long> JobInitiateAsync(long jobId, int version, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateResponse")]
        void JobUpdate(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateResponse")]
        System.Threading.Tasks.Task JobUpdateAsync(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateSafeResponse")]
        void JobUpdateSafe(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline, 
                    int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateSafeResponse")]
        System.Threading.Tasks.Task JobUpdateSafeAsync(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline, 
                    int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateStarted", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateStartedResponse")]
        void JobUpdateStarted(long jobId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateStarted", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateStartedResponse")]
        System.Threading.Tasks.Task JobUpdateStartedAsync(long jobId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateCompleted", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateCompletedResponse")]
        void JobUpdateCompleted(long jobId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateCompleted", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUpdateCompletedResponse")]
        System.Threading.Tasks.Task JobUpdateCompletedAsync(long jobId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobDeleteResponse")]
        int JobDelete(long jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobDeleteResponse")]
        System.Threading.Tasks.Task<int> JobDeleteAsync(long jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetListResponse")]
        VastecOPMSP.FHSvc.JobActivityList JobActivityGetList(System.Nullable<long> jobId, System.Nullable<long> jobActivityId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobActivityList> JobActivityGetListAsync(System.Nullable<long> jobId, System.Nullable<long> jobActivityId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetListByJobName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetListByJobNameResponse")]
        VastecOPMSP.FHSvc.JobActivityList JobActivityGetListByJobName(long projectLocationId, string jobName, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetListByJobName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityGetListByJobNameResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobActivityList> JobActivityGetListByJobNameAsync(long projectLocationId, string jobName, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsertResponse")]
        long JobActivityInsert(long jobId, long workflowActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsertResponse")]
        System.Threading.Tasks.Task<long> JobActivityInsertAsync(long jobId, long workflowActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsertNextActivity", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsertNextActivityResponse")]
        long JobActivityInsertNextActivity(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsertNextActivity", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityInsertNextActivityResponse")]
        System.Threading.Tasks.Task<long> JobActivityInsertNextActivityAsync(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdateResponse")]
        void JobActivityUpdate(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdateResponse")]
        System.Threading.Tasks.Task JobActivityUpdateAsync(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdateSafeResponse")]
        void JobActivityUpdateSafe(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityUpdateSafeResponse")]
        System.Threading.Tasks.Task JobActivityUpdateSafeAsync(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityDeleteResponse")]
        int JobActivityDelete(long jobActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobActivityDeleteResponse")]
        System.Threading.Tasks.Task<int> JobActivityDeleteAsync(long jobActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleGetListResponse")]
        VastecOPMSP.FHSvc.JobUserRoleList JobUserRoleGetList(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobUserRoleList> JobUserRoleGetListAsync(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetJobUserRoleExtendedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetJobUserRoleExtendedListResponse")]
        VastecOPMSP.FHSvc.JobUserRoleList GetJobUserRoleExtendedList(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetJobUserRoleExtendedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetJobUserRoleExtendedListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobUserRoleList> GetJobUserRoleExtendedListAsync(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleInsertResponse")]
        long JobUserRoleInsert(long jobId, long userId, long roleId, int userRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleInsertResponse")]
        System.Threading.Tasks.Task<long> JobUserRoleInsertAsync(long jobId, long userId, long roleId, int userRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleUpdateResponse")]
        void JobUserRoleUpdate(long jobUserRoleId, System.Nullable<long> jobId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<int> userRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleUpdateResponse")]
        System.Threading.Tasks.Task JobUserRoleUpdateAsync(long jobUserRoleId, System.Nullable<long> jobId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<int> userRolePriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleDeleteResponse")]
        int JobUserRoleDelete(long jobUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/JobUserRoleDeleteResponse")]
        System.Threading.Tasks.Task<int> JobUserRoleDeleteAsync(long jobUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWeb", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWebResponse")]
        VastecOPMSP.FHSvc.LocationList LocationGetListWeb(string locationId, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWeb", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWebResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.LocationList> LocationGetListWebAsync(string locationId, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWeb2", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWeb2Response")]
        VastecOPMSP.FHSvc.LocationList LocationGetListWeb2(string locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWeb2", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListWeb2Response")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.LocationList> LocationGetListWeb2Async(string locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListResponse")]
        VastecOPMSP.FHSvc.LocationList LocationGetList(System.Nullable<long> locationId, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.LocationList> LocationGetListAsync(System.Nullable<long> locationId, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationInsertResponse")]
        long LocationInsert(string locationName, string locationCity, string locationState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationInsertResponse")]
        System.Threading.Tasks.Task<long> LocationInsertAsync(string locationName, string locationCity, string locationState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdateResponse")]
        void LocationUpdate(long locationId, string locationName, string locationCity, string locationState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdateResponse")]
        System.Threading.Tasks.Task LocationUpdateAsync(long locationId, string locationName, string locationCity, string locationState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdateSafeResponse")]
        void LocationUpdateSafe(long locationId, string locationName, string locationCity, string locationState, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationUpdateSafeResponse")]
        System.Threading.Tasks.Task LocationUpdateSafeAsync(long locationId, string locationName, string locationCity, string locationState, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationDeleteResponse")]
        int LocationDelete(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/LocationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/LocationDeleteResponse")]
        System.Threading.Tasks.Task<int> LocationDeleteAsync(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetListResponse")]
        VastecOPMSP.FHSvc.MdFieldList MdFieldGetList(System.Nullable<long> mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFieldList> MdFieldGetListAsync(System.Nullable<long> mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetRectList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetRectListResponse")]
        VastecOPMSP.FHSvc.MdFieldList MdFieldGetRectList(VastecOPMSP.FHSvc.Rectangle primeRectangle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetRectList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldGetRectListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFieldList> MdFieldGetRectListAsync(VastecOPMSP.FHSvc.Rectangle primeRectangle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldInsertResponse")]
        long MdFieldInsert(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldInsertResponse")]
        System.Threading.Tasks.Task<long> MdFieldInsertAsync(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldInsertResponse")]
        long DbSyncMdFieldInsert(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncMdFieldInsertAsync(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldUpdateResponse")]
        void MdFieldUpdate(long mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string maskedText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldUpdateResponse")]
        System.Threading.Tasks.Task MdFieldUpdateAsync(long mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string maskedText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldDeleteResponse")]
        int MdFieldDelete(long mdFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFieldDeleteAsync(long mdFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierGetListResponse")]
        VastecOPMSP.FHSvc.MdFieldIdentifierList MdFieldIdentifierGetList(System.Nullable<long> mdFieldIdentifierId, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFieldIdentifierList> MdFieldIdentifierGetListAsync(System.Nullable<long> mdFieldIdentifierId, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierInsertResponse")]
        long MdFieldIdentifierInsert(string fieldName, string ruleFieldType, bool isMetadataField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierInsertResponse")]
        System.Threading.Tasks.Task<long> MdFieldIdentifierInsertAsync(string fieldName, string ruleFieldType, bool isMetadataField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldIdentifierInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldIdentifierInsertResponse")]
        long DbSyncMdFieldIdentifierInsert(string fieldName, string ruleFieldType, bool isMetadataField, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldIdentifierInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFieldIdentifierInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncMdFieldIdentifierInsertAsync(string fieldName, string ruleFieldType, bool isMetadataField, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierUpdateResponse")]
        void MdFieldIdentifierUpdate(long mdFieldIdentifierId, string fieldName, string ruleFieldType, System.Nullable<bool> isMetadataField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierUpdateResponse")]
        System.Threading.Tasks.Task MdFieldIdentifierUpdateAsync(long mdFieldIdentifierId, string fieldName, string ruleFieldType, System.Nullable<bool> isMetadataField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierDeleteResponse")]
        int MdFieldIdentifierDelete(long mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFieldIdentifierDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFieldIdentifierDeleteAsync(long mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetListResponse")]
        VastecOPMSP.FHSvc.MdFormList MdFormGetList(System.Nullable<long> mdFormId, string formName, string formVersion, System.Nullable<int> formGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormList> MdFormGetListAsync(System.Nullable<long> mdFormId, string formName, string formVersion, System.Nullable<int> formGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetMdFormTreeXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetMdFormTreeXmlResponse")]
        string GetMdFormTreeXml(System.Nullable<long> mdFormId, System.Nullable<long> projectId, System.Nullable<long> customerId, System.Nullable<long> metadataTypeId, bool showPackageInfo, bool showZoneInfo, bool showFieldInfo, bool showIndexProfileInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetMdFormTreeXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetMdFormTreeXmlResponse")]
        System.Threading.Tasks.Task<string> GetMdFormTreeXmlAsync(System.Nullable<long> mdFormId, System.Nullable<long> projectId, System.Nullable<long> customerId, System.Nullable<long> metadataTypeId, bool showPackageInfo, bool showZoneInfo, bool showFieldInfo, bool showIndexProfileInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetDumpXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetDumpXmlResponse")]
        string MdFormGetDumpXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetDumpXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormGetDumpXmlResponse")]
        System.Threading.Tasks.Task<string> MdFormGetDumpXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormInsertResponse")]
        long MdFormInsert(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, bool vastecForm, bool isAPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormInsertResponse")]
        System.Threading.Tasks.Task<long> MdFormInsertAsync(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, bool vastecForm, bool isAPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormInsertResponse")]
        long DbSyncMdFormInsert(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, string globalUniqueKey, string serverCreated, bool vastecForm, bool isAPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncMdFormInsertAsync(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, string globalUniqueKey, string serverCreated, bool vastecForm, bool isAPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormUpdateResponse")]
        void MdFormUpdate(long mdFormId, string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, System.Nullable<bool> vastecForm, System.Nullable<bool> isAPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormUpdateResponse")]
        System.Threading.Tasks.Task MdFormUpdateAsync(long mdFormId, string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, System.Nullable<bool> vastecForm, System.Nullable<bool> isAPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormDeleteResponse")]
        int MdFormDelete(long mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFormDeleteAsync(long mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageGetListResponse")]
        VastecOPMSP.FHSvc.MdFormPackageList MdFormPackageGetList(System.Nullable<long> mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormPackageList> MdFormPackageGetListAsync(System.Nullable<long> mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageInsertResponse")]
        long MdFormPackageInsert(long packageMdFormId, long vastecPackageMdFormId, long mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageInsertResponse")]
        System.Threading.Tasks.Task<long> MdFormPackageInsertAsync(long packageMdFormId, long vastecPackageMdFormId, long mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageUpdateResponse")]
        void MdFormPackageUpdate(long mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageUpdateResponse")]
        System.Threading.Tasks.Task MdFormPackageUpdateAsync(long mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageDeleteResponse")]
        int MdFormPackageDelete(long mdFormPackageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPackageDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFormPackageDeleteAsync(long mdFormPackageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageGetListResponse")]
        VastecOPMSP.FHSvc.MdFormPageList MdFormPageGetList(System.Nullable<long> mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageHash, bool returnTemplateText, bool returnFullTextMergeTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormPageList> MdFormPageGetListAsync(System.Nullable<long> mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageHash, bool returnTemplateText, bool returnFullTextMergeTemplate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageInsertResponse")]
        long MdFormPageInsert(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageInsertResponse")]
        System.Threading.Tasks.Task<long> MdFormPageInsertAsync(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormPageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormPageInsertResponse")]
        long DbSyncMdFormPageInsert(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormPageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormPageInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncMdFormPageInsertAsync(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageUpdateResponse")]
        void MdFormPageUpdate(long mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageUpdateResponse")]
        System.Threading.Tasks.Task MdFormPageUpdateAsync(long mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageDeleteResponse")]
        int MdFormPageDelete(long mdFormPageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormPageDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFormPageDeleteAsync(long mdFormPageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneGetListResponse")]
        VastecOPMSP.FHSvc.MdFormZoneList MdFormZoneGetList(System.Nullable<long> mdFormZoneId, System.Nullable<long> mdFormPageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormZoneList> MdFormZoneGetListAsync(System.Nullable<long> mdFormZoneId, System.Nullable<long> mdFormPageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneInsertResponse")]
        long MdFormZoneInsert(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneInsertResponse")]
        System.Threading.Tasks.Task<long> MdFormZoneInsertAsync(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneInsertResponse")]
        long DbSyncMdFormZoneInsert(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncMdFormZoneInsertAsync(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneUpdateResponse")]
        void MdFormZoneUpdate(long mdFormZoneId, System.Nullable<long> mdFormPageId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneUpdateResponse")]
        System.Threading.Tasks.Task MdFormZoneUpdateAsync(long mdFormZoneId, System.Nullable<long> mdFormPageId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneDeleteResponse")]
        int MdFormZoneDelete(long mdFormZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFormZoneDeleteAsync(long mdFormZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetListResponse")]
        VastecOPMSP.FHSvc.MdFormZoneAttribList MdFormZoneAttribGetList(System.Nullable<long> mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, string attributeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormZoneAttribList> MdFormZoneAttribGetListAsync(System.Nullable<long> mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, string attributeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetRectList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetRectListResponse")]
        VastecOPMSP.FHSvc.MdFormZoneAttribList MdFormZoneAttribGetRectList(VastecOPMSP.FHSvc.Rectangle primeRectangle, string attributeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetRectList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribGetRectListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormZoneAttribList> MdFormZoneAttribGetRectListAsync(VastecOPMSP.FHSvc.Rectangle primeRectangle, string attributeText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribInsertResponse")]
        long MdFormZoneAttribInsert(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribInsertResponse")]
        System.Threading.Tasks.Task<long> MdFormZoneAttribInsertAsync(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneAttribInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneAttribInsertResponse")]
        long DbSyncMdFormZoneAttribInsert(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneAttribInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncMdFormZoneAttribInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncMdFormZoneAttribInsertAsync(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribUpdateResponse")]
        void MdFormZoneAttribUpdate(long mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string attributeText, bool negationFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribUpdateResponse")]
        System.Threading.Tasks.Task MdFormZoneAttribUpdateAsync(long mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string attributeText, bool negationFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribDeleteResponse")]
        int MdFormZoneAttribDelete(long mdFormZoneAttribId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MdFormZoneAttribDeleteResponse")]
        System.Threading.Tasks.Task<int> MdFormZoneAttribDeleteAsync(long mdFormZoneAttribId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeGetListResponse")]
        VastecOPMSP.FHSvc.MetadataTypeList MetadataTypeGetList(System.Nullable<long> metadataTypeId, string metadataTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MetadataTypeList> MetadataTypeGetListAsync(System.Nullable<long> metadataTypeId, string metadataTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeInsertResponse")]
        long MetadataTypeInsert(string metadataTypeName, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeInsertResponse")]
        System.Threading.Tasks.Task<long> MetadataTypeInsertAsync(string metadataTypeName, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeUpdateResponse")]
        void MetadataTypeUpdate(long metadataTypeId, string metadataTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeUpdateResponse")]
        System.Threading.Tasks.Task MetadataTypeUpdateAsync(long metadataTypeId, string metadataTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeDeleteResponse")]
        int MetadataTypeDelete(long metadataTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/MetadataTypeDeleteResponse")]
        System.Threading.Tasks.Task<int> MetadataTypeDeleteAsync(long metadataTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigGetListResponse")]
        VastecOPMSP.FHSvc.ProcessConfigList ProcessConfigGetList(System.Nullable<long> processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessConfigList> ProcessConfigGetListAsync(System.Nullable<long> processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigInsertResponse")]
        long ProcessConfigInsert(long processInfoId, string configGroup, string configName, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigInsertResponse")]
        System.Threading.Tasks.Task<long> ProcessConfigInsertAsync(long processInfoId, string configGroup, string configName, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdateResponse")]
        void ProcessConfigUpdate(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdateResponse")]
        System.Threading.Tasks.Task ProcessConfigUpdateAsync(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdateSafeResponse")]
        void ProcessConfigUpdateSafe(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigUpdateSafeResponse")]
        System.Threading.Tasks.Task ProcessConfigUpdateSafeAsync(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigDeleteResponse")]
        int ProcessConfigDelete(long processConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessConfigDeleteResponse")]
        System.Threading.Tasks.Task<int> ProcessConfigDeleteAsync(long processConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoGetListResponse")]
        VastecOPMSP.FHSvc.ProcessInfoList ProcessInfoGetList(System.Nullable<long> processInfoId, string processName, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessInfoList> ProcessInfoGetListAsync(System.Nullable<long> processInfoId, string processName, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoInsertResponse")]
        long ProcessInfoInsert(long changeUserId, string processName, string processDescription, bool canEdit, bool usableByWorkflow, bool automated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoInsertResponse")]
        System.Threading.Tasks.Task<long> ProcessInfoInsertAsync(long changeUserId, string processName, string processDescription, bool canEdit, bool usableByWorkflow, bool automated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdateResponse")]
        void ProcessInfoUpdate(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdateResponse")]
        System.Threading.Tasks.Task ProcessInfoUpdateAsync(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdateSafeResponse")]
        void ProcessInfoUpdateSafe(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoUpdateSafeResponse")]
        System.Threading.Tasks.Task ProcessInfoUpdateSafeAsync(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoDeleteResponse")]
        int ProcessInfoDelete(long processInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoDeleteResponse")]
        System.Threading.Tasks.Task<int> ProcessInfoDeleteAsync(long processInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoRemove", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoRemoveResponse")]
        void ProcessInfoRemove(long processInfoId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoRemove", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessInfoRemoveResponse")]
        System.Threading.Tasks.Task ProcessInfoRemoveAsync(long processInfoId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueGetListResponse")]
        VastecOPMSP.FHSvc.ProcessQueueList ProcessQueueGetList(System.Nullable<long> processQueueId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessQueueList> ProcessQueueGetListAsync(System.Nullable<long> processQueueId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueInsertResponse")]
        long ProcessQueueInsert(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<long> processInfoId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueInsertResponse")]
        System.Threading.Tasks.Task<long> ProcessQueueInsertAsync(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<long> processInfoId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueSetToComplete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueSetToCompleteResponse")]
        VastecOPMSP.FHSvc.BoxActivityDacDualIndex ProcessQueueSetToComplete(long processQueueId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueSetToComplete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueSetToCompleteResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityDacDualIndex> ProcessQueueSetToCompleteAsync(long processQueueId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUpdateResponse")]
        void ProcessQueueUpdate(long processQueueId, System.Nullable<long> processInfoId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted, System.Nullable<System.DateTime> processErrorDate, System.Nullable<System.DateTime> sleepUntilTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUpdateResponse")]
        System.Threading.Tasks.Task ProcessQueueUpdateAsync(long processQueueId, System.Nullable<long> processInfoId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted, System.Nullable<System.DateTime> processErrorDate, System.Nullable<System.DateTime> sleepUntilTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUnAssign", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUnAssignResponse")]
        void ProcessQueueUnAssign(long processQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUnAssign", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueUnAssignResponse")]
        System.Threading.Tasks.Task ProcessQueueUnAssignAsync(long processQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueDeleteResponse")]
        int ProcessQueueDelete(long processQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueDeleteResponse")]
        System.Threading.Tasks.Task<int> ProcessQueueDeleteAsync(long processQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateGetListResponse")]
        VastecOPMSP.FHSvc.ProcessQueueStateList ProcessQueueStateGetList(System.Nullable<long> processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessQueueStateList> ProcessQueueStateGetListAsync(System.Nullable<long> processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateInsertResponse")]
        long ProcessQueueStateInsert(long processQueueId, string settingGroup, string settingName, string settingValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateInsertResponse")]
        System.Threading.Tasks.Task<long> ProcessQueueStateInsertAsync(long processQueueId, string settingGroup, string settingName, string settingValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateUpdateResponse")]
        void ProcessQueueStateUpdate(long processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName, string settingValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateUpdateResponse")]
        System.Threading.Tasks.Task ProcessQueueStateUpdateAsync(long processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName, string settingValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateDeleteResponse")]
        int ProcessQueueStateDelete(long processQueueStateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessQueueStateDeleteResponse")]
        System.Threading.Tasks.Task<int> ProcessQueueStateDeleteAsync(long processQueueStateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerGetListResponse")]
        VastecOPMSP.FHSvc.ProcessServerList ProcessServerGetList(System.Nullable<long> processServerId, string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessServerList> ProcessServerGetListAsync(System.Nullable<long> processServerId, string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerInsertResponse")]
        long ProcessServerInsert(string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerInsertResponse")]
        System.Threading.Tasks.Task<long> ProcessServerInsertAsync(string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdateResponse")]
        void ProcessServerUpdate(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdateResponse")]
        System.Threading.Tasks.Task ProcessServerUpdateAsync(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdateSafeResponse")]
        void ProcessServerUpdateSafe(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerUpdateSafeResponse")]
        System.Threading.Tasks.Task ProcessServerUpdateSafeAsync(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServer", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerResponse")]
        int ProcessServer(long processServerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProcessServer", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProcessServerResponse")]
        System.Threading.Tasks.Task<int> ProcessServerAsync(long processServerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectGetListResponse")]
        VastecOPMSP.FHSvc.ProjectList ProjectGetList(System.Nullable<long> projectId, System.Nullable<long> customerId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectList> ProjectGetListAsync(System.Nullable<long> projectId, System.Nullable<long> customerId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsertResponse")]
        long ProjectInsert(string projectName, string projectDescription, long customerId, bool projectActive, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsertResponse")]
        System.Threading.Tasks.Task<long> ProjectInsertAsync(string projectName, string projectDescription, long customerId, bool projectActive, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsertByName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsertByNameResponse")]
        long ProjectInsertByName(string projectName, string customerName, string projectDescription, long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsertByName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectInsertByNameResponse")]
        System.Threading.Tasks.Task<long> ProjectInsertByNameAsync(string projectName, string customerName, string projectDescription, long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdateResponse")]
        void ProjectUpdate(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdateResponse")]
        System.Threading.Tasks.Task ProjectUpdateAsync(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdateSafeResponse")]
        void ProjectUpdateSafe(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectUpdateSafeResponse")]
        System.Threading.Tasks.Task ProjectUpdateSafeAsync(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectDeleteResponse")]
        int ProjectDelete(long projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectDeleteResponse")]
        System.Threading.Tasks.Task<int> ProjectDeleteAsync(long projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationGetListResponse")]
        VastecOPMSP.FHSvc.ProjectLocationList ProjectLocationGetList(System.Nullable<long> projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectLocationList> ProjectLocationGetListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationInsertResponse")]
        long ProjectLocationInsert(long projectId, long locationId, string projectRelativePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationInsertResponse")]
        System.Threading.Tasks.Task<long> ProjectLocationInsertAsync(long projectId, long locationId, string projectRelativePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdateResponse")]
        void ProjectLocationUpdate(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdateResponse")]
        System.Threading.Tasks.Task ProjectLocationUpdateAsync(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdateSafeResponse")]
        void ProjectLocationUpdateSafe(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUpdateSafeResponse")]
        System.Threading.Tasks.Task ProjectLocationUpdateSafeAsync(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationDeleteResponse")]
        int ProjectLocationDelete(long projectLocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationDeleteResponse")]
        System.Threading.Tasks.Task<int> ProjectLocationDeleteAsync(long projectLocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetListResponse")]
        VastecOPMSP.FHSvc.ProjectLocationUserRoleList ProjectLocationUserRoleGetList(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectLocationUserRoleList> ProjectLocationUserRoleGetListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetExtendedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetExtendedListResp" +
            "onse")]
        VastecOPMSP.FHSvc.ProjectLocationUserRoleList ProjectLocationUserRoleGetExtendedList(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetExtendedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleGetExtendedListResp" +
            "onse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectLocationUserRoleList> ProjectLocationUserRoleGetExtendedListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleInsertResponse")]
        long ProjectLocationUserRoleInsert(long projectId, long userId, long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleInsertResponse")]
        System.Threading.Tasks.Task<long> ProjectLocationUserRoleInsertAsync(long projectId, long userId, long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleUpdateResponse")]
        void ProjectLocationUserRoleUpdate(long projectUserRoleId, System.Nullable<long> projectId, System.Nullable<long> userId, System.Nullable<long> roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleUpdateResponse")]
        System.Threading.Tasks.Task ProjectLocationUserRoleUpdateAsync(long projectUserRoleId, System.Nullable<long> projectId, System.Nullable<long> userId, System.Nullable<long> roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleDeleteResponse")]
        int ProjectLocationUserRoleDelete(long projectUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectLocationUserRoleDeleteResponse")]
        System.Threading.Tasks.Task<int> ProjectLocationUserRoleDeleteAsync(long projectUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupGetListResponse")]
        VastecOPMSP.FHSvc.ProjectManifestLookupList ProjectManifestLookupGetList(System.Nullable<long> projectManifestLookupId, System.Nullable<long> projectId, string ssn, string entryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectManifestLookupList> ProjectManifestLookupGetListAsync(System.Nullable<long> projectManifestLookupId, System.Nullable<long> projectId, string ssn, string entryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupInsertResponse")]
        long ProjectManifestLookupInsert(long projectId, long changeUserId, string ssn, string entryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupInsertResponse")]
        System.Threading.Tasks.Task<long> ProjectManifestLookupInsertAsync(long projectId, long changeUserId, string ssn, string entryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupUpdateResponse")]
        void ProjectManifestLookupUpdate(long projectManifestLookupId, long projectId, System.Nullable<long> changeUserId, string ssn, string entryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupUpdateResponse")]
        System.Threading.Tasks.Task ProjectManifestLookupUpdateAsync(long projectManifestLookupId, long projectId, System.Nullable<long> changeUserId, string ssn, string entryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupDeleteResponse")]
        int ProjectManifestLookupDelete(long projectManifestLookupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectManifestLookupDeleteResponse")]
        System.Threading.Tasks.Task<int> ProjectManifestLookupDeleteAsync(long projectManifestLookupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierGetListResponse")]
        VastecOPMSP.FHSvc.ProjectOfficeIdentifierList ProjectOfficeIdentifierGetList(System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/ProjectOfficeIdentifierGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectOfficeIdentifierList> ProjectOfficeIdentifierGetListAsync(System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetStream", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetStreamResponse")]
        System.IO.Stream GetStream(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetStream", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetStreamResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UploadStream", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UploadStreamResponse")]
        bool UploadStream(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/UploadStream", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/UploadStreamResponse")]
        System.Threading.Tasks.Task<bool> UploadStreamAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchGetListResponse")]
        VastecOPMSP.FHSvc.Batch[] BatchGetList(System.Nullable<long> batchId, string batchIdentifier, System.Nullable<long> jobId, System.Nullable<bool> batchAccepted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.Batch[]> BatchGetListAsync(System.Nullable<long> batchId, string batchIdentifier, System.Nullable<long> jobId, System.Nullable<bool> batchAccepted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchInsertResponse")]
        long BatchInsert(string batchIdentifier, System.DateTime batchStart, System.DateTime batchDeadline, string batchRelativePath, int batchFileCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchInsertResponse")]
        System.Threading.Tasks.Task<long> BatchInsertAsync(string batchIdentifier, System.DateTime batchStart, System.DateTime batchDeadline, string batchRelativePath, int batchFileCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchUpdateResponse")]
        void BatchUpdate(long batchId, string batchIdentifier, System.Nullable<System.DateTime> batchStart, System.Nullable<System.DateTime> batchDeadline, System.Nullable<System.DateTime> batchAcceptedDate, string batchRelativePath, System.Nullable<int> batchFileCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchUpdateResponse")]
        System.Threading.Tasks.Task BatchUpdateAsync(long batchId, string batchIdentifier, System.Nullable<System.DateTime> batchStart, System.Nullable<System.DateTime> batchDeadline, System.Nullable<System.DateTime> batchAcceptedDate, string batchRelativePath, System.Nullable<int> batchFileCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchDeleteResponse")]
        int BatchDelete(long batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BatchDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BatchDeleteResponse")]
        System.Threading.Tasks.Task<int> BatchDeleteAsync(long batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxGetListResponse")]
        VastecOPMSP.FHSvc.BoxList BoxGetList(System.Nullable<long> boxId, System.Nullable<long> locationId, string boxContainer, System.Nullable<long> jobId, System.Nullable<bool> boxHold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxList> BoxGetListAsync(System.Nullable<long> boxId, System.Nullable<long> locationId, string boxContainer, System.Nullable<long> jobId, System.Nullable<bool> boxHold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetBoxTreeXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetBoxTreeXmlResponse")]
        string GetBoxTreeXml(long boxId, System.Nullable<long> mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetBoxTreeXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetBoxTreeXmlResponse")]
        System.Threading.Tasks.Task<string> GetBoxTreeXmlAsync(long boxId, System.Nullable<long> mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertResponse")]
        long BoxInsert(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertResponse")]
        System.Threading.Tasks.Task<long> BoxInsertAsync(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertByJobName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertByJobNameResponse")]
        long BoxInsertByJobName(long projectLocationId, string jobName, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertByJobName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertByJobNameResponse")]
        System.Threading.Tasks.Task<long> BoxInsertByJobNameAsync(long projectLocationId, string jobName, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertActivityPrimed", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertActivityPrimedResponse")]
        VastecOPMSP.FHSvc.BoxAndBoxActivityId BoxInsertActivityPrimed(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertActivityPrimed", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxInsertActivityPrimedResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxAndBoxActivityId> BoxInsertActivityPrimedAsync(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdateResponse")]
        void BoxUpdate(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdateResponse")]
        System.Threading.Tasks.Task BoxUpdateAsync(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdateSafeResponse")]
        void BoxUpdateSafe(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxUpdateSafeResponse")]
        System.Threading.Tasks.Task BoxUpdateSafeAsync(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxDeleteResponse")]
        int BoxDelete(long boxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxDeleteResponse")]
        System.Threading.Tasks.Task<int> BoxDeleteAsync(long boxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGet", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetResponse")]
        VastecOPMSP.FHSvc.BoxActivity BoxActivityGet(long boxActivityId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGet", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivity> BoxActivityGetAsync(long boxActivityId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetBoxActivityListByJobActivityId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetBoxActivityListByJobActivityIdResponse")]
        VastecOPMSP.FHSvc.BoxActivityList GetBoxActivityListByJobActivityId(long jobActivityId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetBoxActivityListByJobActivityId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetBoxActivityListByJobActivityIdResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityList> GetBoxActivityListByJobActivityIdAsync(long jobActivityId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxNameResponse")]
        VastecOPMSP.FHSvc.BoxActivityList BoxActivityGetListByBoxName(long projectLocationId, string jobName, string boxName, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxNameResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityList> BoxActivityGetListByBoxNameAsync(long projectLocationId, string jobName, string boxName, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxIdResponse")]
        VastecOPMSP.FHSvc.BoxActivityList BoxActivityGetListByBoxId(long boxId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityGetListByBoxIdResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityList> BoxActivityGetListByBoxIdAsync(long boxId, bool loadEligibleUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertResponse")]
        long BoxActivityInsert(long boxId, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertResponse")]
        System.Threading.Tasks.Task<long> BoxActivityInsertAsync(long boxId, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertByName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertByNameResponse")]
        long BoxActivityInsertByName(long projectLocationId, string jobName, string boxName, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertByName", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertByNameResponse")]
        System.Threading.Tasks.Task<long> BoxActivityInsertByNameAsync(long projectLocationId, string jobName, string boxName, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertNextActivity", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertNextActivityResponse")]
        VastecOPMSP.FHSvc.BoxActivityDacDualIndex BoxActivityInsertNextActivity(long boxActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertNextActivity", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityInsertNextActivityResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityDacDualIndex> BoxActivityInsertNextActivityAsync(long boxActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdateResponse")]
        void BoxActivityUpdate(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdateResponse")]
        System.Threading.Tasks.Task BoxActivityUpdateAsync(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdateSafeResponse")]
        void BoxActivityUpdateSafe(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityUpdateSafeResponse")]
        System.Threading.Tasks.Task BoxActivityUpdateSafeAsync(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/AssignActivity", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/AssignActivityResponse")]
        void AssignActivity(long boxActivityId, long assignedUserId, long changeUserId, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/AssignActivity", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/AssignActivityResponse")]
        System.Threading.Tasks.Task AssignActivityAsync(long boxActivityId, long assignedUserId, long changeUserId, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityDeleteResponse")]
        int BoxActivityDelete(long boxActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxActivityDeleteResponse")]
        System.Threading.Tasks.Task<int> BoxActivityDeleteAsync(long boxActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetListResponse")]
        VastecOPMSP.FHSvc.BoxFolderList BoxFolderGetList(System.Nullable<long> boxFolderId, System.Nullable<long> boxId, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxFolderList> BoxFolderGetListAsync(System.Nullable<long> boxFolderId, System.Nullable<long> boxId, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetFinalizeXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetFinalizeXmlResponse")]
        string BoxFolderGetFinalizeXml(long boxFolderId, System.Nullable<long> fileInfoId, bool showExtractedDfrData, bool showIndexProfileData, bool showSaveStateItemData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetFinalizeXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderGetFinalizeXmlResponse")]
        System.Threading.Tasks.Task<string> BoxFolderGetFinalizeXmlAsync(long boxFolderId, System.Nullable<long> fileInfoId, bool showExtractedDfrData, bool showIndexProfileData, bool showSaveStateItemData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderInsertResponse")]
        long BoxFolderInsert(long boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, bool allFormsAreValid, bool allFormsHadQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderInsertResponse")]
        System.Threading.Tasks.Task<long> BoxFolderInsertAsync(long boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, bool allFormsAreValid, bool allFormsHadQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderUpdateResponse")]
        void BoxFolderUpdate(long boxFolderId, System.Nullable<long> boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderUpdateResponse")]
        System.Threading.Tasks.Task BoxFolderUpdateAsync(long boxFolderId, System.Nullable<long> boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderDeleteResponse")]
        int BoxFolderDelete(long boxFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxFolderDeleteResponse")]
        System.Threading.Tasks.Task<int> BoxFolderDeleteAsync(long boxFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestGetListResponse")]
        VastecOPMSP.FHSvc.BoxManifestList BoxManifestGetList(System.Nullable<long> boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, string boxStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxManifestList> BoxManifestGetListAsync(System.Nullable<long> boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, string boxStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsertResponse")]
        long BoxManifestInsert(long projectOfficeIdentifierId, System.Nullable<long> boxId, long spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, int numberParcels, string boxStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsertResponse")]
        System.Threading.Tasks.Task<long> BoxManifestInsertAsync(long projectOfficeIdentifierId, System.Nullable<long> boxId, long spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, int numberParcels, string boxStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdateResponse")]
        void BoxManifestUpdate(long boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdateResponse")]
        System.Threading.Tasks.Task BoxManifestUpdateAsync(long boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestAddToJobBatch", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestAddToJobBatchResponse")]
        void BoxManifestAddToJobBatch(long[] boxManifestIdList, long jobId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestAddToJobBatch", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestAddToJobBatchResponse")]
        System.Threading.Tasks.Task BoxManifestAddToJobBatchAsync(long[] boxManifestIdList, long jobId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdateBatch", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdateBatchResponse")]
        void BoxManifestUpdateBatch(long[] boxManifestIdList, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdateBatch", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestUpdateBatchResponse")]
        System.Threading.Tasks.Task BoxManifestUpdateBatchAsync(long[] boxManifestIdList, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsertWithItems", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsertWithItemsResponse")]
        long BoxManifestInsertWithItems(string xml, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsertWithItems", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestInsertWithItemsResponse")]
        System.Threading.Tasks.Task<long> BoxManifestInsertWithItemsAsync(string xml, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestDeleteResponse")]
        int BoxManifestDelete(long boxManifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestDeleteResponse")]
        System.Threading.Tasks.Task<int> BoxManifestDeleteAsync(long boxManifestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemGetListResponse")]
        VastecOPMSP.FHSvc.BoxManifestItemList BoxManifestItemGetList(System.Nullable<long> boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, string status, string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxManifestItemList> BoxManifestItemGetListAsync(System.Nullable<long> boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, string status, string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemInsertResponse")]
        long BoxManifestItemInsert(long boxManifestId, System.Nullable<long> boxFolderId, long spBoxManifestItemId, long changeUserId, System.DateTime addedToBoxDate, bool isMerge, string status, string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemInsertResponse")]
        System.Threading.Tasks.Task<long> BoxManifestItemInsertAsync(long boxManifestId, System.Nullable<long> boxFolderId, long spBoxManifestItemId, long changeUserId, System.DateTime addedToBoxDate, bool isMerge, string status, string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemUpdateResponse")]
        void BoxManifestItemUpdate(long boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, long changeUserId, System.Nullable<System.DateTime> addedToBoxDate, System.Nullable<System.DateTime> priorityFolderDate, System.Nullable<System.DateTime> issueFolderDate, System.Nullable<System.DateTime> confirmationDate, System.Nullable<bool> isMerge, string status, string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemUpdateResponse")]
        System.Threading.Tasks.Task BoxManifestItemUpdateAsync(long boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, long changeUserId, System.Nullable<System.DateTime> addedToBoxDate, System.Nullable<System.DateTime> priorityFolderDate, System.Nullable<System.DateTime> issueFolderDate, System.Nullable<System.DateTime> confirmationDate, System.Nullable<bool> isMerge, string status, string ssn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemDeleteResponse")]
        int BoxManifestItemDelete(long boxManifestItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemDeleteResponse")]
        System.Threading.Tasks.Task<int> BoxManifestItemDeleteAsync(long boxManifestItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitGetListResponse")]
        VastecOPMSP.FHSvc.BoxManifestItemTransmitList BoxManifestItemTransmitGetList(System.Nullable<long> boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<bool> packageConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxManifestItemTransmitList> BoxManifestItemTransmitGetListAsync(System.Nullable<long> boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<bool> packageConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitInsertResponse")]
        long BoxManifestItemTransmitInsert(long boxManifestItemId, System.Nullable<System.DateTime> transmitDate, bool packageConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitInsertResponse")]
        System.Threading.Tasks.Task<long> BoxManifestItemTransmitInsertAsync(long boxManifestItemId, System.Nullable<System.DateTime> transmitDate, bool packageConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitUpdateResponse")]
        void BoxManifestItemTransmitUpdate(long boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<System.DateTime> transmitDate, System.Nullable<bool> packageConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitUpdateResponse")]
        System.Threading.Tasks.Task BoxManifestItemTransmitUpdateAsync(long boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<System.DateTime> transmitDate, System.Nullable<bool> packageConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitDeleteResponse")]
        int BoxManifestItemTransmitDelete(long boxManifestItemTransmitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/BoxManifestItemTransmitDeleteResponse")]
        System.Threading.Tasks.Task<int> BoxManifestItemTransmitDeleteAsync(long boxManifestItemTransmitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerGetListResponse")]
        VastecOPMSP.FHSvc.CustomerList CustomerGetList(System.Nullable<long> customerId, string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CustomerList> CustomerGetListAsync(System.Nullable<long> customerId, string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerInsertResponse")]
        long CustomerInsert(long metadataTypeId, string customerName, string customerNotes, string customerFolderUri, bool usesBoxManifest, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerInsertResponse")]
        System.Threading.Tasks.Task<long> CustomerInsertAsync(long metadataTypeId, string customerName, string customerNotes, string customerFolderUri, bool usesBoxManifest, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdateResponse")]
        void CustomerUpdate(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdateResponse")]
        System.Threading.Tasks.Task CustomerUpdateAsync(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdateSafeResponse")]
        void CustomerUpdateSafe(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUpdateSafeResponse")]
        System.Threading.Tasks.Task CustomerUpdateSafeAsync(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerDeleteResponse")]
        int CustomerDelete(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerDeleteResponse")]
        System.Threading.Tasks.Task<int> CustomerDeleteAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetListResponse")]
        VastecOPMSP.FHSvc.CustomerUserRoleList CustomerUserRoleGetList(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CustomerUserRoleList> CustomerUserRoleGetListAsync(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetExtendedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetExtendedListResponse")]
        VastecOPMSP.FHSvc.CustomerUserRoleList CustomerUserRoleGetExtendedList(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetExtendedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleGetExtendedListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CustomerUserRoleList> CustomerUserRoleGetExtendedListAsync(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleInsertResponse")]
        long CustomerUserRoleInsert(long customerId, long userId, long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleInsertResponse")]
        System.Threading.Tasks.Task<long> CustomerUserRoleInsertAsync(long customerId, long userId, long roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleUpdateResponse")]
        void CustomerUserRoleUpdate(long customerUserRoleId, System.Nullable<long> customerId, System.Nullable<long> userId, System.Nullable<long> roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleUpdateResponse")]
        System.Threading.Tasks.Task CustomerUserRoleUpdateAsync(long customerUserRoleId, System.Nullable<long> customerId, System.Nullable<long> userId, System.Nullable<long> roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleDeleteResponse")]
        int CustomerUserRoleDelete(long customerUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/CustomerUserRoleDeleteResponse")]
        System.Threading.Tasks.Task<int> CustomerUserRoleDeleteAsync(long customerUserRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityStatusList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityStatusListResponse")]
        VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityStatusList(VastecOPMSP.FHSvc.DataViewActivityStatusValues activityStatusValue, System.Nullable<long> jobId, System.Nullable<long> boxId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> jobStartCreateDate, System.Nullable<System.DateTime> jobEndCreateDate, bool onlyActiveJobs, System.Nullable<long> forUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityStatusList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityStatusListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityStatusListAsync(VastecOPMSP.FHSvc.DataViewActivityStatusValues activityStatusValue, System.Nullable<long> jobId, System.Nullable<long> boxId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> jobStartCreateDate, System.Nullable<System.DateTime> jobEndCreateDate, bool onlyActiveJobs, System.Nullable<long> forUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionListResponse")]
        VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityActionList(long forUserId, bool asOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityActionListAsync(long forUserId, bool asOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionPdfiList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionPdfiListResponse")]
        VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityActionPdfiList(long forUserId, bool asAnOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionPdfiList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityActionPdfiListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityActionPdfiListAsync(long forUserId, bool asAnOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityCompletedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityCompletedListResponse")]
        VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityCompletedList(long forUserId, bool asOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetActivityCompletedList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetActivityCompletedListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityCompletedListAsync(long forUserId, bool asOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetProcessingTotalsList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetProcessingTotalsListResponse")]
        VastecOPMSP.FHSvc.DataViewProcessingTotals[] GetProcessingTotalsList(System.Nullable<long> customerId, System.Nullable<long> projectId, string officeIdentifier, System.DateTime reportStartDate, System.DateTime reportEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetProcessingTotalsList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetProcessingTotalsListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewProcessingTotals[]> GetProcessingTotalsListAsync(System.Nullable<long> customerId, System.Nullable<long> projectId, string officeIdentifier, System.DateTime reportStartDate, System.DateTime reportEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUniqueSaveStateItemList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUniqueSaveStateItemListResponse")]
        VastecOPMSP.FHSvc.DataViewUniqueSaveStateItems[] GetUniqueSaveStateItemList(System.Nullable<long> jobId, System.Nullable<long> boxId, bool onlyInFinalQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetUniqueSaveStateItemList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetUniqueSaveStateItemListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewUniqueSaveStateItems[]> GetUniqueSaveStateItemListAsync(System.Nullable<long> jobId, System.Nullable<long> boxId, bool onlyInFinalQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateValueLookupList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateValueLookupListResponse")]
        VastecOPMSP.FHSvc.DataViewSaveStateValueLookup[] GetSaveStateValueLookupList(System.Nullable<long> jobId, System.Nullable<long> boxId, string itemText, bool onlyInFinalQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateValueLookupList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateValueLookupListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewSaveStateValueLookup[]> GetSaveStateValueLookupListAsync(System.Nullable<long> jobId, System.Nullable<long> boxId, string itemText, bool onlyInFinalQa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateHistoryList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateHistoryListResponse")]
        VastecOPMSP.FHSvc.DataViewSaveStateHistory[] GetSaveStateHistoryList(System.DateTime changeDate, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateHistoryList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetSaveStateHistoryListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewSaveStateHistory[]> GetSaveStateHistoryListAsync(System.DateTime changeDate, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetFileTouchAvgList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetFileTouchAvgListResponse")]
        VastecOPMSP.FHSvc.DataViewFileTouchAvg[] GetFileTouchAvgList(System.DateTime changeDate, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetFileTouchAvgList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetFileTouchAvgListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewFileTouchAvg[]> GetFileTouchAvgListAsync(System.DateTime changeDate, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetProcessQueueErrorsList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetProcessQueueErrorsListResponse")]
        VastecOPMSP.FHSvc.DataViewProcessErrors[] GetProcessQueueErrorsList(System.Nullable<long> batchId, System.Nullable<long> jobId, System.Nullable<long> processInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/GetProcessQueueErrorsList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/GetProcessQueueErrorsListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewProcessErrors[]> GetProcessQueueErrorsListAsync(System.Nullable<long> batchId, System.Nullable<long> jobId, System.Nullable<long> processInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationGetListResponse")]
        VastecOPMSP.FHSvc.DocumentationList DocumentationGetList(System.Nullable<long> documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DocumentationList> DocumentationGetListAsync(System.Nullable<long> documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationInsertResponse")]
        long DocumentationInsert(long projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, long changeUserId, string description, string internalDocumentation, string externalDocumentationUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationInsertResponse")]
        System.Threading.Tasks.Task<long> DocumentationInsertAsync(long projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, long changeUserId, string description, string internalDocumentation, string externalDocumentationUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationUpdateResponse")]
        void DocumentationUpdate(long documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId, string description, string internalDocumentation, string externalDocumentationUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationUpdateResponse")]
        System.Threading.Tasks.Task DocumentationUpdateAsync(long documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId, string description, string internalDocumentation, string externalDocumentationUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationDeleteResponse")]
        int DocumentationDelete(long documentationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DocumentationDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DocumentationDeleteResponse")]
        System.Threading.Tasks.Task<int> DocumentationDeleteAsync(long documentationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetListResponse")]
        VastecOPMSP.FHSvc.FileInfoList FileInfoGetList(System.Nullable<long> fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.FileInfoList> FileInfoGetListAsync(System.Nullable<long> fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetUnknownFormsXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetUnknownFormsXmlResponse")]
        string FileInfoGetUnknownFormsXml(System.Nullable<long> assignedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetUnknownFormsXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoGetUnknownFormsXmlResponse")]
        System.Threading.Tasks.Task<string> FileInfoGetUnknownFormsXmlAsync(System.Nullable<long> assignedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsertResponse")]
        long FileInfoInsert(System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, int totalPages, int ocrStartPage, int ocrEndPage, bool wasConfirmed, string sourceLocation, string formTypeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsertResponse")]
        System.Threading.Tasks.Task<long> FileInfoInsertAsync(System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, int totalPages, int ocrStartPage, int ocrEndPage, bool wasConfirmed, string sourceLocation, string formTypeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdateResponse")]
        void FileInfoUpdate(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string sourceLocation, string formTypeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdateResponse")]
        System.Threading.Tasks.Task FileInfoUpdateAsync(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string sourceLocation, string formTypeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdateSafeResponse")]
        void FileInfoUpdateSafe(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string rowVersion, string sourceLocation, string formTypeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoUpdateSafeResponse")]
        System.Threading.Tasks.Task FileInfoUpdateSafeAsync(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string rowVersion, string sourceLocation, string formTypeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserReleased", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserReleasedResponse")]
        void FileInfoSetUserReleased(long fileInfoHistoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserReleased", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserReleasedResponse")]
        System.Threading.Tasks.Task FileInfoSetUserReleasedAsync(long fileInfoHistoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoMerge", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoMergeResponse")]
        void FileInfoMerge(long fileInfoId1, long fileInfoId2, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoMerge", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoMergeResponse")]
        System.Threading.Tasks.Task FileInfoMergeAsync(long fileInfoId1, long fileInfoId2, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSplit", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSplitResponse")]
        void FileInfoSplit(long fileInfoId1, int pageNumber, long mdFormId, string fileName, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSplit", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSplitResponse")]
        System.Threading.Tasks.Task FileInfoSplitAsync(long fileInfoId1, int pageNumber, long mdFormId, string fileName, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserAccessed", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserAccessedResponse")]
        long FileInfoSetUserAccessed(long fileInfoId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserAccessed", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoSetUserAccessedResponse")]
        System.Threading.Tasks.Task<long> FileInfoSetUserAccessedAsync(long fileInfoId, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsertUserAccessed", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsertUserAccessedResponse")]
        long FileInfoInsertUserAccessed(long fileInfoId, long changeUserId, int accessTimeSec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsertUserAccessed", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoInsertUserAccessedResponse")]
        System.Threading.Tasks.Task<long> FileInfoInsertUserAccessedAsync(long fileInfoId, long changeUserId, int accessTimeSec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoDeleteResponse")]
        int FileInfoDelete(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoDeleteResponse")]
        System.Threading.Tasks.Task<int> FileInfoDeleteAsync(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageFormGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageFormGetListResponse")]
        VastecOPMSP.FHSvc.FileInfoPackageFormList FileInfoPackageFormGetList(System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageFormGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageFormGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.FileInfoPackageFormList> FileInfoPackageFormGetListAsync(System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageInsertResponse")]
        long FileInfoPackageInsert(long fileInfoId, long mdFormId, int pdfStartPageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageInsertResponse")]
        System.Threading.Tasks.Task<long> FileInfoPackageInsertAsync(long fileInfoId, long mdFormId, int pdfStartPageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageUpdateResponse")]
        void FileInfoPackageUpdate(long fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId, System.Nullable<int> pdfStartPageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageUpdateResponse")]
        System.Threading.Tasks.Task FileInfoPackageUpdateAsync(long fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId, System.Nullable<int> pdfStartPageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageDeleteResponse")]
        int FileInfoPackageDelete(long fileInfoPackageFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoPackageDeleteResponse")]
        System.Threading.Tasks.Task<int> FileInfoPackageDeleteAsync(long fileInfoPackageFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldGetListResponse")]
        VastecOPMSP.FHSvc.FileInfoFieldList FileInfoFieldGetList(System.Nullable<long> fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.FileInfoFieldList> FileInfoFieldGetListAsync(System.Nullable<long> fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldInsertResponse")]
        long FileInfoFieldInsert(System.Nullable<long> fileInfoPackageFormId, long fileInfoId, long mdFieldId, string extractedValue, string charConfidence, int pdfPageNumber, int primeTopCoord, int primeLeftCoord, int primeRightCoord, int primeBottomCoord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldInsertResponse")]
        System.Threading.Tasks.Task<long> FileInfoFieldInsertAsync(System.Nullable<long> fileInfoPackageFormId, long fileInfoId, long mdFieldId, string extractedValue, string charConfidence, int pdfPageNumber, int primeTopCoord, int primeLeftCoord, int primeRightCoord, int primeBottomCoord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldUpdateResponse")]
        void FileInfoFieldUpdate(long fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId, string extractedValue, string charConfidence, System.Nullable<int> pdfPageNumber, System.Nullable<int> primeTopCoord, System.Nullable<int> primeLeftCoord, System.Nullable<int> primeRightCoord, System.Nullable<int> primeBottomCoord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldUpdateResponse")]
        System.Threading.Tasks.Task FileInfoFieldUpdateAsync(long fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId, string extractedValue, string charConfidence, System.Nullable<int> pdfPageNumber, System.Nullable<int> primeTopCoord, System.Nullable<int> primeLeftCoord, System.Nullable<int> primeRightCoord, System.Nullable<int> primeBottomCoord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDeleteResponse")]
        int FileInfoFieldDelete(long fileInfoFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDeleteResponse")]
        System.Threading.Tasks.Task<int> FileInfoFieldDeleteAsync(long fileInfoFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDeleteByFileInfoId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDeleteByFileInfoIdResponse")]
        int FileInfoFieldDeleteByFileInfoId(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDeleteByFileInfoId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/FileInfoFieldDeleteByFileInfoIdResponse")]
        System.Threading.Tasks.Task<int> FileInfoFieldDeleteByFileInfoIdAsync(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetListResponse")]
        VastecOPMSP.FHSvc.IndexProfileList IndexProfileGetList(System.Nullable<long> indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> mdFormId, System.Nullable<long> metadataTypeId, string profileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileList> IndexProfileGetListAsync(System.Nullable<long> indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> mdFormId, System.Nullable<long> metadataTypeId, string profileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetDumpXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetDumpXmlResponse")]
        string IndexProfileGetDumpXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetDumpXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileGetDumpXmlResponse")]
        System.Threading.Tasks.Task<string> IndexProfileGetDumpXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileInsertResponse")]
        long IndexProfileInsert(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileInsertResponse")]
        System.Threading.Tasks.Task<long> IndexProfileInsertAsync(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileInsertResponse")]
        long DbSyncIndexProfileInsert(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncIndexProfileInsertAsync(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string globalUniqueKey, string serverCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdateResponse")]
        void IndexProfileUpdate(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdateResponse")]
        System.Threading.Tasks.Task IndexProfileUpdateAsync(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdateSafeResponse")]
        void IndexProfileUpdateSafe(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string rowVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileUpdateSafeResponse")]
        System.Threading.Tasks.Task IndexProfileUpdateSafeAsync(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string rowVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRemove", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRemoveResponse")]
        void IndexProfileRemove(long indexProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRemove", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRemoveResponse")]
        System.Threading.Tasks.Task IndexProfileRemoveAsync(long indexProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRenumberItemFieldPositions", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRenumberItemFieldPositionsResp" +
            "onse")]
        void IndexProfileRenumberItemFieldPositions(long indexProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRenumberItemFieldPositions", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileRenumberItemFieldPositionsResp" +
            "onse")]
        System.Threading.Tasks.Task IndexProfileRenumberItemFieldPositionsAsync(long indexProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileDeleteResponse")]
        int IndexProfileDelete(long indexProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileDeleteResponse")]
        System.Threading.Tasks.Task<int> IndexProfileDeleteAsync(long indexProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemGetListResponse")]
        VastecOPMSP.FHSvc.IndexProfileItemList IndexProfileItemGetList(System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileId, System.Nullable<long> mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemList> IndexProfileItemGetListAsync(System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileId, System.Nullable<long> mdFieldIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemInsertResponse")]
        long IndexProfileItemInsert(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    bool isRichTextEditor, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemInsertResponse")]
        System.Threading.Tasks.Task<long> IndexProfileItemInsertAsync(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    bool isRichTextEditor, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileItemInsertResponse")]
        long DbSyncIndexProfileItemInsert(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool isRichTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList, 
                    string serverCreated, 
                    string globalUniqueKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/DbSyncIndexProfileItemInsertResponse")]
        System.Threading.Tasks.Task<long> DbSyncIndexProfileItemInsertAsync(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool isRichTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList, 
                    string serverCreated, 
                    string globalUniqueKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdateResponse")]
        void IndexProfileItemUpdate(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdateResponse")]
        System.Threading.Tasks.Task IndexProfileItemUpdateAsync(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdateSafeResponse")]
        void IndexProfileItemUpdateSafe(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId, 
                    string rowVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdateSafe", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemUpdateSafeResponse")]
        System.Threading.Tasks.Task IndexProfileItemUpdateSafeAsync(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId, 
                    string rowVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemRemove", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemRemoveResponse")]
        void IndexProfileItemRemove(long indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemRemove", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemRemoveResponse")]
        System.Threading.Tasks.Task IndexProfileItemRemoveAsync(long indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemDeleteResponse")]
        int IndexProfileItemDelete(long indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemDeleteResponse")]
        System.Threading.Tasks.Task<int> IndexProfileItemDeleteAsync(long indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplacePicklist", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplacePicklistResponse")]
        void IndexProfileItemReplacePicklist(long indexProfileItemId, string[] picklistItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplacePicklist", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplacePicklistResponse")]
        System.Threading.Tasks.Task IndexProfileItemReplacePicklistAsync(long indexProfileItemId, string[] picklistItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplaceAltFieldIdentifierI" +
            "dList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplaceAltFieldIdentifierI" +
            "dListResponse")]
        void IndexProfileItemReplaceAltFieldIdentifierIdList(long indexProfileItemId, long[] alternateMdFieldIdentifierIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplaceAltFieldIdentifierI" +
            "dList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemReplaceAltFieldIdentifierI" +
            "dListResponse")]
        System.Threading.Tasks.Task IndexProfileItemReplaceAltFieldIdentifierIdListAsync(long indexProfileItemId, long[] alternateMdFieldIdentifierIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetListResponse")]
        VastecOPMSP.FHSvc.IndexProfileItemAssocList[] IndexProfileItemAssocListGetList(System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> indexProfileItemAssocListParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemAssocList[]> IndexProfileItemAssocListGetListAsync(System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> indexProfileItemAssocListParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetXmlResponse")]
        string IndexProfileItemAssocListGetXml(System.Nullable<long> indexProfileItemAssocListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListGetXmlResponse")]
        System.Threading.Tasks.Task<string> IndexProfileItemAssocListGetXmlAsync(System.Nullable<long> indexProfileItemAssocListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListInsertResponse")]
        long IndexProfileItemAssocListInsert(System.Nullable<long> parentAssocListId, string nodeValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListInsertResponse")]
        System.Threading.Tasks.Task<long> IndexProfileItemAssocListInsertAsync(System.Nullable<long> parentAssocListId, string nodeValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListUpdateResponse")]
        void IndexProfileItemAssocListUpdate(long indexProfileItemAssocListId, System.Nullable<long> parentAssocListId, string nodeValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListUpdateResponse")]
        System.Threading.Tasks.Task IndexProfileItemAssocListUpdateAsync(long indexProfileItemAssocListId, System.Nullable<long> parentAssocListId, string nodeValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListDeleteResponse")]
        int IndexProfileItemAssocListDelete(long indexProfileItemAssocListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocListDeleteResponse")]
        System.Threading.Tasks.Task<int> IndexProfileItemAssocListDeleteAsync(long indexProfileItemAssocListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocGetListResponse")]
        VastecOPMSP.FHSvc.IndexProfileItemAssoc[] IndexProfileItemAssocGetList(System.Nullable<long> indexProfileItemAssocId, System.Nullable<long> indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemAssoc[]> IndexProfileItemAssocGetListAsync(System.Nullable<long> indexProfileItemAssocId, System.Nullable<long> indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocInsertResponse")]
        long IndexProfileItemAssocInsert(long indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocInsertResponse")]
        System.Threading.Tasks.Task<long> IndexProfileItemAssocInsertAsync(long indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocUpdateResponse")]
        void IndexProfileItemAssocUpdate(long indexProfileItemAssocId, System.Nullable<long> indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocUpdateResponse")]
        System.Threading.Tasks.Task IndexProfileItemAssocUpdateAsync(long indexProfileItemAssocId, System.Nullable<long> indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDeleteResponse")]
        int IndexProfileItemAssocDelete(long indexProfileItemAssocId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDeleteResponse")]
        System.Threading.Tasks.Task<int> IndexProfileItemAssocDeleteAsync(long indexProfileItemAssocId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetListResponse")]
        VastecOPMSP.FHSvc.IndexProfileItemAssocData[] IndexProfileItemAssocDataGetList(System.Nullable<long> indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemAssocData[]> IndexProfileItemAssocDataGetListAsync(System.Nullable<long> indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetXmlResponse")]
        string IndexProfileItemAssocDataGetXml(System.Nullable<long> indexProfileItemAssocDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataGetXmlResponse")]
        System.Threading.Tasks.Task<string> IndexProfileItemAssocDataGetXmlAsync(System.Nullable<long> indexProfileItemAssocDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataInsertResponse")]
        long IndexProfileItemAssocDataInsert(System.Nullable<long> indexProfileItemId, long indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataInsertResponse")]
        System.Threading.Tasks.Task<long> IndexProfileItemAssocDataInsertAsync(System.Nullable<long> indexProfileItemId, long indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataUpdateResponse")]
        void IndexProfileItemAssocDataUpdate(long indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataUpdate", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataUpdateResponse")]
        System.Threading.Tasks.Task IndexProfileItemAssocDataUpdateAsync(long indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataDeleteResponse")]
        int IndexProfileItemAssocDataDelete(long indexProfileItemAssocDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataDelete", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexProfileItemAssocDataDeleteResponse")]
        System.Threading.Tasks.Task<int> IndexProfileItemAssocDataDeleteAsync(long indexProfileItemAssocDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemGetListResponse")]
        VastecOPMSP.FHSvc.IndexSaveStateItemList IndexSaveStateItemGetList(System.Nullable<long> indexSaveStateItemId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemGetList", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemGetListResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexSaveStateItemList> IndexSaveStateItemGetListAsync(System.Nullable<long> indexSaveStateItemId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemListGetForBox", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemListGetForBoxResponse")]
        VastecOPMSP.FHSvc.IndexSaveStateItemList IndexSaveStateItemListGetForBox(long boxId, string optionalFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemListGetForBox", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemListGetForBoxResponse")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexSaveStateItemList> IndexSaveStateItemListGetForBoxAsync(long boxId, string optionalFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueItemWithFilesXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueItemWithFilesXmlRes" +
            "ponse")]
        string IndexSaveStateGetUniqueItemWithFilesXml(System.Nullable<long> boxId, string boxContainer, bool metadataOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueItemWithFilesXml", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueItemWithFilesXmlRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> IndexSaveStateGetUniqueItemWithFilesXmlAsync(System.Nullable<long> boxId, string boxContainer, bool metadataOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByBoxId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByBoxIdResponse" +
            "")]
        VastecOPMSP.FHSvc.UniqueItemText[] IndexSaveStateGetUniqueTextByBoxId(int returnTopNumber, long boxId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByBoxId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByBoxIdResponse" +
            "")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UniqueItemText[]> IndexSaveStateGetUniqueTextByBoxIdAsync(int returnTopNumber, long boxId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByJobId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByJobIdResponse" +
            "")]
        VastecOPMSP.FHSvc.UniqueItemText[] IndexSaveStateGetUniqueTextByJobId(int returnTopNumber, long jobId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByJobId", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateGetUniqueTextByJobIdResponse" +
            "")]
        System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UniqueItemText[]> IndexSaveStateGetUniqueTextByJobIdAsync(int returnTopNumber, long jobId, System.Nullable<long> changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemInsertResponse")]
        long IndexSaveStateItemInsert(long fileInfoId, long indexProfileItemId, System.Nullable<long> mdFieldId, System.Nullable<long> boxActivityId, long changeUserId, string itemText, bool userMustBeAssignedActivity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemInsert", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemInsertResponse")]
        System.Threading.Tasks.Task<long> IndexSaveStateItemInsertAsync(long fileInfoId, long indexProfileItemId, System.Nullable<long> mdFieldId, System.Nullable<long> boxActivityId, long changeUserId, string itemText, bool userMustBeAssignedActivity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemAutoFill", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemAutoFillResponse")]
        void IndexSaveStateItemAutoFill(long fileInfoId, long projectId, bool useExtractedText, long changeUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemAutoFill", ReplyAction="http://Vastec.FlowHub.Service/IFlowHub/IndexSaveStateItemAutoFillResponse")]
        System.Threading.Tasks.Task IndexSaveStateItemAutoFillAsync(long fileInfoId, long projectId, bool useExtractedText, long changeUserId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlowHubChannel : VastecOPMSP.FHSvc.IFlowHub, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowHubClient : System.ServiceModel.ClientBase<VastecOPMSP.FHSvc.IFlowHub>, VastecOPMSP.FHSvc.IFlowHub {
        
        public FlowHubClient() {
        }
        
        public FlowHubClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlowHubClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlowHubClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlowHubClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long ProjectOfficeIdentifierInsert(long projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, long changeUserId) {
            return base.Channel.ProjectOfficeIdentifierInsert(projectId, officeIdentifier, streetAddress, city, state, zipcode, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> ProjectOfficeIdentifierInsertAsync(long projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, long changeUserId) {
            return base.Channel.ProjectOfficeIdentifierInsertAsync(projectId, officeIdentifier, streetAddress, city, state, zipcode, changeUserId);
        }
        
        public void ProjectOfficeIdentifierUpdate(long projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, System.Nullable<bool> isActive, long changeUserId) {
            base.Channel.ProjectOfficeIdentifierUpdate(projectOfficeIdentifierId, projectId, officeIdentifier, streetAddress, city, state, zipcode, isActive, changeUserId);
        }
        
        public System.Threading.Tasks.Task ProjectOfficeIdentifierUpdateAsync(long projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, string streetAddress, string city, string state, string zipcode, System.Nullable<bool> isActive, long changeUserId) {
            return base.Channel.ProjectOfficeIdentifierUpdateAsync(projectOfficeIdentifierId, projectId, officeIdentifier, streetAddress, city, state, zipcode, isActive, changeUserId);
        }
        
        public int ProjectOfficeIdentifierDelete(long projectOfficeIdentifierId) {
            return base.Channel.ProjectOfficeIdentifierDelete(projectOfficeIdentifierId);
        }
        
        public System.Threading.Tasks.Task<int> ProjectOfficeIdentifierDeleteAsync(long projectOfficeIdentifierId) {
            return base.Channel.ProjectOfficeIdentifierDeleteAsync(projectOfficeIdentifierId);
        }
        
        public VastecOPMSP.FHSvc.ProjectWorkflowList ProjectWorkflowGetList(System.Nullable<long> projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive) {
            return base.Channel.ProjectWorkflowGetList(projectWorkflowId, projectId, workflowId, projectWorkflowActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectWorkflowList> ProjectWorkflowGetListAsync(System.Nullable<long> projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive) {
            return base.Channel.ProjectWorkflowGetListAsync(projectWorkflowId, projectId, workflowId, projectWorkflowActive);
        }
        
        public long ProjectWorkflowInsert(long projectId, long workflowId) {
            return base.Channel.ProjectWorkflowInsert(projectId, workflowId);
        }
        
        public System.Threading.Tasks.Task<long> ProjectWorkflowInsertAsync(long projectId, long workflowId) {
            return base.Channel.ProjectWorkflowInsertAsync(projectId, workflowId);
        }
        
        public void ProjectWorkflowUpdate(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive) {
            base.Channel.ProjectWorkflowUpdate(projectWorkflowId, projectId, workflowId, projectWorkflowActive);
        }
        
        public System.Threading.Tasks.Task ProjectWorkflowUpdateAsync(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive) {
            return base.Channel.ProjectWorkflowUpdateAsync(projectWorkflowId, projectId, workflowId, projectWorkflowActive);
        }
        
        public void ProjectWorkflowUpdateSafe(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive, int version) {
            base.Channel.ProjectWorkflowUpdateSafe(projectWorkflowId, projectId, workflowId, projectWorkflowActive, version);
        }
        
        public System.Threading.Tasks.Task ProjectWorkflowUpdateSafeAsync(long projectWorkflowId, System.Nullable<long> projectId, System.Nullable<long> workflowId, System.Nullable<bool> projectWorkflowActive, int version) {
            return base.Channel.ProjectWorkflowUpdateSafeAsync(projectWorkflowId, projectId, workflowId, projectWorkflowActive, version);
        }
        
        public int ProjectWorkflowDelete(long projectWorkflowId) {
            return base.Channel.ProjectWorkflowDelete(projectWorkflowId);
        }
        
        public System.Threading.Tasks.Task<int> ProjectWorkflowDeleteAsync(long projectWorkflowId) {
            return base.Channel.ProjectWorkflowDeleteAsync(projectWorkflowId);
        }
        
        public VastecOPMSP.FHSvc.RoleList RoleGetList(string roleGroup, System.Nullable<bool> roleActive) {
            return base.Channel.RoleGetList(roleGroup, roleActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.RoleList> RoleGetListAsync(string roleGroup, System.Nullable<bool> roleActive) {
            return base.Channel.RoleGetListAsync(roleGroup, roleActive);
        }
        
        public long RoleInsert(string roleGroup, string roleName, int displayOrder) {
            return base.Channel.RoleInsert(roleGroup, roleName, displayOrder);
        }
        
        public System.Threading.Tasks.Task<long> RoleInsertAsync(string roleGroup, string roleName, int displayOrder) {
            return base.Channel.RoleInsertAsync(roleGroup, roleName, displayOrder);
        }
        
        public void RoleUpdate(long roleId, string roleGroup, string roleName, System.Nullable<int> displayOrder, System.Nullable<bool> roleActive) {
            base.Channel.RoleUpdate(roleId, roleGroup, roleName, displayOrder, roleActive);
        }
        
        public System.Threading.Tasks.Task RoleUpdateAsync(long roleId, string roleGroup, string roleName, System.Nullable<int> displayOrder, System.Nullable<bool> roleActive) {
            return base.Channel.RoleUpdateAsync(roleId, roleGroup, roleName, displayOrder, roleActive);
        }
        
        public int RoleDelete(long roleId) {
            return base.Channel.RoleDelete(roleId);
        }
        
        public System.Threading.Tasks.Task<int> RoleDeleteAsync(long roleId) {
            return base.Channel.RoleDeleteAsync(roleId);
        }
        
        public VastecOPMSP.FHSvc.TeamList TeamGetList(System.Nullable<long> teamId, string teamIdentifier, System.Nullable<bool> teamActive) {
            return base.Channel.TeamGetList(teamId, teamIdentifier, teamActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamList> TeamGetListAsync(System.Nullable<long> teamId, string teamIdentifier, System.Nullable<bool> teamActive) {
            return base.Channel.TeamGetListAsync(teamId, teamIdentifier, teamActive);
        }
        
        public VastecOPMSP.FHSvc.TeamList GetTeamWithMemberInfoList() {
            return base.Channel.GetTeamWithMemberInfoList();
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamList> GetTeamWithMemberInfoListAsync() {
            return base.Channel.GetTeamWithMemberInfoListAsync();
        }
        
        public long TeamInsert(string teamIdentifier) {
            return base.Channel.TeamInsert(teamIdentifier);
        }
        
        public System.Threading.Tasks.Task<long> TeamInsertAsync(string teamIdentifier) {
            return base.Channel.TeamInsertAsync(teamIdentifier);
        }
        
        public void TeamUpdate(long teamId, string teamIdentifier, System.Nullable<bool> teamActive) {
            base.Channel.TeamUpdate(teamId, teamIdentifier, teamActive);
        }
        
        public System.Threading.Tasks.Task TeamUpdateAsync(long teamId, string teamIdentifier, System.Nullable<bool> teamActive) {
            return base.Channel.TeamUpdateAsync(teamId, teamIdentifier, teamActive);
        }
        
        public void TeamUpdateSafe(long teamId, string teamIdentifier, System.Nullable<bool> teamActive, int version) {
            base.Channel.TeamUpdateSafe(teamId, teamIdentifier, teamActive, version);
        }
        
        public System.Threading.Tasks.Task TeamUpdateSafeAsync(long teamId, string teamIdentifier, System.Nullable<bool> teamActive, int version) {
            return base.Channel.TeamUpdateSafeAsync(teamId, teamIdentifier, teamActive, version);
        }
        
        public int TeamDelete(long teamId) {
            return base.Channel.TeamDelete(teamId);
        }
        
        public System.Threading.Tasks.Task<int> TeamDeleteAsync(long teamId) {
            return base.Channel.TeamDeleteAsync(teamId);
        }
        
        public VastecOPMSP.FHSvc.TeamUserList TeamUserGetList(System.Nullable<long> teamUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive) {
            return base.Channel.TeamUserGetList(teamUserId, teamId, userId, teamLead, teamUserActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamUserList> TeamUserGetListAsync(System.Nullable<long> teamUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive) {
            return base.Channel.TeamUserGetListAsync(teamUserId, teamId, userId, teamLead, teamUserActive);
        }
        
        public long TeamUserInsert(long teamId, long userId, System.Nullable<bool> teamLead, long changeUserId) {
            return base.Channel.TeamUserInsert(teamId, userId, teamLead, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> TeamUserInsertAsync(long teamId, long userId, System.Nullable<bool> teamLead, long changeUserId) {
            return base.Channel.TeamUserInsertAsync(teamId, userId, teamLead, changeUserId);
        }
        
        public void TeamUserUpdate(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive) {
            base.Channel.TeamUserUpdate(teamUserId, changeUserId, teamId, userId, teamLead, teamUserActive);
        }
        
        public System.Threading.Tasks.Task TeamUserUpdateAsync(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive) {
            return base.Channel.TeamUserUpdateAsync(teamUserId, changeUserId, teamId, userId, teamLead, teamUserActive);
        }
        
        public void TeamUserUpdateSafe(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive, int version) {
            base.Channel.TeamUserUpdateSafe(teamUserId, changeUserId, teamId, userId, teamLead, teamUserActive, version);
        }
        
        public System.Threading.Tasks.Task TeamUserUpdateSafeAsync(long teamUserId, long changeUserId, System.Nullable<long> teamId, System.Nullable<long> userId, System.Nullable<bool> teamLead, System.Nullable<bool> teamUserActive, int version) {
            return base.Channel.TeamUserUpdateSafeAsync(teamUserId, changeUserId, teamId, userId, teamLead, teamUserActive, version);
        }
        
        public int TeamUserDelete(long teamUserId) {
            return base.Channel.TeamUserDelete(teamUserId);
        }
        
        public System.Threading.Tasks.Task<int> TeamUserDeleteAsync(long teamUserId) {
            return base.Channel.TeamUserDeleteAsync(teamUserId);
        }
        
        public VastecOPMSP.FHSvc.TeamUserRoleList TeamUserRoleGetList(System.Nullable<long> teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority) {
            return base.Channel.TeamUserRoleGetList(teamUserRoleId, teamUserId, roleId, teamUserRolePriority);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.TeamUserRoleList> TeamUserRoleGetListAsync(System.Nullable<long> teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority) {
            return base.Channel.TeamUserRoleGetListAsync(teamUserRoleId, teamUserId, roleId, teamUserRolePriority);
        }
        
        public long TeamUserRoleInsert(long teamUserId, long roleId, int teamUserRolePriority) {
            return base.Channel.TeamUserRoleInsert(teamUserId, roleId, teamUserRolePriority);
        }
        
        public System.Threading.Tasks.Task<long> TeamUserRoleInsertAsync(long teamUserId, long roleId, int teamUserRolePriority) {
            return base.Channel.TeamUserRoleInsertAsync(teamUserId, roleId, teamUserRolePriority);
        }
        
        public void TeamUserRoleUpdate(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority) {
            base.Channel.TeamUserRoleUpdate(teamUserRoleId, teamUserId, roleId, teamUserRolePriority);
        }
        
        public System.Threading.Tasks.Task TeamUserRoleUpdateAsync(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority) {
            return base.Channel.TeamUserRoleUpdateAsync(teamUserRoleId, teamUserId, roleId, teamUserRolePriority);
        }
        
        public void TeamUserRoleUpdateSafe(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority, int version) {
            base.Channel.TeamUserRoleUpdateSafe(teamUserRoleId, teamUserId, roleId, teamUserRolePriority, version);
        }
        
        public System.Threading.Tasks.Task TeamUserRoleUpdateSafeAsync(long teamUserRoleId, System.Nullable<long> teamUserId, System.Nullable<long> roleId, System.Nullable<int> teamUserRolePriority, int version) {
            return base.Channel.TeamUserRoleUpdateSafeAsync(teamUserRoleId, teamUserId, roleId, teamUserRolePriority, version);
        }
        
        public int TeamUserRoleDelete(long teamUserRoleId) {
            return base.Channel.TeamUserRoleDelete(teamUserRoleId);
        }
        
        public System.Threading.Tasks.Task<int> TeamUserRoleDeleteAsync(long teamUserRoleId) {
            return base.Channel.TeamUserRoleDeleteAsync(teamUserRoleId);
        }
        
        public VastecOPMSP.FHSvc.User UserGetWithRolesByLogin(long locationId, string domainName, string userLogin) {
            return base.Channel.UserGetWithRolesByLogin(locationId, domainName, userLogin);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.User> UserGetWithRolesByLoginAsync(long locationId, string domainName, string userLogin) {
            return base.Channel.UserGetWithRolesByLoginAsync(locationId, domainName, userLogin);
        }
        
        public VastecOPMSP.FHSvc.User UserGetWithRolesById(long userId) {
            return base.Channel.UserGetWithRolesById(userId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.User> UserGetWithRolesByIdAsync(long userId) {
            return base.Channel.UserGetWithRolesByIdAsync(userId);
        }
        
        public VastecOPMSP.FHSvc.UserList UserGetList(System.Nullable<long> userId, string domain, string login, System.Nullable<bool> userActive) {
            return base.Channel.UserGetList(userId, domain, login, userActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserList> UserGetListAsync(System.Nullable<long> userId, string domain, string login, System.Nullable<bool> userActive) {
            return base.Channel.UserGetListAsync(userId, domain, login, userActive);
        }
        
        public VastecOPMSP.FHSvc.UserList GetUserWithJobActivityRoleList(long jobActivityId) {
            return base.Channel.GetUserWithJobActivityRoleList(jobActivityId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserList> GetUserWithJobActivityRoleListAsync(long jobActivityId) {
            return base.Channel.GetUserWithJobActivityRoleListAsync(jobActivityId);
        }
        
        public VastecOPMSP.FHSvc.UserList GetUserWithBoxActivityRoleList(long boxActivityId) {
            return base.Channel.GetUserWithBoxActivityRoleList(boxActivityId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserList> GetUserWithBoxActivityRoleListAsync(long boxActivityId) {
            return base.Channel.GetUserWithBoxActivityRoleListAsync(boxActivityId);
        }
        
        public string GetUserWithRolesList(System.Nullable<long> userId, System.Nullable<long> teamId, string domain, string login, System.Nullable<bool> userActive) {
            return base.Channel.GetUserWithRolesList(userId, teamId, domain, login, userActive);
        }
        
        public System.Threading.Tasks.Task<string> GetUserWithRolesListAsync(System.Nullable<long> userId, System.Nullable<long> teamId, string domain, string login, System.Nullable<bool> userActive) {
            return base.Channel.GetUserWithRolesListAsync(userId, teamId, domain, login, userActive);
        }
        
        public long UserRegister(long locationId, string domain, string login, string lastName, string firstName, bool setLastLogin) {
            return base.Channel.UserRegister(locationId, domain, login, lastName, firstName, setLastLogin);
        }
        
        public System.Threading.Tasks.Task<long> UserRegisterAsync(long locationId, string domain, string login, string lastName, string firstName, bool setLastLogin) {
            return base.Channel.UserRegisterAsync(locationId, domain, login, lastName, firstName, setLastLogin);
        }
        
        public long UserInsert(long locationId, string domain, string login, string lastName, string firstName) {
            return base.Channel.UserInsert(locationId, domain, login, lastName, firstName);
        }
        
        public System.Threading.Tasks.Task<long> UserInsertAsync(long locationId, string domain, string login, string lastName, string firstName) {
            return base.Channel.UserInsertAsync(locationId, domain, login, lastName, firstName);
        }
        
        public void UserUpdate(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive) {
            base.Channel.UserUpdate(userId, locationId, domain, login, lastName, firstName, lastLogin, userActive);
        }
        
        public System.Threading.Tasks.Task UserUpdateAsync(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive) {
            return base.Channel.UserUpdateAsync(userId, locationId, domain, login, lastName, firstName, lastLogin, userActive);
        }
        
        public void UserUpdateSafe(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive, int version) {
            base.Channel.UserUpdateSafe(userId, locationId, domain, login, lastName, firstName, lastLogin, userActive, version);
        }
        
        public System.Threading.Tasks.Task UserUpdateSafeAsync(long userId, System.Nullable<long> locationId, string domain, string login, string lastName, string firstName, System.Nullable<System.DateTime> lastLogin, System.Nullable<bool> userActive, int version) {
            return base.Channel.UserUpdateSafeAsync(userId, locationId, domain, login, lastName, firstName, lastLogin, userActive, version);
        }
        
        public int UserDelete(long userId) {
            return base.Channel.UserDelete(userId);
        }
        
        public System.Threading.Tasks.Task<int> UserDeleteAsync(long userId) {
            return base.Channel.UserDeleteAsync(userId);
        }
        
        public VastecOPMSP.FHSvc.UserActivity[] UserActivityGetList(System.Nullable<long> userActivityId, System.Nullable<long> userId, string activityName, System.Nullable<System.DateTime> activityTimeStart, System.Nullable<System.DateTime> activityTimeEnd) {
            return base.Channel.UserActivityGetList(userActivityId, userId, activityName, activityTimeStart, activityTimeEnd);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserActivity[]> UserActivityGetListAsync(System.Nullable<long> userActivityId, System.Nullable<long> userId, string activityName, System.Nullable<System.DateTime> activityTimeStart, System.Nullable<System.DateTime> activityTimeEnd) {
            return base.Channel.UserActivityGetListAsync(userActivityId, userId, activityName, activityTimeStart, activityTimeEnd);
        }
        
        public long UserActivityInsert(long userId, string activityName, System.Nullable<System.DateTime> activityStartTime, System.Nullable<System.DateTime> activityEndTime) {
            return base.Channel.UserActivityInsert(userId, activityName, activityStartTime, activityEndTime);
        }
        
        public System.Threading.Tasks.Task<long> UserActivityInsertAsync(long userId, string activityName, System.Nullable<System.DateTime> activityStartTime, System.Nullable<System.DateTime> activityEndTime) {
            return base.Channel.UserActivityInsertAsync(userId, activityName, activityStartTime, activityEndTime);
        }
        
        public void UserActivityUpdate(long userActivityId, System.DateTime activityEndTime) {
            base.Channel.UserActivityUpdate(userActivityId, activityEndTime);
        }
        
        public System.Threading.Tasks.Task UserActivityUpdateAsync(long userActivityId, System.DateTime activityEndTime) {
            return base.Channel.UserActivityUpdateAsync(userActivityId, activityEndTime);
        }
        
        public int UserActivityDelete(long userActivityId) {
            return base.Channel.UserActivityDelete(userActivityId);
        }
        
        public System.Threading.Tasks.Task<int> UserActivityDeleteAsync(long userActivityId) {
            return base.Channel.UserActivityDeleteAsync(userActivityId);
        }
        
        public VastecOPMSP.FHSvc.UserCookie[] UserCookieGetList(System.Nullable<long> userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName) {
            return base.Channel.UserCookieGetList(userCookieId, userId, applicationName, cookieGroup, cookieName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserCookie[]> UserCookieGetListAsync(System.Nullable<long> userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName) {
            return base.Channel.UserCookieGetListAsync(userCookieId, userId, applicationName, cookieGroup, cookieName);
        }
        
        public long UserCookieInsert(long userId, string applicationName, string cookieGroup, string cookieName, string cookieValue) {
            return base.Channel.UserCookieInsert(userId, applicationName, cookieGroup, cookieName, cookieValue);
        }
        
        public System.Threading.Tasks.Task<long> UserCookieInsertAsync(long userId, string applicationName, string cookieGroup, string cookieName, string cookieValue) {
            return base.Channel.UserCookieInsertAsync(userId, applicationName, cookieGroup, cookieName, cookieValue);
        }
        
        public void UserCookieUpdate(long userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName, string cookieValue) {
            base.Channel.UserCookieUpdate(userCookieId, userId, applicationName, cookieGroup, cookieName, cookieValue);
        }
        
        public System.Threading.Tasks.Task UserCookieUpdateAsync(long userCookieId, System.Nullable<long> userId, string applicationName, string cookieGroup, string cookieName, string cookieValue) {
            return base.Channel.UserCookieUpdateAsync(userCookieId, userId, applicationName, cookieGroup, cookieName, cookieValue);
        }
        
        public int UserCookieDelete(long userCookieId) {
            return base.Channel.UserCookieDelete(userCookieId);
        }
        
        public System.Threading.Tasks.Task<int> UserCookieDeleteAsync(long userCookieId) {
            return base.Channel.UserCookieDeleteAsync(userCookieId);
        }
        
        public int UserCookieDeleteByUserId(long userId) {
            return base.Channel.UserCookieDeleteByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<int> UserCookieDeleteByUserIdAsync(long userId) {
            return base.Channel.UserCookieDeleteByUserIdAsync(userId);
        }
        
        public VastecOPMSP.FHSvc.UserNoteList UserNoteGetList(System.Nullable<long> userNoteId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId) {
            return base.Channel.UserNoteGetList(userNoteId, jobId, jobActivityId, boxActivityId, changeUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserNoteList> UserNoteGetListAsync(System.Nullable<long> userNoteId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId) {
            return base.Channel.UserNoteGetListAsync(userNoteId, jobId, jobActivityId, boxActivityId, changeUserId);
        }
        
        public long UserNoteInsert(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, long changeUserId, string noteText) {
            return base.Channel.UserNoteInsert(jobActivityId, boxActivityId, changeUserId, noteText);
        }
        
        public System.Threading.Tasks.Task<long> UserNoteInsertAsync(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, long changeUserId, string noteText) {
            return base.Channel.UserNoteInsertAsync(jobActivityId, boxActivityId, changeUserId, noteText);
        }
        
        public void UserNoteUpdate(long userNoteId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId, string noteText) {
            base.Channel.UserNoteUpdate(userNoteId, jobActivityId, boxActivityId, changeUserId, noteText);
        }
        
        public System.Threading.Tasks.Task UserNoteUpdateAsync(long userNoteId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> changeUserId, string noteText) {
            return base.Channel.UserNoteUpdateAsync(userNoteId, jobActivityId, boxActivityId, changeUserId, noteText);
        }
        
        public int UserNoteDelete(long userNoteId) {
            return base.Channel.UserNoteDelete(userNoteId);
        }
        
        public System.Threading.Tasks.Task<int> UserNoteDeleteAsync(long userNoteId) {
            return base.Channel.UserNoteDeleteAsync(userNoteId);
        }
        
        public VastecOPMSP.FHSvc.UserRoleList UserRoleGetList(System.Nullable<long> userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive) {
            return base.Channel.UserRoleGetList(userRoleId, userId, roleId, userRoleActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UserRoleList> UserRoleGetListAsync(System.Nullable<long> userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive) {
            return base.Channel.UserRoleGetListAsync(userRoleId, userId, roleId, userRoleActive);
        }
        
        public long UserRoleInsert(long userId, long roleId) {
            return base.Channel.UserRoleInsert(userId, roleId);
        }
        
        public System.Threading.Tasks.Task<long> UserRoleInsertAsync(long userId, long roleId) {
            return base.Channel.UserRoleInsertAsync(userId, roleId);
        }
        
        public void UserRoleUpdate(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive) {
            base.Channel.UserRoleUpdate(userRoleId, userId, roleId, userRoleActive);
        }
        
        public System.Threading.Tasks.Task UserRoleUpdateAsync(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive) {
            return base.Channel.UserRoleUpdateAsync(userRoleId, userId, roleId, userRoleActive);
        }
        
        public void UserRoleUpdateSafe(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive, int version) {
            base.Channel.UserRoleUpdateSafe(userRoleId, userId, roleId, userRoleActive, version);
        }
        
        public System.Threading.Tasks.Task UserRoleUpdateSafeAsync(long userRoleId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<bool> userRoleActive, int version) {
            return base.Channel.UserRoleUpdateSafeAsync(userRoleId, userId, roleId, userRoleActive, version);
        }
        
        public int UserRoleDelete(long userRoleId) {
            return base.Channel.UserRoleDelete(userRoleId);
        }
        
        public System.Threading.Tasks.Task<int> UserRoleDeleteAsync(long userRoleId) {
            return base.Channel.UserRoleDeleteAsync(userRoleId);
        }
        
        public VastecOPMSP.FHSvc.WorkflowList WorkflowGetList(System.Nullable<long> workflowId, string workflowName, System.Nullable<bool> workflowActive) {
            return base.Channel.WorkflowGetList(workflowId, workflowName, workflowActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.WorkflowList> WorkflowGetListAsync(System.Nullable<long> workflowId, string workflowName, System.Nullable<bool> workflowActive) {
            return base.Channel.WorkflowGetListAsync(workflowId, workflowName, workflowActive);
        }
        
        public long WorkflowInsert(long changeUserId, string workflowName, string description, VastecOPMSP.FHSvc.Workflow.WorkflowScopes workflowScope) {
            return base.Channel.WorkflowInsert(changeUserId, workflowName, description, workflowScope);
        }
        
        public System.Threading.Tasks.Task<long> WorkflowInsertAsync(long changeUserId, string workflowName, string description, VastecOPMSP.FHSvc.Workflow.WorkflowScopes workflowScope) {
            return base.Channel.WorkflowInsertAsync(changeUserId, workflowName, description, workflowScope);
        }
        
        public void WorkflowUpdate(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive) {
            base.Channel.WorkflowUpdate(workflowId, changeUserId, workflowName, description, workflowScope, workflowActive);
        }
        
        public System.Threading.Tasks.Task WorkflowUpdateAsync(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive) {
            return base.Channel.WorkflowUpdateAsync(workflowId, changeUserId, workflowName, description, workflowScope, workflowActive);
        }
        
        public void WorkflowUpdateSafe(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive, int version) {
            base.Channel.WorkflowUpdateSafe(workflowId, changeUserId, workflowName, description, workflowScope, workflowActive, version);
        }
        
        public System.Threading.Tasks.Task WorkflowUpdateSafeAsync(long workflowId, long changeUserId, string workflowName, string description, System.Nullable<VastecOPMSP.FHSvc.Workflow.WorkflowScopes> workflowScope, System.Nullable<bool> workflowActive, int version) {
            return base.Channel.WorkflowUpdateSafeAsync(workflowId, changeUserId, workflowName, description, workflowScope, workflowActive, version);
        }
        
        public int WorkflowDelete(long workflowId) {
            return base.Channel.WorkflowDelete(workflowId);
        }
        
        public System.Threading.Tasks.Task<int> WorkflowDeleteAsync(long workflowId) {
            return base.Channel.WorkflowDeleteAsync(workflowId);
        }
        
        public VastecOPMSP.FHSvc.WorkflowActivityList WorkflowActivityGetList(System.Nullable<long> workflowId, System.Nullable<long> workflowActivityId, string workflowName, System.Nullable<bool> workflowActivityActive) {
            return base.Channel.WorkflowActivityGetList(workflowId, workflowActivityId, workflowName, workflowActivityActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.WorkflowActivityList> WorkflowActivityGetListAsync(System.Nullable<long> workflowId, System.Nullable<long> workflowActivityId, string workflowName, System.Nullable<bool> workflowActivityActive) {
            return base.Channel.WorkflowActivityGetListAsync(workflowId, workflowActivityId, workflowName, workflowActivityActive);
        }
        
        public long WorkflowActivityInsert(long workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, int activityOrder) {
            return base.Channel.WorkflowActivityInsert(workflowId, changeUserId, assocRoleId, processInfoId, boxWorkflowId, activityName, activityDescription, activityOrder);
        }
        
        public System.Threading.Tasks.Task<long> WorkflowActivityInsertAsync(long workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, int activityOrder) {
            return base.Channel.WorkflowActivityInsertAsync(workflowId, changeUserId, assocRoleId, processInfoId, boxWorkflowId, activityName, activityDescription, activityOrder);
        }
        
        public void WorkflowActivityUpdate(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive) {
            base.Channel.WorkflowActivityUpdate(workflowActivityId, workflowId, changeUserId, assocRoleId, processInfoId, boxWorkflowId, activityName, activityDescription, activityOrder, activityActive);
        }
        
        public System.Threading.Tasks.Task WorkflowActivityUpdateAsync(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive) {
            return base.Channel.WorkflowActivityUpdateAsync(workflowActivityId, workflowId, changeUserId, assocRoleId, processInfoId, boxWorkflowId, activityName, activityDescription, activityOrder, activityActive);
        }
        
        public void WorkflowActivityUpdateSafe(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive, int version) {
            base.Channel.WorkflowActivityUpdateSafe(workflowActivityId, workflowId, changeUserId, assocRoleId, processInfoId, boxWorkflowId, activityName, activityDescription, activityOrder, activityActive, version);
        }
        
        public System.Threading.Tasks.Task WorkflowActivityUpdateSafeAsync(long workflowActivityId, System.Nullable<long> workflowId, long changeUserId, System.Nullable<long> assocRoleId, System.Nullable<long> processInfoId, System.Nullable<long> boxWorkflowId, string activityName, string activityDescription, System.Nullable<int> activityOrder, System.Nullable<bool> activityActive, int version) {
            return base.Channel.WorkflowActivityUpdateSafeAsync(workflowActivityId, workflowId, changeUserId, assocRoleId, processInfoId, boxWorkflowId, activityName, activityDescription, activityOrder, activityActive, version);
        }
        
        public int WorkflowActivityDelete(long workflowActivityId) {
            return base.Channel.WorkflowActivityDelete(workflowActivityId);
        }
        
        public System.Threading.Tasks.Task<int> WorkflowActivityDeleteAsync(long workflowActivityId) {
            return base.Channel.WorkflowActivityDeleteAsync(workflowActivityId);
        }
        
        public VastecOPMSP.FHSvc.ManifestResponse SharePointNewManifestInfo(string agencyName, int manifestId) {
            return base.Channel.SharePointNewManifestInfo(agencyName, manifestId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ManifestResponse> SharePointNewManifestInfoAsync(string agencyName, int manifestId) {
            return base.Channel.SharePointNewManifestInfoAsync(agencyName, manifestId);
        }
        
        public string MakeManifestItemPriority(string agencyName, long spBoxManifestId) {
            return base.Channel.MakeManifestItemPriority(agencyName, spBoxManifestId);
        }
        
        public System.Threading.Tasks.Task<string> MakeManifestItemPriorityAsync(string agencyName, long spBoxManifestId) {
            return base.Channel.MakeManifestItemPriorityAsync(agencyName, spBoxManifestId);
        }
        
        public string MakeManifestItemIssue(string agencyName, long spBoxManifestId) {
            return base.Channel.MakeManifestItemIssue(agencyName, spBoxManifestId);
        }
        
        public System.Threading.Tasks.Task<string> MakeManifestItemIssueAsync(string agencyName, long spBoxManifestId) {
            return base.Channel.MakeManifestItemIssueAsync(agencyName, spBoxManifestId);
        }
        
        public void IndexSaveStateItemUpdate(long indexSaveStateItemId, bool userMustBeAssignedActivity, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId, System.Nullable<long> mdFieldId, long changeUserId, string itemText) {
            base.Channel.IndexSaveStateItemUpdate(indexSaveStateItemId, userMustBeAssignedActivity, boxActivityId, fileInfoId, indexProfileItemId, mdFieldId, changeUserId, itemText);
        }
        
        public System.Threading.Tasks.Task IndexSaveStateItemUpdateAsync(long indexSaveStateItemId, bool userMustBeAssignedActivity, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId, System.Nullable<long> mdFieldId, long changeUserId, string itemText) {
            return base.Channel.IndexSaveStateItemUpdateAsync(indexSaveStateItemId, userMustBeAssignedActivity, boxActivityId, fileInfoId, indexProfileItemId, mdFieldId, changeUserId, itemText);
        }
        
        public int IndexSaveStateItemDelete(long indexSaveStateItemId) {
            return base.Channel.IndexSaveStateItemDelete(indexSaveStateItemId);
        }
        
        public System.Threading.Tasks.Task<int> IndexSaveStateItemDeleteAsync(long indexSaveStateItemId) {
            return base.Channel.IndexSaveStateItemDeleteAsync(indexSaveStateItemId);
        }
        
        public int IndexSaveStateItemDeleteByFileInfoId(long fileInfoId) {
            return base.Channel.IndexSaveStateItemDeleteByFileInfoId(fileInfoId);
        }
        
        public System.Threading.Tasks.Task<int> IndexSaveStateItemDeleteByFileInfoIdAsync(long fileInfoId) {
            return base.Channel.IndexSaveStateItemDeleteByFileInfoIdAsync(fileInfoId);
        }
        
        public VastecOPMSP.FHSvc.IssueNotificationList IssueNotificationGetList(System.Nullable<long> issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, System.Nullable<bool> deletedOnly, System.Nullable<bool> readOnly) {
            return base.Channel.IssueNotificationGetList(issueNotificationId, projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, deletedOnly, readOnly);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IssueNotificationList> IssueNotificationGetListAsync(System.Nullable<long> issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, System.Nullable<bool> deletedOnly, System.Nullable<bool> readOnly) {
            return base.Channel.IssueNotificationGetListAsync(issueNotificationId, projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, deletedOnly, readOnly);
        }
        
        public long IssueNotificationInsert(System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo) {
            return base.Channel.IssueNotificationInsert(projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, changeUserId, issueMessage, issueDebugInfo);
        }
        
        public System.Threading.Tasks.Task<long> IssueNotificationInsertAsync(System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo) {
            return base.Channel.IssueNotificationInsertAsync(projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, changeUserId, issueMessage, issueDebugInfo);
        }
        
        public void IssueNotificationUpdate(long issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo, System.Nullable<bool> markAsRead, System.Nullable<bool> markAsDeleted) {
            base.Channel.IssueNotificationUpdate(issueNotificationId, projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, changeUserId, issueMessage, issueDebugInfo, markAsRead, markAsDeleted);
        }
        
        public System.Threading.Tasks.Task IssueNotificationUpdateAsync(long issueNotificationId, System.Nullable<long> projectId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxId, System.Nullable<long> boxActivityId, System.Nullable<long> fileInfoId, System.Nullable<long> recipientUserId, System.Nullable<long> targetRoleId, long changeUserId, string issueMessage, string issueDebugInfo, System.Nullable<bool> markAsRead, System.Nullable<bool> markAsDeleted) {
            return base.Channel.IssueNotificationUpdateAsync(issueNotificationId, projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, changeUserId, issueMessage, issueDebugInfo, markAsRead, markAsDeleted);
        }
        
        public void IssueNotificationUpdateSafe(
                    long issueNotificationId, 
                    System.Nullable<long> projectId, 
                    System.Nullable<long> projectOfficeIdentifierId, 
                    System.Nullable<long> jobId, 
                    System.Nullable<long> jobActivityId, 
                    System.Nullable<long> boxId, 
                    System.Nullable<long> boxActivityId, 
                    System.Nullable<long> fileInfoId, 
                    System.Nullable<long> recipientUserId, 
                    System.Nullable<long> targetRoleId, 
                    long changeUserId, 
                    string issueMessage, 
                    string issueDebugInfo, 
                    System.Nullable<bool> markAsRead, 
                    System.Nullable<bool> markAsDeleted, 
                    string rowVersion) {
            base.Channel.IssueNotificationUpdateSafe(issueNotificationId, projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, changeUserId, issueMessage, issueDebugInfo, markAsRead, markAsDeleted, rowVersion);
        }
        
        public System.Threading.Tasks.Task IssueNotificationUpdateSafeAsync(
                    long issueNotificationId, 
                    System.Nullable<long> projectId, 
                    System.Nullable<long> projectOfficeIdentifierId, 
                    System.Nullable<long> jobId, 
                    System.Nullable<long> jobActivityId, 
                    System.Nullable<long> boxId, 
                    System.Nullable<long> boxActivityId, 
                    System.Nullable<long> fileInfoId, 
                    System.Nullable<long> recipientUserId, 
                    System.Nullable<long> targetRoleId, 
                    long changeUserId, 
                    string issueMessage, 
                    string issueDebugInfo, 
                    System.Nullable<bool> markAsRead, 
                    System.Nullable<bool> markAsDeleted, 
                    string rowVersion) {
            return base.Channel.IssueNotificationUpdateSafeAsync(issueNotificationId, projectId, projectOfficeIdentifierId, jobId, jobActivityId, boxId, boxActivityId, fileInfoId, recipientUserId, targetRoleId, changeUserId, issueMessage, issueDebugInfo, markAsRead, markAsDeleted, rowVersion);
        }
        
        public int IssueNotificationDelete(long issueNotificationId) {
            return base.Channel.IssueNotificationDelete(issueNotificationId);
        }
        
        public System.Threading.Tasks.Task<int> IssueNotificationDeleteAsync(long issueNotificationId) {
            return base.Channel.IssueNotificationDeleteAsync(issueNotificationId);
        }
        
        public VastecOPMSP.FHSvc.JobList JobGetList(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName) {
            return base.Channel.JobGetList(projectLocationId, teamId, batchId, jobId, jobName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobList> JobGetListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName) {
            return base.Channel.JobGetListAsync(projectLocationId, teamId, batchId, jobId, jobName);
        }
        
        public VastecOPMSP.FHSvc.JobList JobGetActiveList(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName) {
            return base.Channel.JobGetActiveList(projectLocationId, teamId, batchId, jobId, jobName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobList> JobGetActiveListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> teamId, System.Nullable<long> batchId, System.Nullable<long> jobId, string jobName) {
            return base.Channel.JobGetActiveListAsync(projectLocationId, teamId, batchId, jobId, jobName);
        }
        
        public string JobGetProcessXml(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId, bool showBoxManifestItems, bool showTeamLeads, bool showManagers, bool showEligibleOperators, bool showBoxFolders, bool showExtractedDfrData) {
            return base.Channel.JobGetProcessXml(jobId, jobIsCompleted, jobCompleteDateThreshold, userId, showBoxManifestItems, showTeamLeads, showManagers, showEligibleOperators, showBoxFolders, showExtractedDfrData);
        }
        
        public System.Threading.Tasks.Task<string> JobGetProcessXmlAsync(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId, bool showBoxManifestItems, bool showTeamLeads, bool showManagers, bool showEligibleOperators, bool showBoxFolders, bool showExtractedDfrData) {
            return base.Channel.JobGetProcessXmlAsync(jobId, jobIsCompleted, jobCompleteDateThreshold, userId, showBoxManifestItems, showTeamLeads, showManagers, showEligibleOperators, showBoxFolders, showExtractedDfrData);
        }
        
        public VastecOPMSP.FHSvc.JobProcessesJobData JobGetProcessStatus(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId) {
            return base.Channel.JobGetProcessStatus(jobId, jobIsCompleted, jobCompleteDateThreshold, userId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobProcessesJobData> JobGetProcessStatusAsync(System.Nullable<long> jobId, System.Nullable<bool> jobIsCompleted, System.Nullable<System.DateTime> jobCompleteDateThreshold, System.Nullable<long> userId) {
            return base.Channel.JobGetProcessStatusAsync(jobId, jobIsCompleted, jobCompleteDateThreshold, userId);
        }
        
        public VastecOPMSP.FHSvc.CurrentJobActivity JobGetCurrentActivityId(long jobId) {
            return base.Channel.JobGetCurrentActivityId(jobId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CurrentJobActivity> JobGetCurrentActivityIdAsync(long jobId) {
            return base.Channel.JobGetCurrentActivityIdAsync(jobId);
        }
        
        public long JobInsert(long projectLocationId, System.Nullable<long> teamId, long workflowId, System.Nullable<long> batchId, long changeUserId, string jobName, string jobDescription, string jobRelativePath, System.Nullable<int> priority, string jobProfilePath, System.Nullable<System.DateTime> pickupDate, System.Nullable<System.DateTime> jobScheduled, System.Nullable<System.DateTime> jobDeadline) {
            return base.Channel.JobInsert(projectLocationId, teamId, workflowId, batchId, changeUserId, jobName, jobDescription, jobRelativePath, priority, jobProfilePath, pickupDate, jobScheduled, jobDeadline);
        }
        
        public System.Threading.Tasks.Task<long> JobInsertAsync(long projectLocationId, System.Nullable<long> teamId, long workflowId, System.Nullable<long> batchId, long changeUserId, string jobName, string jobDescription, string jobRelativePath, System.Nullable<int> priority, string jobProfilePath, System.Nullable<System.DateTime> pickupDate, System.Nullable<System.DateTime> jobScheduled, System.Nullable<System.DateTime> jobDeadline) {
            return base.Channel.JobInsertAsync(projectLocationId, teamId, workflowId, batchId, changeUserId, jobName, jobDescription, jobRelativePath, priority, jobProfilePath, pickupDate, jobScheduled, jobDeadline);
        }
        
        public long JobInitiate(long jobId, int version, long changeUserId) {
            return base.Channel.JobInitiate(jobId, version, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> JobInitiateAsync(long jobId, int version, long changeUserId) {
            return base.Channel.JobInitiateAsync(jobId, version, changeUserId);
        }
        
        public void JobUpdate(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline) {
            base.Channel.JobUpdate(jobId, projectLocationId, teamId, workflowId, batchId, changeUserId, jobName, jobDescription, jobRelativePath, priority, jobProfilePath, pickupDate, jobScheduled, jobStarted, jobCompleted, jobDeadline);
        }
        
        public System.Threading.Tasks.Task JobUpdateAsync(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline) {
            return base.Channel.JobUpdateAsync(jobId, projectLocationId, teamId, workflowId, batchId, changeUserId, jobName, jobDescription, jobRelativePath, priority, jobProfilePath, pickupDate, jobScheduled, jobStarted, jobCompleted, jobDeadline);
        }
        
        public void JobUpdateSafe(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline, 
                    int version) {
            base.Channel.JobUpdateSafe(jobId, projectLocationId, teamId, workflowId, batchId, changeUserId, jobName, jobDescription, jobRelativePath, priority, jobProfilePath, pickupDate, jobScheduled, jobStarted, jobCompleted, jobDeadline, version);
        }
        
        public System.Threading.Tasks.Task JobUpdateSafeAsync(
                    long jobId, 
                    System.Nullable<long> projectLocationId, 
                    System.Nullable<long> teamId, 
                    System.Nullable<long> workflowId, 
                    System.Nullable<long> batchId, 
                    long changeUserId, 
                    string jobName, 
                    string jobDescription, 
                    string jobRelativePath, 
                    System.Nullable<int> priority, 
                    string jobProfilePath, 
                    System.Nullable<System.DateTime> pickupDate, 
                    System.Nullable<System.DateTime> jobScheduled, 
                    System.Nullable<System.DateTime> jobStarted, 
                    System.Nullable<System.DateTime> jobCompleted, 
                    System.Nullable<System.DateTime> jobDeadline, 
                    int version) {
            return base.Channel.JobUpdateSafeAsync(jobId, projectLocationId, teamId, workflowId, batchId, changeUserId, jobName, jobDescription, jobRelativePath, priority, jobProfilePath, pickupDate, jobScheduled, jobStarted, jobCompleted, jobDeadline, version);
        }
        
        public void JobUpdateStarted(long jobId, long changeUserId) {
            base.Channel.JobUpdateStarted(jobId, changeUserId);
        }
        
        public System.Threading.Tasks.Task JobUpdateStartedAsync(long jobId, long changeUserId) {
            return base.Channel.JobUpdateStartedAsync(jobId, changeUserId);
        }
        
        public void JobUpdateCompleted(long jobId, long changeUserId) {
            base.Channel.JobUpdateCompleted(jobId, changeUserId);
        }
        
        public System.Threading.Tasks.Task JobUpdateCompletedAsync(long jobId, long changeUserId) {
            return base.Channel.JobUpdateCompletedAsync(jobId, changeUserId);
        }
        
        public int JobDelete(long jobId) {
            return base.Channel.JobDelete(jobId);
        }
        
        public System.Threading.Tasks.Task<int> JobDeleteAsync(long jobId) {
            return base.Channel.JobDeleteAsync(jobId);
        }
        
        public VastecOPMSP.FHSvc.JobActivityList JobActivityGetList(System.Nullable<long> jobId, System.Nullable<long> jobActivityId, bool loadEligibleUsers) {
            return base.Channel.JobActivityGetList(jobId, jobActivityId, loadEligibleUsers);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobActivityList> JobActivityGetListAsync(System.Nullable<long> jobId, System.Nullable<long> jobActivityId, bool loadEligibleUsers) {
            return base.Channel.JobActivityGetListAsync(jobId, jobActivityId, loadEligibleUsers);
        }
        
        public VastecOPMSP.FHSvc.JobActivityList JobActivityGetListByJobName(long projectLocationId, string jobName, bool loadEligibleUsers) {
            return base.Channel.JobActivityGetListByJobName(projectLocationId, jobName, loadEligibleUsers);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobActivityList> JobActivityGetListByJobNameAsync(long projectLocationId, string jobName, bool loadEligibleUsers) {
            return base.Channel.JobActivityGetListByJobNameAsync(projectLocationId, jobName, loadEligibleUsers);
        }
        
        public long JobActivityInsert(long jobId, long workflowActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.JobActivityInsert(jobId, workflowActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> JobActivityInsertAsync(long jobId, long workflowActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.JobActivityInsertAsync(jobId, workflowActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public long JobActivityInsertNextActivity(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.JobActivityInsertNextActivity(jobActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> JobActivityInsertNextActivityAsync(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.JobActivityInsertNextActivityAsync(jobActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public void JobActivityUpdate(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId) {
            base.Channel.JobActivityUpdate(jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId);
        }
        
        public System.Threading.Tasks.Task JobActivityUpdateAsync(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId) {
            return base.Channel.JobActivityUpdateAsync(jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId);
        }
        
        public void JobActivityUpdateSafe(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version) {
            base.Channel.JobActivityUpdateSafe(jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId, version);
        }
        
        public System.Threading.Tasks.Task JobActivityUpdateSafeAsync(long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version) {
            return base.Channel.JobActivityUpdateSafeAsync(jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId, version);
        }
        
        public int JobActivityDelete(long jobActivityId) {
            return base.Channel.JobActivityDelete(jobActivityId);
        }
        
        public System.Threading.Tasks.Task<int> JobActivityDeleteAsync(long jobActivityId) {
            return base.Channel.JobActivityDeleteAsync(jobActivityId);
        }
        
        public VastecOPMSP.FHSvc.JobUserRoleList JobUserRoleGetList(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.JobUserRoleGetList(jobId, projectLocationId, jobName, userId, userLogin, roleGroup);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobUserRoleList> JobUserRoleGetListAsync(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.JobUserRoleGetListAsync(jobId, projectLocationId, jobName, userId, userLogin, roleGroup);
        }
        
        public VastecOPMSP.FHSvc.JobUserRoleList GetJobUserRoleExtendedList(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.GetJobUserRoleExtendedList(jobId, projectLocationId, jobName, userId, userLogin, roleGroup);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.JobUserRoleList> GetJobUserRoleExtendedListAsync(System.Nullable<long> jobId, System.Nullable<long> projectLocationId, string jobName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.GetJobUserRoleExtendedListAsync(jobId, projectLocationId, jobName, userId, userLogin, roleGroup);
        }
        
        public long JobUserRoleInsert(long jobId, long userId, long roleId, int userRolePriority) {
            return base.Channel.JobUserRoleInsert(jobId, userId, roleId, userRolePriority);
        }
        
        public System.Threading.Tasks.Task<long> JobUserRoleInsertAsync(long jobId, long userId, long roleId, int userRolePriority) {
            return base.Channel.JobUserRoleInsertAsync(jobId, userId, roleId, userRolePriority);
        }
        
        public void JobUserRoleUpdate(long jobUserRoleId, System.Nullable<long> jobId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<int> userRolePriority) {
            base.Channel.JobUserRoleUpdate(jobUserRoleId, jobId, userId, roleId, userRolePriority);
        }
        
        public System.Threading.Tasks.Task JobUserRoleUpdateAsync(long jobUserRoleId, System.Nullable<long> jobId, System.Nullable<long> userId, System.Nullable<long> roleId, System.Nullable<int> userRolePriority) {
            return base.Channel.JobUserRoleUpdateAsync(jobUserRoleId, jobId, userId, roleId, userRolePriority);
        }
        
        public int JobUserRoleDelete(long jobUserRoleId) {
            return base.Channel.JobUserRoleDelete(jobUserRoleId);
        }
        
        public System.Threading.Tasks.Task<int> JobUserRoleDeleteAsync(long jobUserRoleId) {
            return base.Channel.JobUserRoleDeleteAsync(jobUserRoleId);
        }
        
        public VastecOPMSP.FHSvc.LocationList LocationGetListWeb(string locationId, string locationName) {
            return base.Channel.LocationGetListWeb(locationId, locationName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.LocationList> LocationGetListWebAsync(string locationId, string locationName) {
            return base.Channel.LocationGetListWebAsync(locationId, locationName);
        }
        
        public VastecOPMSP.FHSvc.LocationList LocationGetListWeb2(string locationId) {
            return base.Channel.LocationGetListWeb2(locationId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.LocationList> LocationGetListWeb2Async(string locationId) {
            return base.Channel.LocationGetListWeb2Async(locationId);
        }
        
        public VastecOPMSP.FHSvc.LocationList LocationGetList(System.Nullable<long> locationId, string locationName) {
            return base.Channel.LocationGetList(locationId, locationName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.LocationList> LocationGetListAsync(System.Nullable<long> locationId, string locationName) {
            return base.Channel.LocationGetListAsync(locationId, locationName);
        }
        
        public long LocationInsert(string locationName, string locationCity, string locationState) {
            return base.Channel.LocationInsert(locationName, locationCity, locationState);
        }
        
        public System.Threading.Tasks.Task<long> LocationInsertAsync(string locationName, string locationCity, string locationState) {
            return base.Channel.LocationInsertAsync(locationName, locationCity, locationState);
        }
        
        public void LocationUpdate(long locationId, string locationName, string locationCity, string locationState) {
            base.Channel.LocationUpdate(locationId, locationName, locationCity, locationState);
        }
        
        public System.Threading.Tasks.Task LocationUpdateAsync(long locationId, string locationName, string locationCity, string locationState) {
            return base.Channel.LocationUpdateAsync(locationId, locationName, locationCity, locationState);
        }
        
        public void LocationUpdateSafe(long locationId, string locationName, string locationCity, string locationState, int version) {
            base.Channel.LocationUpdateSafe(locationId, locationName, locationCity, locationState, version);
        }
        
        public System.Threading.Tasks.Task LocationUpdateSafeAsync(long locationId, string locationName, string locationCity, string locationState, int version) {
            return base.Channel.LocationUpdateSafeAsync(locationId, locationName, locationCity, locationState, version);
        }
        
        public int LocationDelete(long locationId) {
            return base.Channel.LocationDelete(locationId);
        }
        
        public System.Threading.Tasks.Task<int> LocationDeleteAsync(long locationId) {
            return base.Channel.LocationDeleteAsync(locationId);
        }
        
        public VastecOPMSP.FHSvc.MdFieldList MdFieldGetList(System.Nullable<long> mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId) {
            return base.Channel.MdFieldGetList(mdFieldId, mdFormPageId, mdFieldIdentifierId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFieldList> MdFieldGetListAsync(System.Nullable<long> mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId) {
            return base.Channel.MdFieldGetListAsync(mdFieldId, mdFormPageId, mdFieldIdentifierId);
        }
        
        public VastecOPMSP.FHSvc.MdFieldList MdFieldGetRectList(VastecOPMSP.FHSvc.Rectangle primeRectangle) {
            return base.Channel.MdFieldGetRectList(primeRectangle);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFieldList> MdFieldGetRectListAsync(VastecOPMSP.FHSvc.Rectangle primeRectangle) {
            return base.Channel.MdFieldGetRectListAsync(primeRectangle);
        }
        
        public long MdFieldInsert(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText) {
            return base.Channel.MdFieldInsert(mdFormPageId, mdFieldIdentifierId, primeRectangle, primeXmlResolution, maskedText);
        }
        
        public System.Threading.Tasks.Task<long> MdFieldInsertAsync(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText) {
            return base.Channel.MdFieldInsertAsync(mdFormPageId, mdFieldIdentifierId, primeRectangle, primeXmlResolution, maskedText);
        }
        
        public long DbSyncMdFieldInsert(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFieldInsert(mdFormPageId, mdFieldIdentifierId, primeRectangle, primeXmlResolution, maskedText, globalUniqueKey, serverCreated);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncMdFieldInsertAsync(long mdFormPageId, long mdFieldIdentifierId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string maskedText, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFieldInsertAsync(mdFormPageId, mdFieldIdentifierId, primeRectangle, primeXmlResolution, maskedText, globalUniqueKey, serverCreated);
        }
        
        public void MdFieldUpdate(long mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string maskedText) {
            base.Channel.MdFieldUpdate(mdFieldId, mdFormPageId, mdFieldIdentifierId, primeRectangle, primeXmlResolution, maskedText);
        }
        
        public System.Threading.Tasks.Task MdFieldUpdateAsync(long mdFieldId, System.Nullable<long> mdFormPageId, System.Nullable<long> mdFieldIdentifierId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string maskedText) {
            return base.Channel.MdFieldUpdateAsync(mdFieldId, mdFormPageId, mdFieldIdentifierId, primeRectangle, primeXmlResolution, maskedText);
        }
        
        public int MdFieldDelete(long mdFieldId) {
            return base.Channel.MdFieldDelete(mdFieldId);
        }
        
        public System.Threading.Tasks.Task<int> MdFieldDeleteAsync(long mdFieldId) {
            return base.Channel.MdFieldDeleteAsync(mdFieldId);
        }
        
        public VastecOPMSP.FHSvc.MdFieldIdentifierList MdFieldIdentifierGetList(System.Nullable<long> mdFieldIdentifierId, string fieldName) {
            return base.Channel.MdFieldIdentifierGetList(mdFieldIdentifierId, fieldName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFieldIdentifierList> MdFieldIdentifierGetListAsync(System.Nullable<long> mdFieldIdentifierId, string fieldName) {
            return base.Channel.MdFieldIdentifierGetListAsync(mdFieldIdentifierId, fieldName);
        }
        
        public long MdFieldIdentifierInsert(string fieldName, string ruleFieldType, bool isMetadataField) {
            return base.Channel.MdFieldIdentifierInsert(fieldName, ruleFieldType, isMetadataField);
        }
        
        public System.Threading.Tasks.Task<long> MdFieldIdentifierInsertAsync(string fieldName, string ruleFieldType, bool isMetadataField) {
            return base.Channel.MdFieldIdentifierInsertAsync(fieldName, ruleFieldType, isMetadataField);
        }
        
        public long DbSyncMdFieldIdentifierInsert(string fieldName, string ruleFieldType, bool isMetadataField, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFieldIdentifierInsert(fieldName, ruleFieldType, isMetadataField, globalUniqueKey, serverCreated);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncMdFieldIdentifierInsertAsync(string fieldName, string ruleFieldType, bool isMetadataField, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFieldIdentifierInsertAsync(fieldName, ruleFieldType, isMetadataField, globalUniqueKey, serverCreated);
        }
        
        public void MdFieldIdentifierUpdate(long mdFieldIdentifierId, string fieldName, string ruleFieldType, System.Nullable<bool> isMetadataField) {
            base.Channel.MdFieldIdentifierUpdate(mdFieldIdentifierId, fieldName, ruleFieldType, isMetadataField);
        }
        
        public System.Threading.Tasks.Task MdFieldIdentifierUpdateAsync(long mdFieldIdentifierId, string fieldName, string ruleFieldType, System.Nullable<bool> isMetadataField) {
            return base.Channel.MdFieldIdentifierUpdateAsync(mdFieldIdentifierId, fieldName, ruleFieldType, isMetadataField);
        }
        
        public int MdFieldIdentifierDelete(long mdFieldIdentifierId) {
            return base.Channel.MdFieldIdentifierDelete(mdFieldIdentifierId);
        }
        
        public System.Threading.Tasks.Task<int> MdFieldIdentifierDeleteAsync(long mdFieldIdentifierId) {
            return base.Channel.MdFieldIdentifierDeleteAsync(mdFieldIdentifierId);
        }
        
        public VastecOPMSP.FHSvc.MdFormList MdFormGetList(System.Nullable<long> mdFormId, string formName, string formVersion, System.Nullable<int> formGroupId) {
            return base.Channel.MdFormGetList(mdFormId, formName, formVersion, formGroupId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormList> MdFormGetListAsync(System.Nullable<long> mdFormId, string formName, string formVersion, System.Nullable<int> formGroupId) {
            return base.Channel.MdFormGetListAsync(mdFormId, formName, formVersion, formGroupId);
        }
        
        public string GetMdFormTreeXml(System.Nullable<long> mdFormId, System.Nullable<long> projectId, System.Nullable<long> customerId, System.Nullable<long> metadataTypeId, bool showPackageInfo, bool showZoneInfo, bool showFieldInfo, bool showIndexProfileInfo) {
            return base.Channel.GetMdFormTreeXml(mdFormId, projectId, customerId, metadataTypeId, showPackageInfo, showZoneInfo, showFieldInfo, showIndexProfileInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetMdFormTreeXmlAsync(System.Nullable<long> mdFormId, System.Nullable<long> projectId, System.Nullable<long> customerId, System.Nullable<long> metadataTypeId, bool showPackageInfo, bool showZoneInfo, bool showFieldInfo, bool showIndexProfileInfo) {
            return base.Channel.GetMdFormTreeXmlAsync(mdFormId, projectId, customerId, metadataTypeId, showPackageInfo, showZoneInfo, showFieldInfo, showIndexProfileInfo);
        }
        
        public string MdFormGetDumpXml() {
            return base.Channel.MdFormGetDumpXml();
        }
        
        public System.Threading.Tasks.Task<string> MdFormGetDumpXmlAsync() {
            return base.Channel.MdFormGetDumpXmlAsync();
        }
        
        public long MdFormInsert(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, bool vastecForm, bool isAPackage) {
            return base.Channel.MdFormInsert(formName, formVersion, formDescription, formType, sourceAgency, folderSide, reference, formGroupId, vastecForm, isAPackage);
        }
        
        public System.Threading.Tasks.Task<long> MdFormInsertAsync(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, bool vastecForm, bool isAPackage) {
            return base.Channel.MdFormInsertAsync(formName, formVersion, formDescription, formType, sourceAgency, folderSide, reference, formGroupId, vastecForm, isAPackage);
        }
        
        public long DbSyncMdFormInsert(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, string globalUniqueKey, string serverCreated, bool vastecForm, bool isAPackage) {
            return base.Channel.DbSyncMdFormInsert(formName, formVersion, formDescription, formType, sourceAgency, folderSide, reference, formGroupId, globalUniqueKey, serverCreated, vastecForm, isAPackage);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncMdFormInsertAsync(string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, string globalUniqueKey, string serverCreated, bool vastecForm, bool isAPackage) {
            return base.Channel.DbSyncMdFormInsertAsync(formName, formVersion, formDescription, formType, sourceAgency, folderSide, reference, formGroupId, globalUniqueKey, serverCreated, vastecForm, isAPackage);
        }
        
        public void MdFormUpdate(long mdFormId, string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, System.Nullable<bool> vastecForm, System.Nullable<bool> isAPackage) {
            base.Channel.MdFormUpdate(mdFormId, formName, formVersion, formDescription, formType, sourceAgency, folderSide, reference, formGroupId, vastecForm, isAPackage);
        }
        
        public System.Threading.Tasks.Task MdFormUpdateAsync(long mdFormId, string formName, string formVersion, string formDescription, string formType, string sourceAgency, string folderSide, string reference, System.Nullable<int> formGroupId, System.Nullable<bool> vastecForm, System.Nullable<bool> isAPackage) {
            return base.Channel.MdFormUpdateAsync(mdFormId, formName, formVersion, formDescription, formType, sourceAgency, folderSide, reference, formGroupId, vastecForm, isAPackage);
        }
        
        public int MdFormDelete(long mdFormId) {
            return base.Channel.MdFormDelete(mdFormId);
        }
        
        public System.Threading.Tasks.Task<int> MdFormDeleteAsync(long mdFormId) {
            return base.Channel.MdFormDeleteAsync(mdFormId);
        }
        
        public VastecOPMSP.FHSvc.MdFormPackageList MdFormPackageGetList(System.Nullable<long> mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId) {
            return base.Channel.MdFormPackageGetList(mdFormPackageId, packageMdFormId, vastecPackageMdFormId, mdFormId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormPackageList> MdFormPackageGetListAsync(System.Nullable<long> mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId) {
            return base.Channel.MdFormPackageGetListAsync(mdFormPackageId, packageMdFormId, vastecPackageMdFormId, mdFormId);
        }
        
        public long MdFormPackageInsert(long packageMdFormId, long vastecPackageMdFormId, long mdFormId) {
            return base.Channel.MdFormPackageInsert(packageMdFormId, vastecPackageMdFormId, mdFormId);
        }
        
        public System.Threading.Tasks.Task<long> MdFormPackageInsertAsync(long packageMdFormId, long vastecPackageMdFormId, long mdFormId) {
            return base.Channel.MdFormPackageInsertAsync(packageMdFormId, vastecPackageMdFormId, mdFormId);
        }
        
        public void MdFormPackageUpdate(long mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId) {
            base.Channel.MdFormPackageUpdate(mdFormPackageId, packageMdFormId, vastecPackageMdFormId, mdFormId);
        }
        
        public System.Threading.Tasks.Task MdFormPackageUpdateAsync(long mdFormPackageId, System.Nullable<long> packageMdFormId, System.Nullable<long> vastecPackageMdFormId, System.Nullable<long> mdFormId) {
            return base.Channel.MdFormPackageUpdateAsync(mdFormPackageId, packageMdFormId, vastecPackageMdFormId, mdFormId);
        }
        
        public int MdFormPackageDelete(long mdFormPackageId) {
            return base.Channel.MdFormPackageDelete(mdFormPackageId);
        }
        
        public System.Threading.Tasks.Task<int> MdFormPackageDeleteAsync(long mdFormPackageId) {
            return base.Channel.MdFormPackageDeleteAsync(mdFormPackageId);
        }
        
        public VastecOPMSP.FHSvc.MdFormPageList MdFormPageGetList(System.Nullable<long> mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageHash, bool returnTemplateText, bool returnFullTextMergeTemplate) {
            return base.Channel.MdFormPageGetList(mdFormPageId, mdFormId, pageNumber, pageGroupId, pageHash, returnTemplateText, returnFullTextMergeTemplate);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormPageList> MdFormPageGetListAsync(System.Nullable<long> mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageHash, bool returnTemplateText, bool returnFullTextMergeTemplate) {
            return base.Channel.MdFormPageGetListAsync(mdFormPageId, mdFormId, pageNumber, pageGroupId, pageHash, returnTemplateText, returnFullTextMergeTemplate);
        }
        
        public long MdFormPageInsert(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash) {
            return base.Channel.MdFormPageInsert(mdFormId, pageNumber, pageGroupId, pageName, templateFilename, templateText, fullTextMergeTemplate, pageHash);
        }
        
        public System.Threading.Tasks.Task<long> MdFormPageInsertAsync(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash) {
            return base.Channel.MdFormPageInsertAsync(mdFormId, pageNumber, pageGroupId, pageName, templateFilename, templateText, fullTextMergeTemplate, pageHash);
        }
        
        public long DbSyncMdFormPageInsert(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFormPageInsert(mdFormId, pageNumber, pageGroupId, pageName, templateFilename, templateText, fullTextMergeTemplate, pageHash, globalUniqueKey, serverCreated);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncMdFormPageInsertAsync(long mdFormId, int pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFormPageInsertAsync(mdFormId, pageNumber, pageGroupId, pageName, templateFilename, templateText, fullTextMergeTemplate, pageHash, globalUniqueKey, serverCreated);
        }
        
        public void MdFormPageUpdate(long mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash) {
            base.Channel.MdFormPageUpdate(mdFormPageId, mdFormId, pageNumber, pageGroupId, pageName, templateFilename, templateText, fullTextMergeTemplate, pageHash);
        }
        
        public System.Threading.Tasks.Task MdFormPageUpdateAsync(long mdFormPageId, System.Nullable<long> mdFormId, System.Nullable<int> pageNumber, System.Nullable<int> pageGroupId, string pageName, string templateFilename, string templateText, string fullTextMergeTemplate, string pageHash) {
            return base.Channel.MdFormPageUpdateAsync(mdFormPageId, mdFormId, pageNumber, pageGroupId, pageName, templateFilename, templateText, fullTextMergeTemplate, pageHash);
        }
        
        public int MdFormPageDelete(long mdFormPageId) {
            return base.Channel.MdFormPageDelete(mdFormPageId);
        }
        
        public System.Threading.Tasks.Task<int> MdFormPageDeleteAsync(long mdFormPageId) {
            return base.Channel.MdFormPageDeleteAsync(mdFormPageId);
        }
        
        public VastecOPMSP.FHSvc.MdFormZoneList MdFormZoneGetList(System.Nullable<long> mdFormZoneId, System.Nullable<long> mdFormPageId) {
            return base.Channel.MdFormZoneGetList(mdFormZoneId, mdFormPageId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormZoneList> MdFormZoneGetListAsync(System.Nullable<long> mdFormZoneId, System.Nullable<long> mdFormPageId) {
            return base.Channel.MdFormZoneGetListAsync(mdFormZoneId, mdFormPageId);
        }
        
        public long MdFormZoneInsert(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution) {
            return base.Channel.MdFormZoneInsert(mdFormPageId, primeRectangle, primeXmlResolution);
        }
        
        public System.Threading.Tasks.Task<long> MdFormZoneInsertAsync(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution) {
            return base.Channel.MdFormZoneInsertAsync(mdFormPageId, primeRectangle, primeXmlResolution);
        }
        
        public long DbSyncMdFormZoneInsert(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFormZoneInsert(mdFormPageId, primeRectangle, primeXmlResolution, globalUniqueKey, serverCreated);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncMdFormZoneInsertAsync(long mdFormPageId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFormZoneInsertAsync(mdFormPageId, primeRectangle, primeXmlResolution, globalUniqueKey, serverCreated);
        }
        
        public void MdFormZoneUpdate(long mdFormZoneId, System.Nullable<long> mdFormPageId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution) {
            base.Channel.MdFormZoneUpdate(mdFormZoneId, mdFormPageId, primeRectangle, primeXmlResolution);
        }
        
        public System.Threading.Tasks.Task MdFormZoneUpdateAsync(long mdFormZoneId, System.Nullable<long> mdFormPageId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution) {
            return base.Channel.MdFormZoneUpdateAsync(mdFormZoneId, mdFormPageId, primeRectangle, primeXmlResolution);
        }
        
        public int MdFormZoneDelete(long mdFormZoneId) {
            return base.Channel.MdFormZoneDelete(mdFormZoneId);
        }
        
        public System.Threading.Tasks.Task<int> MdFormZoneDeleteAsync(long mdFormZoneId) {
            return base.Channel.MdFormZoneDeleteAsync(mdFormZoneId);
        }
        
        public VastecOPMSP.FHSvc.MdFormZoneAttribList MdFormZoneAttribGetList(System.Nullable<long> mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, string attributeText) {
            return base.Channel.MdFormZoneAttribGetList(mdFormZoneAttribId, mdFormZoneId, attributeText);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormZoneAttribList> MdFormZoneAttribGetListAsync(System.Nullable<long> mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, string attributeText) {
            return base.Channel.MdFormZoneAttribGetListAsync(mdFormZoneAttribId, mdFormZoneId, attributeText);
        }
        
        public VastecOPMSP.FHSvc.MdFormZoneAttribList MdFormZoneAttribGetRectList(VastecOPMSP.FHSvc.Rectangle primeRectangle, string attributeText) {
            return base.Channel.MdFormZoneAttribGetRectList(primeRectangle, attributeText);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MdFormZoneAttribList> MdFormZoneAttribGetRectListAsync(VastecOPMSP.FHSvc.Rectangle primeRectangle, string attributeText) {
            return base.Channel.MdFormZoneAttribGetRectListAsync(primeRectangle, attributeText);
        }
        
        public long MdFormZoneAttribInsert(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag) {
            return base.Channel.MdFormZoneAttribInsert(mdFormZoneId, primeRectangle, primeXmlResolution, attributeText, negationFlag);
        }
        
        public System.Threading.Tasks.Task<long> MdFormZoneAttribInsertAsync(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag) {
            return base.Channel.MdFormZoneAttribInsertAsync(mdFormZoneId, primeRectangle, primeXmlResolution, attributeText, negationFlag);
        }
        
        public long DbSyncMdFormZoneAttribInsert(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFormZoneAttribInsert(mdFormZoneId, primeRectangle, primeXmlResolution, attributeText, negationFlag, globalUniqueKey, serverCreated);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncMdFormZoneAttribInsertAsync(long mdFormZoneId, VastecOPMSP.FHSvc.Rectangle primeRectangle, int primeXmlResolution, string attributeText, bool negationFlag, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncMdFormZoneAttribInsertAsync(mdFormZoneId, primeRectangle, primeXmlResolution, attributeText, negationFlag, globalUniqueKey, serverCreated);
        }
        
        public void MdFormZoneAttribUpdate(long mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string attributeText, bool negationFlag) {
            base.Channel.MdFormZoneAttribUpdate(mdFormZoneAttribId, mdFormZoneId, primeRectangle, primeXmlResolution, attributeText, negationFlag);
        }
        
        public System.Threading.Tasks.Task MdFormZoneAttribUpdateAsync(long mdFormZoneAttribId, System.Nullable<long> mdFormZoneId, System.Nullable<VastecOPMSP.FHSvc.Rectangle> primeRectangle, System.Nullable<int> primeXmlResolution, string attributeText, bool negationFlag) {
            return base.Channel.MdFormZoneAttribUpdateAsync(mdFormZoneAttribId, mdFormZoneId, primeRectangle, primeXmlResolution, attributeText, negationFlag);
        }
        
        public int MdFormZoneAttribDelete(long mdFormZoneAttribId) {
            return base.Channel.MdFormZoneAttribDelete(mdFormZoneAttribId);
        }
        
        public System.Threading.Tasks.Task<int> MdFormZoneAttribDeleteAsync(long mdFormZoneAttribId) {
            return base.Channel.MdFormZoneAttribDeleteAsync(mdFormZoneAttribId);
        }
        
        public VastecOPMSP.FHSvc.MetadataTypeList MetadataTypeGetList(System.Nullable<long> metadataTypeId, string metadataTypeName) {
            return base.Channel.MetadataTypeGetList(metadataTypeId, metadataTypeName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.MetadataTypeList> MetadataTypeGetListAsync(System.Nullable<long> metadataTypeId, string metadataTypeName) {
            return base.Channel.MetadataTypeGetListAsync(metadataTypeId, metadataTypeName);
        }
        
        public long MetadataTypeInsert(string metadataTypeName, long changeUserId) {
            return base.Channel.MetadataTypeInsert(metadataTypeName, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> MetadataTypeInsertAsync(string metadataTypeName, long changeUserId) {
            return base.Channel.MetadataTypeInsertAsync(metadataTypeName, changeUserId);
        }
        
        public void MetadataTypeUpdate(long metadataTypeId, string metadataTypeName) {
            base.Channel.MetadataTypeUpdate(metadataTypeId, metadataTypeName);
        }
        
        public System.Threading.Tasks.Task MetadataTypeUpdateAsync(long metadataTypeId, string metadataTypeName) {
            return base.Channel.MetadataTypeUpdateAsync(metadataTypeId, metadataTypeName);
        }
        
        public int MetadataTypeDelete(long metadataTypeId) {
            return base.Channel.MetadataTypeDelete(metadataTypeId);
        }
        
        public System.Threading.Tasks.Task<int> MetadataTypeDeleteAsync(long metadataTypeId) {
            return base.Channel.MetadataTypeDeleteAsync(metadataTypeId);
        }
        
        public VastecOPMSP.FHSvc.ProcessConfigList ProcessConfigGetList(System.Nullable<long> processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName) {
            return base.Channel.ProcessConfigGetList(processConfigId, processInfoId, configGroup, configName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessConfigList> ProcessConfigGetListAsync(System.Nullable<long> processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName) {
            return base.Channel.ProcessConfigGetListAsync(processConfigId, processInfoId, configGroup, configName);
        }
        
        public long ProcessConfigInsert(long processInfoId, string configGroup, string configName, string configValue) {
            return base.Channel.ProcessConfigInsert(processInfoId, configGroup, configName, configValue);
        }
        
        public System.Threading.Tasks.Task<long> ProcessConfigInsertAsync(long processInfoId, string configGroup, string configName, string configValue) {
            return base.Channel.ProcessConfigInsertAsync(processInfoId, configGroup, configName, configValue);
        }
        
        public void ProcessConfigUpdate(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue) {
            base.Channel.ProcessConfigUpdate(processConfigId, processInfoId, configGroup, configName, configValue);
        }
        
        public System.Threading.Tasks.Task ProcessConfigUpdateAsync(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue) {
            return base.Channel.ProcessConfigUpdateAsync(processConfigId, processInfoId, configGroup, configName, configValue);
        }
        
        public void ProcessConfigUpdateSafe(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue, int version) {
            base.Channel.ProcessConfigUpdateSafe(processConfigId, processInfoId, configGroup, configName, configValue, version);
        }
        
        public System.Threading.Tasks.Task ProcessConfigUpdateSafeAsync(long processConfigId, System.Nullable<long> processInfoId, string configGroup, string configName, string configValue, int version) {
            return base.Channel.ProcessConfigUpdateSafeAsync(processConfigId, processInfoId, configGroup, configName, configValue, version);
        }
        
        public int ProcessConfigDelete(long processConfigId) {
            return base.Channel.ProcessConfigDelete(processConfigId);
        }
        
        public System.Threading.Tasks.Task<int> ProcessConfigDeleteAsync(long processConfigId) {
            return base.Channel.ProcessConfigDeleteAsync(processConfigId);
        }
        
        public VastecOPMSP.FHSvc.ProcessInfoList ProcessInfoGetList(System.Nullable<long> processInfoId, string processName, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow) {
            return base.Channel.ProcessInfoGetList(processInfoId, processName, canEdit, usableByWorkflow);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessInfoList> ProcessInfoGetListAsync(System.Nullable<long> processInfoId, string processName, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow) {
            return base.Channel.ProcessInfoGetListAsync(processInfoId, processName, canEdit, usableByWorkflow);
        }
        
        public long ProcessInfoInsert(long changeUserId, string processName, string processDescription, bool canEdit, bool usableByWorkflow, bool automated) {
            return base.Channel.ProcessInfoInsert(changeUserId, processName, processDescription, canEdit, usableByWorkflow, automated);
        }
        
        public System.Threading.Tasks.Task<long> ProcessInfoInsertAsync(long changeUserId, string processName, string processDescription, bool canEdit, bool usableByWorkflow, bool automated) {
            return base.Channel.ProcessInfoInsertAsync(changeUserId, processName, processDescription, canEdit, usableByWorkflow, automated);
        }
        
        public void ProcessInfoUpdate(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated) {
            base.Channel.ProcessInfoUpdate(processInfoId, changeUserId, processName, processDescription, canEdit, usableByWorkflow, automated);
        }
        
        public System.Threading.Tasks.Task ProcessInfoUpdateAsync(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated) {
            return base.Channel.ProcessInfoUpdateAsync(processInfoId, changeUserId, processName, processDescription, canEdit, usableByWorkflow, automated);
        }
        
        public void ProcessInfoUpdateSafe(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated, int version) {
            base.Channel.ProcessInfoUpdateSafe(processInfoId, changeUserId, processName, processDescription, canEdit, usableByWorkflow, automated, version);
        }
        
        public System.Threading.Tasks.Task ProcessInfoUpdateSafeAsync(long processInfoId, long changeUserId, string processName, string processDescription, System.Nullable<bool> canEdit, System.Nullable<bool> usableByWorkflow, System.Nullable<bool> automated, int version) {
            return base.Channel.ProcessInfoUpdateSafeAsync(processInfoId, changeUserId, processName, processDescription, canEdit, usableByWorkflow, automated, version);
        }
        
        public int ProcessInfoDelete(long processInfoId) {
            return base.Channel.ProcessInfoDelete(processInfoId);
        }
        
        public System.Threading.Tasks.Task<int> ProcessInfoDeleteAsync(long processInfoId) {
            return base.Channel.ProcessInfoDeleteAsync(processInfoId);
        }
        
        public void ProcessInfoRemove(long processInfoId, long changeUserId) {
            base.Channel.ProcessInfoRemove(processInfoId, changeUserId);
        }
        
        public System.Threading.Tasks.Task ProcessInfoRemoveAsync(long processInfoId, long changeUserId) {
            return base.Channel.ProcessInfoRemoveAsync(processInfoId, changeUserId);
        }
        
        public VastecOPMSP.FHSvc.ProcessQueueList ProcessQueueGetList(System.Nullable<long> processQueueId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId) {
            return base.Channel.ProcessQueueGetList(processQueueId, jobId, jobActivityId, boxActivityId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessQueueList> ProcessQueueGetListAsync(System.Nullable<long> processQueueId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId) {
            return base.Channel.ProcessQueueGetListAsync(processQueueId, jobId, jobActivityId, boxActivityId);
        }
        
        public long ProcessQueueInsert(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<long> processInfoId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted) {
            return base.Channel.ProcessQueueInsert(jobActivityId, boxActivityId, processServerId, processInfoId, processStarted, processCompleted);
        }
        
        public System.Threading.Tasks.Task<long> ProcessQueueInsertAsync(System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<long> processInfoId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted) {
            return base.Channel.ProcessQueueInsertAsync(jobActivityId, boxActivityId, processServerId, processInfoId, processStarted, processCompleted);
        }
        
        public VastecOPMSP.FHSvc.BoxActivityDacDualIndex ProcessQueueSetToComplete(long processQueueId, long changeUserId) {
            return base.Channel.ProcessQueueSetToComplete(processQueueId, changeUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityDacDualIndex> ProcessQueueSetToCompleteAsync(long processQueueId, long changeUserId) {
            return base.Channel.ProcessQueueSetToCompleteAsync(processQueueId, changeUserId);
        }
        
        public void ProcessQueueUpdate(long processQueueId, System.Nullable<long> processInfoId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted, System.Nullable<System.DateTime> processErrorDate, System.Nullable<System.DateTime> sleepUntilTime) {
            base.Channel.ProcessQueueUpdate(processQueueId, processInfoId, jobId, jobActivityId, boxActivityId, processServerId, processStarted, processCompleted, processErrorDate, sleepUntilTime);
        }
        
        public System.Threading.Tasks.Task ProcessQueueUpdateAsync(long processQueueId, System.Nullable<long> processInfoId, System.Nullable<long> jobId, System.Nullable<long> jobActivityId, System.Nullable<long> boxActivityId, System.Nullable<long> processServerId, System.Nullable<System.DateTime> processStarted, System.Nullable<System.DateTime> processCompleted, System.Nullable<System.DateTime> processErrorDate, System.Nullable<System.DateTime> sleepUntilTime) {
            return base.Channel.ProcessQueueUpdateAsync(processQueueId, processInfoId, jobId, jobActivityId, boxActivityId, processServerId, processStarted, processCompleted, processErrorDate, sleepUntilTime);
        }
        
        public void ProcessQueueUnAssign(long processQueueId) {
            base.Channel.ProcessQueueUnAssign(processQueueId);
        }
        
        public System.Threading.Tasks.Task ProcessQueueUnAssignAsync(long processQueueId) {
            return base.Channel.ProcessQueueUnAssignAsync(processQueueId);
        }
        
        public int ProcessQueueDelete(long processQueueId) {
            return base.Channel.ProcessQueueDelete(processQueueId);
        }
        
        public System.Threading.Tasks.Task<int> ProcessQueueDeleteAsync(long processQueueId) {
            return base.Channel.ProcessQueueDeleteAsync(processQueueId);
        }
        
        public VastecOPMSP.FHSvc.ProcessQueueStateList ProcessQueueStateGetList(System.Nullable<long> processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName) {
            return base.Channel.ProcessQueueStateGetList(processQueueStateId, processQueueId, settingGroup, settingName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessQueueStateList> ProcessQueueStateGetListAsync(System.Nullable<long> processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName) {
            return base.Channel.ProcessQueueStateGetListAsync(processQueueStateId, processQueueId, settingGroup, settingName);
        }
        
        public long ProcessQueueStateInsert(long processQueueId, string settingGroup, string settingName, string settingValue) {
            return base.Channel.ProcessQueueStateInsert(processQueueId, settingGroup, settingName, settingValue);
        }
        
        public System.Threading.Tasks.Task<long> ProcessQueueStateInsertAsync(long processQueueId, string settingGroup, string settingName, string settingValue) {
            return base.Channel.ProcessQueueStateInsertAsync(processQueueId, settingGroup, settingName, settingValue);
        }
        
        public void ProcessQueueStateUpdate(long processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName, string settingValue) {
            base.Channel.ProcessQueueStateUpdate(processQueueStateId, processQueueId, settingGroup, settingName, settingValue);
        }
        
        public System.Threading.Tasks.Task ProcessQueueStateUpdateAsync(long processQueueStateId, System.Nullable<long> processQueueId, string settingGroup, string settingName, string settingValue) {
            return base.Channel.ProcessQueueStateUpdateAsync(processQueueStateId, processQueueId, settingGroup, settingName, settingValue);
        }
        
        public int ProcessQueueStateDelete(long processQueueStateId) {
            return base.Channel.ProcessQueueStateDelete(processQueueStateId);
        }
        
        public System.Threading.Tasks.Task<int> ProcessQueueStateDeleteAsync(long processQueueStateId) {
            return base.Channel.ProcessQueueStateDeleteAsync(processQueueStateId);
        }
        
        public VastecOPMSP.FHSvc.ProcessServerList ProcessServerGetList(System.Nullable<long> processServerId, string serverName) {
            return base.Channel.ProcessServerGetList(processServerId, serverName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProcessServerList> ProcessServerGetListAsync(System.Nullable<long> processServerId, string serverName) {
            return base.Channel.ProcessServerGetListAsync(processServerId, serverName);
        }
        
        public long ProcessServerInsert(string serverName) {
            return base.Channel.ProcessServerInsert(serverName);
        }
        
        public System.Threading.Tasks.Task<long> ProcessServerInsertAsync(string serverName) {
            return base.Channel.ProcessServerInsertAsync(serverName);
        }
        
        public void ProcessServerUpdate(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat) {
            base.Channel.ProcessServerUpdate(processServerId, serverName, lastHeartbeat);
        }
        
        public System.Threading.Tasks.Task ProcessServerUpdateAsync(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat) {
            return base.Channel.ProcessServerUpdateAsync(processServerId, serverName, lastHeartbeat);
        }
        
        public void ProcessServerUpdateSafe(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat, int version) {
            base.Channel.ProcessServerUpdateSafe(processServerId, serverName, lastHeartbeat, version);
        }
        
        public System.Threading.Tasks.Task ProcessServerUpdateSafeAsync(long processServerId, string serverName, System.Nullable<System.DateTime> lastHeartbeat, int version) {
            return base.Channel.ProcessServerUpdateSafeAsync(processServerId, serverName, lastHeartbeat, version);
        }
        
        public int ProcessServer(long processServerId) {
            return base.Channel.ProcessServer(processServerId);
        }
        
        public System.Threading.Tasks.Task<int> ProcessServerAsync(long processServerId) {
            return base.Channel.ProcessServerAsync(processServerId);
        }
        
        public VastecOPMSP.FHSvc.ProjectList ProjectGetList(System.Nullable<long> projectId, System.Nullable<long> customerId, string projectName) {
            return base.Channel.ProjectGetList(projectId, customerId, projectName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectList> ProjectGetListAsync(System.Nullable<long> projectId, System.Nullable<long> customerId, string projectName) {
            return base.Channel.ProjectGetListAsync(projectId, customerId, projectName);
        }
        
        public long ProjectInsert(string projectName, string projectDescription, long customerId, bool projectActive, long changeUserId) {
            return base.Channel.ProjectInsert(projectName, projectDescription, customerId, projectActive, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> ProjectInsertAsync(string projectName, string projectDescription, long customerId, bool projectActive, long changeUserId) {
            return base.Channel.ProjectInsertAsync(projectName, projectDescription, customerId, projectActive, changeUserId);
        }
        
        public long ProjectInsertByName(string projectName, string customerName, string projectDescription, long customerId) {
            return base.Channel.ProjectInsertByName(projectName, customerName, projectDescription, customerId);
        }
        
        public System.Threading.Tasks.Task<long> ProjectInsertByNameAsync(string projectName, string customerName, string projectDescription, long customerId) {
            return base.Channel.ProjectInsertByNameAsync(projectName, customerName, projectDescription, customerId);
        }
        
        public void ProjectUpdate(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive) {
            base.Channel.ProjectUpdate(projectId, customerId, projectName, projectDescription, projectActive);
        }
        
        public System.Threading.Tasks.Task ProjectUpdateAsync(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive) {
            return base.Channel.ProjectUpdateAsync(projectId, customerId, projectName, projectDescription, projectActive);
        }
        
        public void ProjectUpdateSafe(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive, int version) {
            base.Channel.ProjectUpdateSafe(projectId, customerId, projectName, projectDescription, projectActive, version);
        }
        
        public System.Threading.Tasks.Task ProjectUpdateSafeAsync(long projectId, System.Nullable<long> customerId, string projectName, string projectDescription, System.Nullable<bool> projectActive, int version) {
            return base.Channel.ProjectUpdateSafeAsync(projectId, customerId, projectName, projectDescription, projectActive, version);
        }
        
        public int ProjectDelete(long projectId) {
            return base.Channel.ProjectDelete(projectId);
        }
        
        public System.Threading.Tasks.Task<int> ProjectDeleteAsync(long projectId) {
            return base.Channel.ProjectDeleteAsync(projectId);
        }
        
        public VastecOPMSP.FHSvc.ProjectLocationList ProjectLocationGetList(System.Nullable<long> projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectName) {
            return base.Channel.ProjectLocationGetList(projectLocationId, projectId, locationId, projectName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectLocationList> ProjectLocationGetListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectName) {
            return base.Channel.ProjectLocationGetListAsync(projectLocationId, projectId, locationId, projectName);
        }
        
        public long ProjectLocationInsert(long projectId, long locationId, string projectRelativePath) {
            return base.Channel.ProjectLocationInsert(projectId, locationId, projectRelativePath);
        }
        
        public System.Threading.Tasks.Task<long> ProjectLocationInsertAsync(long projectId, long locationId, string projectRelativePath) {
            return base.Channel.ProjectLocationInsertAsync(projectId, locationId, projectRelativePath);
        }
        
        public void ProjectLocationUpdate(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath) {
            base.Channel.ProjectLocationUpdate(projectLocationId, projectId, locationId, projectRelativePath);
        }
        
        public System.Threading.Tasks.Task ProjectLocationUpdateAsync(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath) {
            return base.Channel.ProjectLocationUpdateAsync(projectLocationId, projectId, locationId, projectRelativePath);
        }
        
        public void ProjectLocationUpdateSafe(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath, int version) {
            base.Channel.ProjectLocationUpdateSafe(projectLocationId, projectId, locationId, projectRelativePath, version);
        }
        
        public System.Threading.Tasks.Task ProjectLocationUpdateSafeAsync(long projectLocationId, System.Nullable<long> projectId, System.Nullable<long> locationId, string projectRelativePath, int version) {
            return base.Channel.ProjectLocationUpdateSafeAsync(projectLocationId, projectId, locationId, projectRelativePath, version);
        }
        
        public int ProjectLocationDelete(long projectLocationId) {
            return base.Channel.ProjectLocationDelete(projectLocationId);
        }
        
        public System.Threading.Tasks.Task<int> ProjectLocationDeleteAsync(long projectLocationId) {
            return base.Channel.ProjectLocationDeleteAsync(projectLocationId);
        }
        
        public VastecOPMSP.FHSvc.ProjectLocationUserRoleList ProjectLocationUserRoleGetList(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup) {
            return base.Channel.ProjectLocationUserRoleGetList(projectLocationId, userId, roleGroup);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectLocationUserRoleList> ProjectLocationUserRoleGetListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup) {
            return base.Channel.ProjectLocationUserRoleGetListAsync(projectLocationId, userId, roleGroup);
        }
        
        public VastecOPMSP.FHSvc.ProjectLocationUserRoleList ProjectLocationUserRoleGetExtendedList(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup) {
            return base.Channel.ProjectLocationUserRoleGetExtendedList(projectLocationId, userId, roleGroup);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectLocationUserRoleList> ProjectLocationUserRoleGetExtendedListAsync(System.Nullable<long> projectLocationId, System.Nullable<long> userId, string roleGroup) {
            return base.Channel.ProjectLocationUserRoleGetExtendedListAsync(projectLocationId, userId, roleGroup);
        }
        
        public long ProjectLocationUserRoleInsert(long projectId, long userId, long roleId) {
            return base.Channel.ProjectLocationUserRoleInsert(projectId, userId, roleId);
        }
        
        public System.Threading.Tasks.Task<long> ProjectLocationUserRoleInsertAsync(long projectId, long userId, long roleId) {
            return base.Channel.ProjectLocationUserRoleInsertAsync(projectId, userId, roleId);
        }
        
        public void ProjectLocationUserRoleUpdate(long projectUserRoleId, System.Nullable<long> projectId, System.Nullable<long> userId, System.Nullable<long> roleId) {
            base.Channel.ProjectLocationUserRoleUpdate(projectUserRoleId, projectId, userId, roleId);
        }
        
        public System.Threading.Tasks.Task ProjectLocationUserRoleUpdateAsync(long projectUserRoleId, System.Nullable<long> projectId, System.Nullable<long> userId, System.Nullable<long> roleId) {
            return base.Channel.ProjectLocationUserRoleUpdateAsync(projectUserRoleId, projectId, userId, roleId);
        }
        
        public int ProjectLocationUserRoleDelete(long projectUserRoleId) {
            return base.Channel.ProjectLocationUserRoleDelete(projectUserRoleId);
        }
        
        public System.Threading.Tasks.Task<int> ProjectLocationUserRoleDeleteAsync(long projectUserRoleId) {
            return base.Channel.ProjectLocationUserRoleDeleteAsync(projectUserRoleId);
        }
        
        public VastecOPMSP.FHSvc.ProjectManifestLookupList ProjectManifestLookupGetList(System.Nullable<long> projectManifestLookupId, System.Nullable<long> projectId, string ssn, string entryType) {
            return base.Channel.ProjectManifestLookupGetList(projectManifestLookupId, projectId, ssn, entryType);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectManifestLookupList> ProjectManifestLookupGetListAsync(System.Nullable<long> projectManifestLookupId, System.Nullable<long> projectId, string ssn, string entryType) {
            return base.Channel.ProjectManifestLookupGetListAsync(projectManifestLookupId, projectId, ssn, entryType);
        }
        
        public long ProjectManifestLookupInsert(long projectId, long changeUserId, string ssn, string entryType) {
            return base.Channel.ProjectManifestLookupInsert(projectId, changeUserId, ssn, entryType);
        }
        
        public System.Threading.Tasks.Task<long> ProjectManifestLookupInsertAsync(long projectId, long changeUserId, string ssn, string entryType) {
            return base.Channel.ProjectManifestLookupInsertAsync(projectId, changeUserId, ssn, entryType);
        }
        
        public void ProjectManifestLookupUpdate(long projectManifestLookupId, long projectId, System.Nullable<long> changeUserId, string ssn, string entryType) {
            base.Channel.ProjectManifestLookupUpdate(projectManifestLookupId, projectId, changeUserId, ssn, entryType);
        }
        
        public System.Threading.Tasks.Task ProjectManifestLookupUpdateAsync(long projectManifestLookupId, long projectId, System.Nullable<long> changeUserId, string ssn, string entryType) {
            return base.Channel.ProjectManifestLookupUpdateAsync(projectManifestLookupId, projectId, changeUserId, ssn, entryType);
        }
        
        public int ProjectManifestLookupDelete(long projectManifestLookupId) {
            return base.Channel.ProjectManifestLookupDelete(projectManifestLookupId);
        }
        
        public System.Threading.Tasks.Task<int> ProjectManifestLookupDeleteAsync(long projectManifestLookupId) {
            return base.Channel.ProjectManifestLookupDeleteAsync(projectManifestLookupId);
        }
        
        public VastecOPMSP.FHSvc.ProjectOfficeIdentifierList ProjectOfficeIdentifierGetList(System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, System.Nullable<bool> isActive) {
            return base.Channel.ProjectOfficeIdentifierGetList(projectOfficeIdentifierId, projectId, officeIdentifier, isActive);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.ProjectOfficeIdentifierList> ProjectOfficeIdentifierGetListAsync(System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> projectId, string officeIdentifier, System.Nullable<bool> isActive) {
            return base.Channel.ProjectOfficeIdentifierGetListAsync(projectOfficeIdentifierId, projectId, officeIdentifier, isActive);
        }
        
        public System.IO.Stream GetStream(string data) {
            return base.Channel.GetStream(data);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string data) {
            return base.Channel.GetStreamAsync(data);
        }
        
        public bool UploadStream(System.IO.Stream stream) {
            return base.Channel.UploadStream(stream);
        }
        
        public System.Threading.Tasks.Task<bool> UploadStreamAsync(System.IO.Stream stream) {
            return base.Channel.UploadStreamAsync(stream);
        }
        
        public VastecOPMSP.FHSvc.Batch[] BatchGetList(System.Nullable<long> batchId, string batchIdentifier, System.Nullable<long> jobId, System.Nullable<bool> batchAccepted) {
            return base.Channel.BatchGetList(batchId, batchIdentifier, jobId, batchAccepted);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.Batch[]> BatchGetListAsync(System.Nullable<long> batchId, string batchIdentifier, System.Nullable<long> jobId, System.Nullable<bool> batchAccepted) {
            return base.Channel.BatchGetListAsync(batchId, batchIdentifier, jobId, batchAccepted);
        }
        
        public long BatchInsert(string batchIdentifier, System.DateTime batchStart, System.DateTime batchDeadline, string batchRelativePath, int batchFileCount) {
            return base.Channel.BatchInsert(batchIdentifier, batchStart, batchDeadline, batchRelativePath, batchFileCount);
        }
        
        public System.Threading.Tasks.Task<long> BatchInsertAsync(string batchIdentifier, System.DateTime batchStart, System.DateTime batchDeadline, string batchRelativePath, int batchFileCount) {
            return base.Channel.BatchInsertAsync(batchIdentifier, batchStart, batchDeadline, batchRelativePath, batchFileCount);
        }
        
        public void BatchUpdate(long batchId, string batchIdentifier, System.Nullable<System.DateTime> batchStart, System.Nullable<System.DateTime> batchDeadline, System.Nullable<System.DateTime> batchAcceptedDate, string batchRelativePath, System.Nullable<int> batchFileCount) {
            base.Channel.BatchUpdate(batchId, batchIdentifier, batchStart, batchDeadline, batchAcceptedDate, batchRelativePath, batchFileCount);
        }
        
        public System.Threading.Tasks.Task BatchUpdateAsync(long batchId, string batchIdentifier, System.Nullable<System.DateTime> batchStart, System.Nullable<System.DateTime> batchDeadline, System.Nullable<System.DateTime> batchAcceptedDate, string batchRelativePath, System.Nullable<int> batchFileCount) {
            return base.Channel.BatchUpdateAsync(batchId, batchIdentifier, batchStart, batchDeadline, batchAcceptedDate, batchRelativePath, batchFileCount);
        }
        
        public int BatchDelete(long batchId) {
            return base.Channel.BatchDelete(batchId);
        }
        
        public System.Threading.Tasks.Task<int> BatchDeleteAsync(long batchId) {
            return base.Channel.BatchDeleteAsync(batchId);
        }
        
        public VastecOPMSP.FHSvc.BoxList BoxGetList(System.Nullable<long> boxId, System.Nullable<long> locationId, string boxContainer, System.Nullable<long> jobId, System.Nullable<bool> boxHold) {
            return base.Channel.BoxGetList(boxId, locationId, boxContainer, jobId, boxHold);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxList> BoxGetListAsync(System.Nullable<long> boxId, System.Nullable<long> locationId, string boxContainer, System.Nullable<long> jobId, System.Nullable<bool> boxHold) {
            return base.Channel.BoxGetListAsync(boxId, locationId, boxContainer, jobId, boxHold);
        }
        
        public string GetBoxTreeXml(long boxId, System.Nullable<long> mdFieldIdentifierId) {
            return base.Channel.GetBoxTreeXml(boxId, mdFieldIdentifierId);
        }
        
        public System.Threading.Tasks.Task<string> GetBoxTreeXmlAsync(long boxId, System.Nullable<long> mdFieldIdentifierId) {
            return base.Channel.GetBoxTreeXmlAsync(boxId, mdFieldIdentifierId);
        }
        
        public long BoxInsert(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer) {
            return base.Channel.BoxInsert(jobId, locationId, changeUserId, boxName, boxRelativePath, boxContainer);
        }
        
        public System.Threading.Tasks.Task<long> BoxInsertAsync(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer) {
            return base.Channel.BoxInsertAsync(jobId, locationId, changeUserId, boxName, boxRelativePath, boxContainer);
        }
        
        public long BoxInsertByJobName(long projectLocationId, string jobName, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer) {
            return base.Channel.BoxInsertByJobName(projectLocationId, jobName, locationId, changeUserId, boxName, boxRelativePath, boxContainer);
        }
        
        public System.Threading.Tasks.Task<long> BoxInsertByJobNameAsync(long projectLocationId, string jobName, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer) {
            return base.Channel.BoxInsertByJobNameAsync(projectLocationId, jobName, locationId, changeUserId, boxName, boxRelativePath, boxContainer);
        }
        
        public VastecOPMSP.FHSvc.BoxAndBoxActivityId BoxInsertActivityPrimed(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer) {
            return base.Channel.BoxInsertActivityPrimed(jobId, locationId, changeUserId, boxName, boxRelativePath, boxContainer);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxAndBoxActivityId> BoxInsertActivityPrimedAsync(long jobId, System.Nullable<long> locationId, long changeUserId, string boxName, string boxRelativePath, string boxContainer) {
            return base.Channel.BoxInsertActivityPrimedAsync(jobId, locationId, changeUserId, boxName, boxRelativePath, boxContainer);
        }
        
        public void BoxUpdate(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold) {
            base.Channel.BoxUpdate(boxId, changeUserId, jobId, locationId, boxName, boxRelativePath, boxContainer, boxFinished, boxHold);
        }
        
        public System.Threading.Tasks.Task BoxUpdateAsync(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold) {
            return base.Channel.BoxUpdateAsync(boxId, changeUserId, jobId, locationId, boxName, boxRelativePath, boxContainer, boxFinished, boxHold);
        }
        
        public void BoxUpdateSafe(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold, int version) {
            base.Channel.BoxUpdateSafe(boxId, changeUserId, jobId, locationId, boxName, boxRelativePath, boxContainer, boxFinished, boxHold, version);
        }
        
        public System.Threading.Tasks.Task BoxUpdateSafeAsync(long boxId, long changeUserId, System.Nullable<long> jobId, System.Nullable<long> locationId, string boxName, string boxRelativePath, string boxContainer, System.Nullable<bool> boxFinished, System.Nullable<bool> boxHold, int version) {
            return base.Channel.BoxUpdateSafeAsync(boxId, changeUserId, jobId, locationId, boxName, boxRelativePath, boxContainer, boxFinished, boxHold, version);
        }
        
        public int BoxDelete(long boxId) {
            return base.Channel.BoxDelete(boxId);
        }
        
        public System.Threading.Tasks.Task<int> BoxDeleteAsync(long boxId) {
            return base.Channel.BoxDeleteAsync(boxId);
        }
        
        public VastecOPMSP.FHSvc.BoxActivity BoxActivityGet(long boxActivityId, bool loadEligibleUsers) {
            return base.Channel.BoxActivityGet(boxActivityId, loadEligibleUsers);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivity> BoxActivityGetAsync(long boxActivityId, bool loadEligibleUsers) {
            return base.Channel.BoxActivityGetAsync(boxActivityId, loadEligibleUsers);
        }
        
        public VastecOPMSP.FHSvc.BoxActivityList GetBoxActivityListByJobActivityId(long jobActivityId, bool loadEligibleUsers) {
            return base.Channel.GetBoxActivityListByJobActivityId(jobActivityId, loadEligibleUsers);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityList> GetBoxActivityListByJobActivityIdAsync(long jobActivityId, bool loadEligibleUsers) {
            return base.Channel.GetBoxActivityListByJobActivityIdAsync(jobActivityId, loadEligibleUsers);
        }
        
        public VastecOPMSP.FHSvc.BoxActivityList BoxActivityGetListByBoxName(long projectLocationId, string jobName, string boxName, bool loadEligibleUsers) {
            return base.Channel.BoxActivityGetListByBoxName(projectLocationId, jobName, boxName, loadEligibleUsers);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityList> BoxActivityGetListByBoxNameAsync(long projectLocationId, string jobName, string boxName, bool loadEligibleUsers) {
            return base.Channel.BoxActivityGetListByBoxNameAsync(projectLocationId, jobName, boxName, loadEligibleUsers);
        }
        
        public VastecOPMSP.FHSvc.BoxActivityList BoxActivityGetListByBoxId(long boxId, bool loadEligibleUsers) {
            return base.Channel.BoxActivityGetListByBoxId(boxId, loadEligibleUsers);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityList> BoxActivityGetListByBoxIdAsync(long boxId, bool loadEligibleUsers) {
            return base.Channel.BoxActivityGetListByBoxIdAsync(boxId, loadEligibleUsers);
        }
        
        public long BoxActivityInsert(long boxId, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.BoxActivityInsert(boxId, workflowActivityId, jobActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> BoxActivityInsertAsync(long boxId, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.BoxActivityInsertAsync(boxId, workflowActivityId, jobActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public long BoxActivityInsertByName(long projectLocationId, string jobName, string boxName, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.BoxActivityInsertByName(projectLocationId, jobName, boxName, workflowActivityId, jobActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> BoxActivityInsertByNameAsync(long projectLocationId, string jobName, string boxName, long workflowActivityId, long jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.BoxActivityInsertByNameAsync(projectLocationId, jobName, boxName, workflowActivityId, jobActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public VastecOPMSP.FHSvc.BoxActivityDacDualIndex BoxActivityInsertNextActivity(long boxActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.BoxActivityInsertNextActivity(boxActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxActivityDacDualIndex> BoxActivityInsertNextActivityAsync(long boxActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, long changeUserId) {
            return base.Channel.BoxActivityInsertNextActivityAsync(boxActivityId, assignedUserId, activityAssigned, changeUserId);
        }
        
        public void BoxActivityUpdate(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId) {
            base.Channel.BoxActivityUpdate(boxActivityId, jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId);
        }
        
        public System.Threading.Tasks.Task BoxActivityUpdateAsync(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId) {
            return base.Channel.BoxActivityUpdateAsync(boxActivityId, jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId);
        }
        
        public void BoxActivityUpdateSafe(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version) {
            base.Channel.BoxActivityUpdateSafe(boxActivityId, jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId, version);
        }
        
        public System.Threading.Tasks.Task BoxActivityUpdateSafeAsync(long boxActivityId, System.Nullable<long> jobActivityId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> activityAssigned, System.Nullable<System.DateTime> activityStarted, System.Nullable<System.DateTime> activityCompleted, long changeUserId, int version) {
            return base.Channel.BoxActivityUpdateSafeAsync(boxActivityId, jobActivityId, assignedUserId, activityAssigned, activityStarted, activityCompleted, changeUserId, version);
        }
        
        public void AssignActivity(long boxActivityId, long assignedUserId, long changeUserId, int version) {
            base.Channel.AssignActivity(boxActivityId, assignedUserId, changeUserId, version);
        }
        
        public System.Threading.Tasks.Task AssignActivityAsync(long boxActivityId, long assignedUserId, long changeUserId, int version) {
            return base.Channel.AssignActivityAsync(boxActivityId, assignedUserId, changeUserId, version);
        }
        
        public int BoxActivityDelete(long boxActivityId) {
            return base.Channel.BoxActivityDelete(boxActivityId);
        }
        
        public System.Threading.Tasks.Task<int> BoxActivityDeleteAsync(long boxActivityId) {
            return base.Channel.BoxActivityDeleteAsync(boxActivityId);
        }
        
        public VastecOPMSP.FHSvc.BoxFolderList BoxFolderGetList(System.Nullable<long> boxFolderId, System.Nullable<long> boxId, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa) {
            return base.Channel.BoxFolderGetList(boxFolderId, boxId, allFormsAreValid, allFormsHadQa);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxFolderList> BoxFolderGetListAsync(System.Nullable<long> boxFolderId, System.Nullable<long> boxId, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa) {
            return base.Channel.BoxFolderGetListAsync(boxFolderId, boxId, allFormsAreValid, allFormsHadQa);
        }
        
        public string BoxFolderGetFinalizeXml(long boxFolderId, System.Nullable<long> fileInfoId, bool showExtractedDfrData, bool showIndexProfileData, bool showSaveStateItemData) {
            return base.Channel.BoxFolderGetFinalizeXml(boxFolderId, fileInfoId, showExtractedDfrData, showIndexProfileData, showSaveStateItemData);
        }
        
        public System.Threading.Tasks.Task<string> BoxFolderGetFinalizeXmlAsync(long boxFolderId, System.Nullable<long> fileInfoId, bool showExtractedDfrData, bool showIndexProfileData, bool showSaveStateItemData) {
            return base.Channel.BoxFolderGetFinalizeXmlAsync(boxFolderId, fileInfoId, showExtractedDfrData, showIndexProfileData, showSaveStateItemData);
        }
        
        public long BoxFolderInsert(long boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, bool allFormsAreValid, bool allFormsHadQa) {
            return base.Channel.BoxFolderInsert(boxId, changeUserId, folderStatus, folderRelativePath, scanFileName, allFormsAreValid, allFormsHadQa);
        }
        
        public System.Threading.Tasks.Task<long> BoxFolderInsertAsync(long boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, bool allFormsAreValid, bool allFormsHadQa) {
            return base.Channel.BoxFolderInsertAsync(boxId, changeUserId, folderStatus, folderRelativePath, scanFileName, allFormsAreValid, allFormsHadQa);
        }
        
        public void BoxFolderUpdate(long boxFolderId, System.Nullable<long> boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa) {
            base.Channel.BoxFolderUpdate(boxFolderId, boxId, changeUserId, folderStatus, folderRelativePath, scanFileName, allFormsAreValid, allFormsHadQa);
        }
        
        public System.Threading.Tasks.Task BoxFolderUpdateAsync(long boxFolderId, System.Nullable<long> boxId, long changeUserId, string folderStatus, string folderRelativePath, string scanFileName, System.Nullable<bool> allFormsAreValid, System.Nullable<bool> allFormsHadQa) {
            return base.Channel.BoxFolderUpdateAsync(boxFolderId, boxId, changeUserId, folderStatus, folderRelativePath, scanFileName, allFormsAreValid, allFormsHadQa);
        }
        
        public int BoxFolderDelete(long boxFolderId) {
            return base.Channel.BoxFolderDelete(boxFolderId);
        }
        
        public System.Threading.Tasks.Task<int> BoxFolderDeleteAsync(long boxFolderId) {
            return base.Channel.BoxFolderDeleteAsync(boxFolderId);
        }
        
        public VastecOPMSP.FHSvc.BoxManifestList BoxManifestGetList(System.Nullable<long> boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, string boxStatus) {
            return base.Channel.BoxManifestGetList(boxManifestId, projectOfficeIdentifierId, boxId, spManifestId, boxStatus);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxManifestList> BoxManifestGetListAsync(System.Nullable<long> boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, string boxStatus) {
            return base.Channel.BoxManifestGetListAsync(boxManifestId, projectOfficeIdentifierId, boxId, spManifestId, boxStatus);
        }
        
        public long BoxManifestInsert(long projectOfficeIdentifierId, System.Nullable<long> boxId, long spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, int numberParcels, string boxStatus) {
            return base.Channel.BoxManifestInsert(projectOfficeIdentifierId, boxId, spManifestId, changeUserId, boxLabelPrintDate, conversionType, shipmentType, numberParcels, boxStatus);
        }
        
        public System.Threading.Tasks.Task<long> BoxManifestInsertAsync(long projectOfficeIdentifierId, System.Nullable<long> boxId, long spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, int numberParcels, string boxStatus) {
            return base.Channel.BoxManifestInsertAsync(projectOfficeIdentifierId, boxId, spManifestId, changeUserId, boxLabelPrintDate, conversionType, shipmentType, numberParcels, boxStatus);
        }
        
        public void BoxManifestUpdate(long boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate) {
            base.Channel.BoxManifestUpdate(boxManifestId, projectOfficeIdentifierId, boxId, spManifestId, changeUserId, boxLabelPrintDate, conversionType, shipmentType, numberParcels, boxStatus, boxReceivedDate, boxFinalizeDate);
        }
        
        public System.Threading.Tasks.Task BoxManifestUpdateAsync(long boxManifestId, System.Nullable<long> projectOfficeIdentifierId, System.Nullable<long> boxId, System.Nullable<long> spManifestId, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate) {
            return base.Channel.BoxManifestUpdateAsync(boxManifestId, projectOfficeIdentifierId, boxId, spManifestId, changeUserId, boxLabelPrintDate, conversionType, shipmentType, numberParcels, boxStatus, boxReceivedDate, boxFinalizeDate);
        }
        
        public void BoxManifestAddToJobBatch(long[] boxManifestIdList, long jobId, long changeUserId) {
            base.Channel.BoxManifestAddToJobBatch(boxManifestIdList, jobId, changeUserId);
        }
        
        public System.Threading.Tasks.Task BoxManifestAddToJobBatchAsync(long[] boxManifestIdList, long jobId, long changeUserId) {
            return base.Channel.BoxManifestAddToJobBatchAsync(boxManifestIdList, jobId, changeUserId);
        }
        
        public void BoxManifestUpdateBatch(long[] boxManifestIdList, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate) {
            base.Channel.BoxManifestUpdateBatch(boxManifestIdList, changeUserId, boxLabelPrintDate, conversionType, shipmentType, numberParcels, boxStatus, boxReceivedDate, boxFinalizeDate);
        }
        
        public System.Threading.Tasks.Task BoxManifestUpdateBatchAsync(long[] boxManifestIdList, long changeUserId, System.Nullable<System.DateTime> boxLabelPrintDate, string conversionType, string shipmentType, System.Nullable<int> numberParcels, string boxStatus, System.Nullable<System.DateTime> boxReceivedDate, System.Nullable<System.DateTime> boxFinalizeDate) {
            return base.Channel.BoxManifestUpdateBatchAsync(boxManifestIdList, changeUserId, boxLabelPrintDate, conversionType, shipmentType, numberParcels, boxStatus, boxReceivedDate, boxFinalizeDate);
        }
        
        public long BoxManifestInsertWithItems(string xml, long changeUserId) {
            return base.Channel.BoxManifestInsertWithItems(xml, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> BoxManifestInsertWithItemsAsync(string xml, long changeUserId) {
            return base.Channel.BoxManifestInsertWithItemsAsync(xml, changeUserId);
        }
        
        public int BoxManifestDelete(long boxManifestId) {
            return base.Channel.BoxManifestDelete(boxManifestId);
        }
        
        public System.Threading.Tasks.Task<int> BoxManifestDeleteAsync(long boxManifestId) {
            return base.Channel.BoxManifestDeleteAsync(boxManifestId);
        }
        
        public VastecOPMSP.FHSvc.BoxManifestItemList BoxManifestItemGetList(System.Nullable<long> boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, string status, string ssn) {
            return base.Channel.BoxManifestItemGetList(boxManifestItemId, boxManifestId, boxFolderId, spBoxManifestItemId, status, ssn);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxManifestItemList> BoxManifestItemGetListAsync(System.Nullable<long> boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, string status, string ssn) {
            return base.Channel.BoxManifestItemGetListAsync(boxManifestItemId, boxManifestId, boxFolderId, spBoxManifestItemId, status, ssn);
        }
        
        public long BoxManifestItemInsert(long boxManifestId, System.Nullable<long> boxFolderId, long spBoxManifestItemId, long changeUserId, System.DateTime addedToBoxDate, bool isMerge, string status, string ssn) {
            return base.Channel.BoxManifestItemInsert(boxManifestId, boxFolderId, spBoxManifestItemId, changeUserId, addedToBoxDate, isMerge, status, ssn);
        }
        
        public System.Threading.Tasks.Task<long> BoxManifestItemInsertAsync(long boxManifestId, System.Nullable<long> boxFolderId, long spBoxManifestItemId, long changeUserId, System.DateTime addedToBoxDate, bool isMerge, string status, string ssn) {
            return base.Channel.BoxManifestItemInsertAsync(boxManifestId, boxFolderId, spBoxManifestItemId, changeUserId, addedToBoxDate, isMerge, status, ssn);
        }
        
        public void BoxManifestItemUpdate(long boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, long changeUserId, System.Nullable<System.DateTime> addedToBoxDate, System.Nullable<System.DateTime> priorityFolderDate, System.Nullable<System.DateTime> issueFolderDate, System.Nullable<System.DateTime> confirmationDate, System.Nullable<bool> isMerge, string status, string ssn) {
            base.Channel.BoxManifestItemUpdate(boxManifestItemId, boxManifestId, boxFolderId, spBoxManifestItemId, changeUserId, addedToBoxDate, priorityFolderDate, issueFolderDate, confirmationDate, isMerge, status, ssn);
        }
        
        public System.Threading.Tasks.Task BoxManifestItemUpdateAsync(long boxManifestItemId, System.Nullable<long> boxManifestId, System.Nullable<long> boxFolderId, System.Nullable<long> spBoxManifestItemId, long changeUserId, System.Nullable<System.DateTime> addedToBoxDate, System.Nullable<System.DateTime> priorityFolderDate, System.Nullable<System.DateTime> issueFolderDate, System.Nullable<System.DateTime> confirmationDate, System.Nullable<bool> isMerge, string status, string ssn) {
            return base.Channel.BoxManifestItemUpdateAsync(boxManifestItemId, boxManifestId, boxFolderId, spBoxManifestItemId, changeUserId, addedToBoxDate, priorityFolderDate, issueFolderDate, confirmationDate, isMerge, status, ssn);
        }
        
        public int BoxManifestItemDelete(long boxManifestItemId) {
            return base.Channel.BoxManifestItemDelete(boxManifestItemId);
        }
        
        public System.Threading.Tasks.Task<int> BoxManifestItemDeleteAsync(long boxManifestItemId) {
            return base.Channel.BoxManifestItemDeleteAsync(boxManifestItemId);
        }
        
        public VastecOPMSP.FHSvc.BoxManifestItemTransmitList BoxManifestItemTransmitGetList(System.Nullable<long> boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<bool> packageConfirmed) {
            return base.Channel.BoxManifestItemTransmitGetList(boxManifestItemTransmitId, boxManifestItemId, packageConfirmed);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.BoxManifestItemTransmitList> BoxManifestItemTransmitGetListAsync(System.Nullable<long> boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<bool> packageConfirmed) {
            return base.Channel.BoxManifestItemTransmitGetListAsync(boxManifestItemTransmitId, boxManifestItemId, packageConfirmed);
        }
        
        public long BoxManifestItemTransmitInsert(long boxManifestItemId, System.Nullable<System.DateTime> transmitDate, bool packageConfirmed) {
            return base.Channel.BoxManifestItemTransmitInsert(boxManifestItemId, transmitDate, packageConfirmed);
        }
        
        public System.Threading.Tasks.Task<long> BoxManifestItemTransmitInsertAsync(long boxManifestItemId, System.Nullable<System.DateTime> transmitDate, bool packageConfirmed) {
            return base.Channel.BoxManifestItemTransmitInsertAsync(boxManifestItemId, transmitDate, packageConfirmed);
        }
        
        public void BoxManifestItemTransmitUpdate(long boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<System.DateTime> transmitDate, System.Nullable<bool> packageConfirmed) {
            base.Channel.BoxManifestItemTransmitUpdate(boxManifestItemTransmitId, boxManifestItemId, transmitDate, packageConfirmed);
        }
        
        public System.Threading.Tasks.Task BoxManifestItemTransmitUpdateAsync(long boxManifestItemTransmitId, System.Nullable<long> boxManifestItemId, System.Nullable<System.DateTime> transmitDate, System.Nullable<bool> packageConfirmed) {
            return base.Channel.BoxManifestItemTransmitUpdateAsync(boxManifestItemTransmitId, boxManifestItemId, transmitDate, packageConfirmed);
        }
        
        public int BoxManifestItemTransmitDelete(long boxManifestItemTransmitId) {
            return base.Channel.BoxManifestItemTransmitDelete(boxManifestItemTransmitId);
        }
        
        public System.Threading.Tasks.Task<int> BoxManifestItemTransmitDeleteAsync(long boxManifestItemTransmitId) {
            return base.Channel.BoxManifestItemTransmitDeleteAsync(boxManifestItemTransmitId);
        }
        
        public VastecOPMSP.FHSvc.CustomerList CustomerGetList(System.Nullable<long> customerId, string customerName) {
            return base.Channel.CustomerGetList(customerId, customerName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CustomerList> CustomerGetListAsync(System.Nullable<long> customerId, string customerName) {
            return base.Channel.CustomerGetListAsync(customerId, customerName);
        }
        
        public long CustomerInsert(long metadataTypeId, string customerName, string customerNotes, string customerFolderUri, bool usesBoxManifest, long changeUserId) {
            return base.Channel.CustomerInsert(metadataTypeId, customerName, customerNotes, customerFolderUri, usesBoxManifest, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> CustomerInsertAsync(long metadataTypeId, string customerName, string customerNotes, string customerFolderUri, bool usesBoxManifest, long changeUserId) {
            return base.Channel.CustomerInsertAsync(metadataTypeId, customerName, customerNotes, customerFolderUri, usesBoxManifest, changeUserId);
        }
        
        public void CustomerUpdate(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive) {
            base.Channel.CustomerUpdate(customerId, metadataTypeId, customerName, customerNotes, customerFolderUri, usesBoxManifest, customerActive);
        }
        
        public System.Threading.Tasks.Task CustomerUpdateAsync(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive) {
            return base.Channel.CustomerUpdateAsync(customerId, metadataTypeId, customerName, customerNotes, customerFolderUri, usesBoxManifest, customerActive);
        }
        
        public void CustomerUpdateSafe(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive, int version) {
            base.Channel.CustomerUpdateSafe(customerId, metadataTypeId, customerName, customerNotes, customerFolderUri, usesBoxManifest, customerActive, version);
        }
        
        public System.Threading.Tasks.Task CustomerUpdateSafeAsync(long customerId, System.Nullable<long> metadataTypeId, string customerName, string customerNotes, string customerFolderUri, System.Nullable<bool> usesBoxManifest, System.Nullable<bool> customerActive, int version) {
            return base.Channel.CustomerUpdateSafeAsync(customerId, metadataTypeId, customerName, customerNotes, customerFolderUri, usesBoxManifest, customerActive, version);
        }
        
        public int CustomerDelete(long customerId) {
            return base.Channel.CustomerDelete(customerId);
        }
        
        public System.Threading.Tasks.Task<int> CustomerDeleteAsync(long customerId) {
            return base.Channel.CustomerDeleteAsync(customerId);
        }
        
        public VastecOPMSP.FHSvc.CustomerUserRoleList CustomerUserRoleGetList(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.CustomerUserRoleGetList(customerId, customerName, userId, userLogin, roleGroup);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CustomerUserRoleList> CustomerUserRoleGetListAsync(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.CustomerUserRoleGetListAsync(customerId, customerName, userId, userLogin, roleGroup);
        }
        
        public VastecOPMSP.FHSvc.CustomerUserRoleList CustomerUserRoleGetExtendedList(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.CustomerUserRoleGetExtendedList(customerId, customerName, userId, userLogin, roleGroup);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.CustomerUserRoleList> CustomerUserRoleGetExtendedListAsync(System.Nullable<long> customerId, string customerName, System.Nullable<long> userId, string userLogin, string roleGroup) {
            return base.Channel.CustomerUserRoleGetExtendedListAsync(customerId, customerName, userId, userLogin, roleGroup);
        }
        
        public long CustomerUserRoleInsert(long customerId, long userId, long roleId) {
            return base.Channel.CustomerUserRoleInsert(customerId, userId, roleId);
        }
        
        public System.Threading.Tasks.Task<long> CustomerUserRoleInsertAsync(long customerId, long userId, long roleId) {
            return base.Channel.CustomerUserRoleInsertAsync(customerId, userId, roleId);
        }
        
        public void CustomerUserRoleUpdate(long customerUserRoleId, System.Nullable<long> customerId, System.Nullable<long> userId, System.Nullable<long> roleId) {
            base.Channel.CustomerUserRoleUpdate(customerUserRoleId, customerId, userId, roleId);
        }
        
        public System.Threading.Tasks.Task CustomerUserRoleUpdateAsync(long customerUserRoleId, System.Nullable<long> customerId, System.Nullable<long> userId, System.Nullable<long> roleId) {
            return base.Channel.CustomerUserRoleUpdateAsync(customerUserRoleId, customerId, userId, roleId);
        }
        
        public int CustomerUserRoleDelete(long customerUserRoleId) {
            return base.Channel.CustomerUserRoleDelete(customerUserRoleId);
        }
        
        public System.Threading.Tasks.Task<int> CustomerUserRoleDeleteAsync(long customerUserRoleId) {
            return base.Channel.CustomerUserRoleDeleteAsync(customerUserRoleId);
        }
        
        public VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityStatusList(VastecOPMSP.FHSvc.DataViewActivityStatusValues activityStatusValue, System.Nullable<long> jobId, System.Nullable<long> boxId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> jobStartCreateDate, System.Nullable<System.DateTime> jobEndCreateDate, bool onlyActiveJobs, System.Nullable<long> forUserId) {
            return base.Channel.GetActivityStatusList(activityStatusValue, jobId, boxId, assignedUserId, jobStartCreateDate, jobEndCreateDate, onlyActiveJobs, forUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityStatusListAsync(VastecOPMSP.FHSvc.DataViewActivityStatusValues activityStatusValue, System.Nullable<long> jobId, System.Nullable<long> boxId, System.Nullable<long> assignedUserId, System.Nullable<System.DateTime> jobStartCreateDate, System.Nullable<System.DateTime> jobEndCreateDate, bool onlyActiveJobs, System.Nullable<long> forUserId) {
            return base.Channel.GetActivityStatusListAsync(activityStatusValue, jobId, boxId, assignedUserId, jobStartCreateDate, jobEndCreateDate, onlyActiveJobs, forUserId);
        }
        
        public VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityActionList(long forUserId, bool asOperator) {
            return base.Channel.GetActivityActionList(forUserId, asOperator);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityActionListAsync(long forUserId, bool asOperator) {
            return base.Channel.GetActivityActionListAsync(forUserId, asOperator);
        }
        
        public VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityActionPdfiList(long forUserId, bool asAnOperator) {
            return base.Channel.GetActivityActionPdfiList(forUserId, asAnOperator);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityActionPdfiListAsync(long forUserId, bool asAnOperator) {
            return base.Channel.GetActivityActionPdfiListAsync(forUserId, asAnOperator);
        }
        
        public VastecOPMSP.FHSvc.DataViewActivityStatusList GetActivityCompletedList(long forUserId, bool asOperator) {
            return base.Channel.GetActivityCompletedList(forUserId, asOperator);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewActivityStatusList> GetActivityCompletedListAsync(long forUserId, bool asOperator) {
            return base.Channel.GetActivityCompletedListAsync(forUserId, asOperator);
        }
        
        public VastecOPMSP.FHSvc.DataViewProcessingTotals[] GetProcessingTotalsList(System.Nullable<long> customerId, System.Nullable<long> projectId, string officeIdentifier, System.DateTime reportStartDate, System.DateTime reportEndDate) {
            return base.Channel.GetProcessingTotalsList(customerId, projectId, officeIdentifier, reportStartDate, reportEndDate);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewProcessingTotals[]> GetProcessingTotalsListAsync(System.Nullable<long> customerId, System.Nullable<long> projectId, string officeIdentifier, System.DateTime reportStartDate, System.DateTime reportEndDate) {
            return base.Channel.GetProcessingTotalsListAsync(customerId, projectId, officeIdentifier, reportStartDate, reportEndDate);
        }
        
        public VastecOPMSP.FHSvc.DataViewUniqueSaveStateItems[] GetUniqueSaveStateItemList(System.Nullable<long> jobId, System.Nullable<long> boxId, bool onlyInFinalQa) {
            return base.Channel.GetUniqueSaveStateItemList(jobId, boxId, onlyInFinalQa);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewUniqueSaveStateItems[]> GetUniqueSaveStateItemListAsync(System.Nullable<long> jobId, System.Nullable<long> boxId, bool onlyInFinalQa) {
            return base.Channel.GetUniqueSaveStateItemListAsync(jobId, boxId, onlyInFinalQa);
        }
        
        public VastecOPMSP.FHSvc.DataViewSaveStateValueLookup[] GetSaveStateValueLookupList(System.Nullable<long> jobId, System.Nullable<long> boxId, string itemText, bool onlyInFinalQa) {
            return base.Channel.GetSaveStateValueLookupList(jobId, boxId, itemText, onlyInFinalQa);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewSaveStateValueLookup[]> GetSaveStateValueLookupListAsync(System.Nullable<long> jobId, System.Nullable<long> boxId, string itemText, bool onlyInFinalQa) {
            return base.Channel.GetSaveStateValueLookupListAsync(jobId, boxId, itemText, onlyInFinalQa);
        }
        
        public VastecOPMSP.FHSvc.DataViewSaveStateHistory[] GetSaveStateHistoryList(System.DateTime changeDate, long userId) {
            return base.Channel.GetSaveStateHistoryList(changeDate, userId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewSaveStateHistory[]> GetSaveStateHistoryListAsync(System.DateTime changeDate, long userId) {
            return base.Channel.GetSaveStateHistoryListAsync(changeDate, userId);
        }
        
        public VastecOPMSP.FHSvc.DataViewFileTouchAvg[] GetFileTouchAvgList(System.DateTime changeDate, long userId) {
            return base.Channel.GetFileTouchAvgList(changeDate, userId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewFileTouchAvg[]> GetFileTouchAvgListAsync(System.DateTime changeDate, long userId) {
            return base.Channel.GetFileTouchAvgListAsync(changeDate, userId);
        }
        
        public VastecOPMSP.FHSvc.DataViewProcessErrors[] GetProcessQueueErrorsList(System.Nullable<long> batchId, System.Nullable<long> jobId, System.Nullable<long> processInfoId) {
            return base.Channel.GetProcessQueueErrorsList(batchId, jobId, processInfoId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DataViewProcessErrors[]> GetProcessQueueErrorsListAsync(System.Nullable<long> batchId, System.Nullable<long> jobId, System.Nullable<long> processInfoId) {
            return base.Channel.GetProcessQueueErrorsListAsync(batchId, jobId, processInfoId);
        }
        
        public VastecOPMSP.FHSvc.DocumentationList DocumentationGetList(System.Nullable<long> documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId) {
            return base.Channel.DocumentationGetList(documentationId, projectId, projectLocationId, jobId, changeUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.DocumentationList> DocumentationGetListAsync(System.Nullable<long> documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId) {
            return base.Channel.DocumentationGetListAsync(documentationId, projectId, projectLocationId, jobId, changeUserId);
        }
        
        public long DocumentationInsert(long projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, long changeUserId, string description, string internalDocumentation, string externalDocumentationUri) {
            return base.Channel.DocumentationInsert(projectId, projectLocationId, jobId, changeUserId, description, internalDocumentation, externalDocumentationUri);
        }
        
        public System.Threading.Tasks.Task<long> DocumentationInsertAsync(long projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, long changeUserId, string description, string internalDocumentation, string externalDocumentationUri) {
            return base.Channel.DocumentationInsertAsync(projectId, projectLocationId, jobId, changeUserId, description, internalDocumentation, externalDocumentationUri);
        }
        
        public void DocumentationUpdate(long documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId, string description, string internalDocumentation, string externalDocumentationUri) {
            base.Channel.DocumentationUpdate(documentationId, projectId, projectLocationId, jobId, changeUserId, description, internalDocumentation, externalDocumentationUri);
        }
        
        public System.Threading.Tasks.Task DocumentationUpdateAsync(long documentationId, System.Nullable<long> projectId, System.Nullable<long> projectLocationId, System.Nullable<long> jobId, System.Nullable<long> changeUserId, string description, string internalDocumentation, string externalDocumentationUri) {
            return base.Channel.DocumentationUpdateAsync(documentationId, projectId, projectLocationId, jobId, changeUserId, description, internalDocumentation, externalDocumentationUri);
        }
        
        public int DocumentationDelete(long documentationId) {
            return base.Channel.DocumentationDelete(documentationId);
        }
        
        public System.Threading.Tasks.Task<int> DocumentationDeleteAsync(long documentationId) {
            return base.Channel.DocumentationDeleteAsync(documentationId);
        }
        
        public VastecOPMSP.FHSvc.FileInfoList FileInfoGetList(System.Nullable<long> fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed) {
            return base.Channel.FileInfoGetList(fileInfoId, boxId, boxFolderId, wasConfirmed, qaConfirmed);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.FileInfoList> FileInfoGetListAsync(System.Nullable<long> fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed) {
            return base.Channel.FileInfoGetListAsync(fileInfoId, boxId, boxFolderId, wasConfirmed, qaConfirmed);
        }
        
        public string FileInfoGetUnknownFormsXml(System.Nullable<long> assignedUserId) {
            return base.Channel.FileInfoGetUnknownFormsXml(assignedUserId);
        }
        
        public System.Threading.Tasks.Task<string> FileInfoGetUnknownFormsXmlAsync(System.Nullable<long> assignedUserId) {
            return base.Channel.FileInfoGetUnknownFormsXmlAsync(assignedUserId);
        }
        
        public long FileInfoInsert(System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, int totalPages, int ocrStartPage, int ocrEndPage, bool wasConfirmed, string sourceLocation, string formTypeOverride) {
            return base.Channel.FileInfoInsert(boxId, boxFolderId, mdFormId, changeUserId, pdfFileName, indexFileName, totalPages, ocrStartPage, ocrEndPage, wasConfirmed, sourceLocation, formTypeOverride);
        }
        
        public System.Threading.Tasks.Task<long> FileInfoInsertAsync(System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, int totalPages, int ocrStartPage, int ocrEndPage, bool wasConfirmed, string sourceLocation, string formTypeOverride) {
            return base.Channel.FileInfoInsertAsync(boxId, boxFolderId, mdFormId, changeUserId, pdfFileName, indexFileName, totalPages, ocrStartPage, ocrEndPage, wasConfirmed, sourceLocation, formTypeOverride);
        }
        
        public void FileInfoUpdate(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string sourceLocation, string formTypeOverride) {
            base.Channel.FileInfoUpdate(fileInfoId, boxId, boxFolderId, mdFormId, changeUserId, pdfFileName, indexFileName, totalPages, ocrStartPage, ocrEndPage, wasConfirmed, qaConfirmed, sourceLocation, formTypeOverride);
        }
        
        public System.Threading.Tasks.Task FileInfoUpdateAsync(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string sourceLocation, string formTypeOverride) {
            return base.Channel.FileInfoUpdateAsync(fileInfoId, boxId, boxFolderId, mdFormId, changeUserId, pdfFileName, indexFileName, totalPages, ocrStartPage, ocrEndPage, wasConfirmed, qaConfirmed, sourceLocation, formTypeOverride);
        }
        
        public void FileInfoUpdateSafe(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string rowVersion, string sourceLocation, string formTypeOverride) {
            base.Channel.FileInfoUpdateSafe(fileInfoId, boxId, boxFolderId, mdFormId, changeUserId, pdfFileName, indexFileName, totalPages, ocrStartPage, ocrEndPage, wasConfirmed, qaConfirmed, rowVersion, sourceLocation, formTypeOverride);
        }
        
        public System.Threading.Tasks.Task FileInfoUpdateSafeAsync(long fileInfoId, System.Nullable<long> boxId, System.Nullable<long> boxFolderId, System.Nullable<long> mdFormId, long changeUserId, string pdfFileName, string indexFileName, System.Nullable<int> totalPages, System.Nullable<int> ocrStartPage, System.Nullable<int> ocrEndPage, System.Nullable<bool> wasConfirmed, System.Nullable<bool> qaConfirmed, string rowVersion, string sourceLocation, string formTypeOverride) {
            return base.Channel.FileInfoUpdateSafeAsync(fileInfoId, boxId, boxFolderId, mdFormId, changeUserId, pdfFileName, indexFileName, totalPages, ocrStartPage, ocrEndPage, wasConfirmed, qaConfirmed, rowVersion, sourceLocation, formTypeOverride);
        }
        
        public void FileInfoSetUserReleased(long fileInfoHistoryId) {
            base.Channel.FileInfoSetUserReleased(fileInfoHistoryId);
        }
        
        public System.Threading.Tasks.Task FileInfoSetUserReleasedAsync(long fileInfoHistoryId) {
            return base.Channel.FileInfoSetUserReleasedAsync(fileInfoHistoryId);
        }
        
        public void FileInfoMerge(long fileInfoId1, long fileInfoId2, long changeUserId) {
            base.Channel.FileInfoMerge(fileInfoId1, fileInfoId2, changeUserId);
        }
        
        public System.Threading.Tasks.Task FileInfoMergeAsync(long fileInfoId1, long fileInfoId2, long changeUserId) {
            return base.Channel.FileInfoMergeAsync(fileInfoId1, fileInfoId2, changeUserId);
        }
        
        public void FileInfoSplit(long fileInfoId1, int pageNumber, long mdFormId, string fileName, long changeUserId) {
            base.Channel.FileInfoSplit(fileInfoId1, pageNumber, mdFormId, fileName, changeUserId);
        }
        
        public System.Threading.Tasks.Task FileInfoSplitAsync(long fileInfoId1, int pageNumber, long mdFormId, string fileName, long changeUserId) {
            return base.Channel.FileInfoSplitAsync(fileInfoId1, pageNumber, mdFormId, fileName, changeUserId);
        }
        
        public long FileInfoSetUserAccessed(long fileInfoId, long changeUserId) {
            return base.Channel.FileInfoSetUserAccessed(fileInfoId, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> FileInfoSetUserAccessedAsync(long fileInfoId, long changeUserId) {
            return base.Channel.FileInfoSetUserAccessedAsync(fileInfoId, changeUserId);
        }
        
        public long FileInfoInsertUserAccessed(long fileInfoId, long changeUserId, int accessTimeSec) {
            return base.Channel.FileInfoInsertUserAccessed(fileInfoId, changeUserId, accessTimeSec);
        }
        
        public System.Threading.Tasks.Task<long> FileInfoInsertUserAccessedAsync(long fileInfoId, long changeUserId, int accessTimeSec) {
            return base.Channel.FileInfoInsertUserAccessedAsync(fileInfoId, changeUserId, accessTimeSec);
        }
        
        public int FileInfoDelete(long fileInfoId) {
            return base.Channel.FileInfoDelete(fileInfoId);
        }
        
        public System.Threading.Tasks.Task<int> FileInfoDeleteAsync(long fileInfoId) {
            return base.Channel.FileInfoDeleteAsync(fileInfoId);
        }
        
        public VastecOPMSP.FHSvc.FileInfoPackageFormList FileInfoPackageFormGetList(System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId) {
            return base.Channel.FileInfoPackageFormGetList(fileInfoPackageFormId, fileInfoId, mdFormId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.FileInfoPackageFormList> FileInfoPackageFormGetListAsync(System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId) {
            return base.Channel.FileInfoPackageFormGetListAsync(fileInfoPackageFormId, fileInfoId, mdFormId);
        }
        
        public long FileInfoPackageInsert(long fileInfoId, long mdFormId, int pdfStartPageNumber) {
            return base.Channel.FileInfoPackageInsert(fileInfoId, mdFormId, pdfStartPageNumber);
        }
        
        public System.Threading.Tasks.Task<long> FileInfoPackageInsertAsync(long fileInfoId, long mdFormId, int pdfStartPageNumber) {
            return base.Channel.FileInfoPackageInsertAsync(fileInfoId, mdFormId, pdfStartPageNumber);
        }
        
        public void FileInfoPackageUpdate(long fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId, System.Nullable<int> pdfStartPageNumber) {
            base.Channel.FileInfoPackageUpdate(fileInfoPackageFormId, fileInfoId, mdFormId, pdfStartPageNumber);
        }
        
        public System.Threading.Tasks.Task FileInfoPackageUpdateAsync(long fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFormId, System.Nullable<int> pdfStartPageNumber) {
            return base.Channel.FileInfoPackageUpdateAsync(fileInfoPackageFormId, fileInfoId, mdFormId, pdfStartPageNumber);
        }
        
        public int FileInfoPackageDelete(long fileInfoPackageFormId) {
            return base.Channel.FileInfoPackageDelete(fileInfoPackageFormId);
        }
        
        public System.Threading.Tasks.Task<int> FileInfoPackageDeleteAsync(long fileInfoPackageFormId) {
            return base.Channel.FileInfoPackageDeleteAsync(fileInfoPackageFormId);
        }
        
        public VastecOPMSP.FHSvc.FileInfoFieldList FileInfoFieldGetList(System.Nullable<long> fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId) {
            return base.Channel.FileInfoFieldGetList(fileInfoFieldId, fileInfoPackageFormId, fileInfoId, mdFieldId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.FileInfoFieldList> FileInfoFieldGetListAsync(System.Nullable<long> fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId) {
            return base.Channel.FileInfoFieldGetListAsync(fileInfoFieldId, fileInfoPackageFormId, fileInfoId, mdFieldId);
        }
        
        public long FileInfoFieldInsert(System.Nullable<long> fileInfoPackageFormId, long fileInfoId, long mdFieldId, string extractedValue, string charConfidence, int pdfPageNumber, int primeTopCoord, int primeLeftCoord, int primeRightCoord, int primeBottomCoord) {
            return base.Channel.FileInfoFieldInsert(fileInfoPackageFormId, fileInfoId, mdFieldId, extractedValue, charConfidence, pdfPageNumber, primeTopCoord, primeLeftCoord, primeRightCoord, primeBottomCoord);
        }
        
        public System.Threading.Tasks.Task<long> FileInfoFieldInsertAsync(System.Nullable<long> fileInfoPackageFormId, long fileInfoId, long mdFieldId, string extractedValue, string charConfidence, int pdfPageNumber, int primeTopCoord, int primeLeftCoord, int primeRightCoord, int primeBottomCoord) {
            return base.Channel.FileInfoFieldInsertAsync(fileInfoPackageFormId, fileInfoId, mdFieldId, extractedValue, charConfidence, pdfPageNumber, primeTopCoord, primeLeftCoord, primeRightCoord, primeBottomCoord);
        }
        
        public void FileInfoFieldUpdate(long fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId, string extractedValue, string charConfidence, System.Nullable<int> pdfPageNumber, System.Nullable<int> primeTopCoord, System.Nullable<int> primeLeftCoord, System.Nullable<int> primeRightCoord, System.Nullable<int> primeBottomCoord) {
            base.Channel.FileInfoFieldUpdate(fileInfoFieldId, fileInfoPackageFormId, fileInfoId, mdFieldId, extractedValue, charConfidence, pdfPageNumber, primeTopCoord, primeLeftCoord, primeRightCoord, primeBottomCoord);
        }
        
        public System.Threading.Tasks.Task FileInfoFieldUpdateAsync(long fileInfoFieldId, System.Nullable<long> fileInfoPackageFormId, System.Nullable<long> fileInfoId, System.Nullable<long> mdFieldId, string extractedValue, string charConfidence, System.Nullable<int> pdfPageNumber, System.Nullable<int> primeTopCoord, System.Nullable<int> primeLeftCoord, System.Nullable<int> primeRightCoord, System.Nullable<int> primeBottomCoord) {
            return base.Channel.FileInfoFieldUpdateAsync(fileInfoFieldId, fileInfoPackageFormId, fileInfoId, mdFieldId, extractedValue, charConfidence, pdfPageNumber, primeTopCoord, primeLeftCoord, primeRightCoord, primeBottomCoord);
        }
        
        public int FileInfoFieldDelete(long fileInfoFieldId) {
            return base.Channel.FileInfoFieldDelete(fileInfoFieldId);
        }
        
        public System.Threading.Tasks.Task<int> FileInfoFieldDeleteAsync(long fileInfoFieldId) {
            return base.Channel.FileInfoFieldDeleteAsync(fileInfoFieldId);
        }
        
        public int FileInfoFieldDeleteByFileInfoId(long fileInfoId) {
            return base.Channel.FileInfoFieldDeleteByFileInfoId(fileInfoId);
        }
        
        public System.Threading.Tasks.Task<int> FileInfoFieldDeleteByFileInfoIdAsync(long fileInfoId) {
            return base.Channel.FileInfoFieldDeleteByFileInfoIdAsync(fileInfoId);
        }
        
        public VastecOPMSP.FHSvc.IndexProfileList IndexProfileGetList(System.Nullable<long> indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> mdFormId, System.Nullable<long> metadataTypeId, string profileName) {
            return base.Channel.IndexProfileGetList(indexProfileId, customerId, projectId, mdFormId, metadataTypeId, profileName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileList> IndexProfileGetListAsync(System.Nullable<long> indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> mdFormId, System.Nullable<long> metadataTypeId, string profileName) {
            return base.Channel.IndexProfileGetListAsync(indexProfileId, customerId, projectId, mdFormId, metadataTypeId, profileName);
        }
        
        public string IndexProfileGetDumpXml() {
            return base.Channel.IndexProfileGetDumpXml();
        }
        
        public System.Threading.Tasks.Task<string> IndexProfileGetDumpXmlAsync() {
            return base.Channel.IndexProfileGetDumpXmlAsync();
        }
        
        public long IndexProfileInsert(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId) {
            return base.Channel.IndexProfileInsert(customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId);
        }
        
        public System.Threading.Tasks.Task<long> IndexProfileInsertAsync(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId) {
            return base.Channel.IndexProfileInsertAsync(customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId);
        }
        
        public long DbSyncIndexProfileInsert(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncIndexProfileInsert(customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId, globalUniqueKey, serverCreated);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncIndexProfileInsertAsync(System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string globalUniqueKey, string serverCreated) {
            return base.Channel.DbSyncIndexProfileInsertAsync(customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId, globalUniqueKey, serverCreated);
        }
        
        public void IndexProfileUpdate(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId) {
            base.Channel.IndexProfileUpdate(indexProfileId, customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId);
        }
        
        public System.Threading.Tasks.Task IndexProfileUpdateAsync(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId) {
            return base.Channel.IndexProfileUpdateAsync(indexProfileId, customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId);
        }
        
        public void IndexProfileUpdateSafe(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string rowVersion) {
            base.Channel.IndexProfileUpdateSafe(indexProfileId, customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId, rowVersion);
        }
        
        public System.Threading.Tasks.Task IndexProfileUpdateSafeAsync(long indexProfileId, System.Nullable<long> customerId, System.Nullable<long> projectId, System.Nullable<long> metadataTypeId, System.Nullable<long> mdFormId, string profileName, System.Nullable<int> maxFilenameSize, long changeUserId, string rowVersion) {
            return base.Channel.IndexProfileUpdateSafeAsync(indexProfileId, customerId, projectId, metadataTypeId, mdFormId, profileName, maxFilenameSize, changeUserId, rowVersion);
        }
        
        public void IndexProfileRemove(long indexProfileId) {
            base.Channel.IndexProfileRemove(indexProfileId);
        }
        
        public System.Threading.Tasks.Task IndexProfileRemoveAsync(long indexProfileId) {
            return base.Channel.IndexProfileRemoveAsync(indexProfileId);
        }
        
        public void IndexProfileRenumberItemFieldPositions(long indexProfileId) {
            base.Channel.IndexProfileRenumberItemFieldPositions(indexProfileId);
        }
        
        public System.Threading.Tasks.Task IndexProfileRenumberItemFieldPositionsAsync(long indexProfileId) {
            return base.Channel.IndexProfileRenumberItemFieldPositionsAsync(indexProfileId);
        }
        
        public int IndexProfileDelete(long indexProfileId) {
            return base.Channel.IndexProfileDelete(indexProfileId);
        }
        
        public System.Threading.Tasks.Task<int> IndexProfileDeleteAsync(long indexProfileId) {
            return base.Channel.IndexProfileDeleteAsync(indexProfileId);
        }
        
        public VastecOPMSP.FHSvc.IndexProfileItemList IndexProfileItemGetList(System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileId, System.Nullable<long> mdFieldIdentifierId) {
            return base.Channel.IndexProfileItemGetList(indexProfileItemId, indexProfileId, mdFieldIdentifierId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemList> IndexProfileItemGetListAsync(System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileId, System.Nullable<long> mdFieldIdentifierId) {
            return base.Channel.IndexProfileItemGetListAsync(indexProfileItemId, indexProfileId, mdFieldIdentifierId);
        }
        
        public long IndexProfileItemInsert(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    bool isRichTextEditor, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList) {
            return base.Channel.IndexProfileItemInsert(indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, useSpellCheck, useSpellCheckSuggestions, isRichTextEditor, changeUserId, picklistItems, alternateMdFieldIdentifierIdList);
        }
        
        public System.Threading.Tasks.Task<long> IndexProfileItemInsertAsync(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    bool isRichTextEditor, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList) {
            return base.Channel.IndexProfileItemInsertAsync(indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, useSpellCheck, useSpellCheckSuggestions, isRichTextEditor, changeUserId, picklistItems, alternateMdFieldIdentifierIdList);
        }
        
        public long DbSyncIndexProfileItemInsert(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool isRichTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList, 
                    string serverCreated, 
                    string globalUniqueKey) {
            return base.Channel.DbSyncIndexProfileItemInsert(indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, isRichTextEditor, useSpellCheck, useSpellCheckSuggestions, changeUserId, picklistItems, alternateMdFieldIdentifierIdList, serverCreated, globalUniqueKey);
        }
        
        public System.Threading.Tasks.Task<long> DbSyncIndexProfileItemInsertAsync(
                    long indexProfileId, 
                    int fieldPosition, 
                    string fieldLabel, 
                    bool isDateField, 
                    bool isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    bool isBoxNumber, 
                    bool isJobNumber, 
                    bool isAutoFill, 
                    bool isAutoCapitalize, 
                    bool isMultiline, 
                    bool allowCloning, 
                    bool isRequired, 
                    bool picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    bool isOperatorFeedback, 
                    bool isFullTextEditor, 
                    bool isRichTextEditor, 
                    bool useSpellCheck, 
                    bool useSpellCheckSuggestions, 
                    long changeUserId, 
                    string[] picklistItems, 
                    long[] alternateMdFieldIdentifierIdList, 
                    string serverCreated, 
                    string globalUniqueKey) {
            return base.Channel.DbSyncIndexProfileItemInsertAsync(indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, isRichTextEditor, useSpellCheck, useSpellCheckSuggestions, changeUserId, picklistItems, alternateMdFieldIdentifierIdList, serverCreated, globalUniqueKey);
        }
        
        public void IndexProfileItemUpdate(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId) {
            base.Channel.IndexProfileItemUpdate(indexProfileItemId, indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, isRichTextEditor, useSpellCheck, useSpellCheckSuggestions, changeUserId);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemUpdateAsync(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId) {
            return base.Channel.IndexProfileItemUpdateAsync(indexProfileItemId, indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, isRichTextEditor, useSpellCheck, useSpellCheckSuggestions, changeUserId);
        }
        
        public void IndexProfileItemUpdateSafe(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId, 
                    string rowVersion) {
            base.Channel.IndexProfileItemUpdateSafe(indexProfileItemId, indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, isRichTextEditor, useSpellCheck, useSpellCheckSuggestions, changeUserId, rowVersion);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemUpdateSafeAsync(
                    long indexProfileItemId, 
                    System.Nullable<long> indexProfileId, 
                    System.Nullable<int> fieldPosition, 
                    string fieldLabel, 
                    System.Nullable<bool> isDateField, 
                    System.Nullable<bool> isDateParsePair, 
                    System.Nullable<int> validYearFrom, 
                    System.Nullable<int> validYearTo, 
                    System.Nullable<bool> isBoxNumber, 
                    System.Nullable<bool> isJobNumber, 
                    System.Nullable<bool> isAutoFill, 
                    System.Nullable<bool> isAutoCapitalize, 
                    System.Nullable<bool> isMultiline, 
                    System.Nullable<bool> allowCloning, 
                    System.Nullable<bool> isRequired, 
                    System.Nullable<bool> picklistUseDropDownBox, 
                    System.Nullable<int> multilineNumItemsInFilename, 
                    string multilineDelimiter, 
                    System.Nullable<int> maximumTextLength, 
                    string staticValue, 
                    string regexValidation, 
                    System.Nullable<int> filenamePosition, 
                    string filenameDefaultValue, 
                    string filenameStringFormat, 
                    string filenameCharSubsFrom, 
                    string filenameCharSubsTo, 
                    string metadataFieldName, 
                    string metadataStringFormat, 
                    System.Nullable<int> metadataPosition, 
                    System.Nullable<long> mdFieldIdentifierId, 
                    string metadataDefaultValue, 
                    System.Nullable<bool> isOperatorFeedback, 
                    System.Nullable<bool> isFullTextEditor, 
                    System.Nullable<bool> isRichTextEditor, 
                    System.Nullable<bool> useSpellCheck, 
                    System.Nullable<bool> useSpellCheckSuggestions, 
                    long changeUserId, 
                    string rowVersion) {
            return base.Channel.IndexProfileItemUpdateSafeAsync(indexProfileItemId, indexProfileId, fieldPosition, fieldLabel, isDateField, isDateParsePair, validYearFrom, validYearTo, isBoxNumber, isJobNumber, isAutoFill, isAutoCapitalize, isMultiline, allowCloning, isRequired, picklistUseDropDownBox, multilineNumItemsInFilename, multilineDelimiter, maximumTextLength, staticValue, regexValidation, filenamePosition, filenameDefaultValue, filenameStringFormat, filenameCharSubsFrom, filenameCharSubsTo, metadataFieldName, metadataStringFormat, metadataPosition, mdFieldIdentifierId, metadataDefaultValue, isOperatorFeedback, isFullTextEditor, isRichTextEditor, useSpellCheck, useSpellCheckSuggestions, changeUserId, rowVersion);
        }
        
        public void IndexProfileItemRemove(long indexProfileItemId) {
            base.Channel.IndexProfileItemRemove(indexProfileItemId);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemRemoveAsync(long indexProfileItemId) {
            return base.Channel.IndexProfileItemRemoveAsync(indexProfileItemId);
        }
        
        public int IndexProfileItemDelete(long indexProfileItemId) {
            return base.Channel.IndexProfileItemDelete(indexProfileItemId);
        }
        
        public System.Threading.Tasks.Task<int> IndexProfileItemDeleteAsync(long indexProfileItemId) {
            return base.Channel.IndexProfileItemDeleteAsync(indexProfileItemId);
        }
        
        public void IndexProfileItemReplacePicklist(long indexProfileItemId, string[] picklistItems) {
            base.Channel.IndexProfileItemReplacePicklist(indexProfileItemId, picklistItems);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemReplacePicklistAsync(long indexProfileItemId, string[] picklistItems) {
            return base.Channel.IndexProfileItemReplacePicklistAsync(indexProfileItemId, picklistItems);
        }
        
        public void IndexProfileItemReplaceAltFieldIdentifierIdList(long indexProfileItemId, long[] alternateMdFieldIdentifierIdList) {
            base.Channel.IndexProfileItemReplaceAltFieldIdentifierIdList(indexProfileItemId, alternateMdFieldIdentifierIdList);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemReplaceAltFieldIdentifierIdListAsync(long indexProfileItemId, long[] alternateMdFieldIdentifierIdList) {
            return base.Channel.IndexProfileItemReplaceAltFieldIdentifierIdListAsync(indexProfileItemId, alternateMdFieldIdentifierIdList);
        }
        
        public VastecOPMSP.FHSvc.IndexProfileItemAssocList[] IndexProfileItemAssocListGetList(System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> indexProfileItemAssocListParentId) {
            return base.Channel.IndexProfileItemAssocListGetList(indexProfileItemAssocListId, indexProfileItemAssocListParentId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemAssocList[]> IndexProfileItemAssocListGetListAsync(System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> indexProfileItemAssocListParentId) {
            return base.Channel.IndexProfileItemAssocListGetListAsync(indexProfileItemAssocListId, indexProfileItemAssocListParentId);
        }
        
        public string IndexProfileItemAssocListGetXml(System.Nullable<long> indexProfileItemAssocListId) {
            return base.Channel.IndexProfileItemAssocListGetXml(indexProfileItemAssocListId);
        }
        
        public System.Threading.Tasks.Task<string> IndexProfileItemAssocListGetXmlAsync(System.Nullable<long> indexProfileItemAssocListId) {
            return base.Channel.IndexProfileItemAssocListGetXmlAsync(indexProfileItemAssocListId);
        }
        
        public long IndexProfileItemAssocListInsert(System.Nullable<long> parentAssocListId, string nodeValue) {
            return base.Channel.IndexProfileItemAssocListInsert(parentAssocListId, nodeValue);
        }
        
        public System.Threading.Tasks.Task<long> IndexProfileItemAssocListInsertAsync(System.Nullable<long> parentAssocListId, string nodeValue) {
            return base.Channel.IndexProfileItemAssocListInsertAsync(parentAssocListId, nodeValue);
        }
        
        public void IndexProfileItemAssocListUpdate(long indexProfileItemAssocListId, System.Nullable<long> parentAssocListId, string nodeValue) {
            base.Channel.IndexProfileItemAssocListUpdate(indexProfileItemAssocListId, parentAssocListId, nodeValue);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemAssocListUpdateAsync(long indexProfileItemAssocListId, System.Nullable<long> parentAssocListId, string nodeValue) {
            return base.Channel.IndexProfileItemAssocListUpdateAsync(indexProfileItemAssocListId, parentAssocListId, nodeValue);
        }
        
        public int IndexProfileItemAssocListDelete(long indexProfileItemAssocListId) {
            return base.Channel.IndexProfileItemAssocListDelete(indexProfileItemAssocListId);
        }
        
        public System.Threading.Tasks.Task<int> IndexProfileItemAssocListDeleteAsync(long indexProfileItemAssocListId) {
            return base.Channel.IndexProfileItemAssocListDeleteAsync(indexProfileItemAssocListId);
        }
        
        public VastecOPMSP.FHSvc.IndexProfileItemAssoc[] IndexProfileItemAssocGetList(System.Nullable<long> indexProfileItemAssocId, System.Nullable<long> indexProfileItemId) {
            return base.Channel.IndexProfileItemAssocGetList(indexProfileItemAssocId, indexProfileItemId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemAssoc[]> IndexProfileItemAssocGetListAsync(System.Nullable<long> indexProfileItemAssocId, System.Nullable<long> indexProfileItemId) {
            return base.Channel.IndexProfileItemAssocGetListAsync(indexProfileItemAssocId, indexProfileItemId);
        }
        
        public long IndexProfileItemAssocInsert(long indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition) {
            return base.Channel.IndexProfileItemAssocInsert(indexProfileItemId, assocListLevel, listItemMetadataName, listItemMetadataPosition, listItemFilenamePosition);
        }
        
        public System.Threading.Tasks.Task<long> IndexProfileItemAssocInsertAsync(long indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition) {
            return base.Channel.IndexProfileItemAssocInsertAsync(indexProfileItemId, assocListLevel, listItemMetadataName, listItemMetadataPosition, listItemFilenamePosition);
        }
        
        public void IndexProfileItemAssocUpdate(long indexProfileItemAssocId, System.Nullable<long> indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition) {
            base.Channel.IndexProfileItemAssocUpdate(indexProfileItemAssocId, indexProfileItemId, assocListLevel, listItemMetadataName, listItemMetadataPosition, listItemFilenamePosition);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemAssocUpdateAsync(long indexProfileItemAssocId, System.Nullable<long> indexProfileItemId, System.Nullable<int> assocListLevel, string listItemMetadataName, System.Nullable<int> listItemMetadataPosition, System.Nullable<int> listItemFilenamePosition) {
            return base.Channel.IndexProfileItemAssocUpdateAsync(indexProfileItemAssocId, indexProfileItemId, assocListLevel, listItemMetadataName, listItemMetadataPosition, listItemFilenamePosition);
        }
        
        public int IndexProfileItemAssocDelete(long indexProfileItemAssocId) {
            return base.Channel.IndexProfileItemAssocDelete(indexProfileItemAssocId);
        }
        
        public System.Threading.Tasks.Task<int> IndexProfileItemAssocDeleteAsync(long indexProfileItemAssocId) {
            return base.Channel.IndexProfileItemAssocDeleteAsync(indexProfileItemAssocId);
        }
        
        public VastecOPMSP.FHSvc.IndexProfileItemAssocData[] IndexProfileItemAssocDataGetList(System.Nullable<long> indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName) {
            return base.Channel.IndexProfileItemAssocDataGetList(indexProfileItemAssocDataId, indexProfileItemId, indexProfileItemAssocListId, customerId, projectId, collectionName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexProfileItemAssocData[]> IndexProfileItemAssocDataGetListAsync(System.Nullable<long> indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName) {
            return base.Channel.IndexProfileItemAssocDataGetListAsync(indexProfileItemAssocDataId, indexProfileItemId, indexProfileItemAssocListId, customerId, projectId, collectionName);
        }
        
        public string IndexProfileItemAssocDataGetXml(System.Nullable<long> indexProfileItemAssocDataId) {
            return base.Channel.IndexProfileItemAssocDataGetXml(indexProfileItemAssocDataId);
        }
        
        public System.Threading.Tasks.Task<string> IndexProfileItemAssocDataGetXmlAsync(System.Nullable<long> indexProfileItemAssocDataId) {
            return base.Channel.IndexProfileItemAssocDataGetXmlAsync(indexProfileItemAssocDataId);
        }
        
        public long IndexProfileItemAssocDataInsert(System.Nullable<long> indexProfileItemId, long indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName) {
            return base.Channel.IndexProfileItemAssocDataInsert(indexProfileItemId, indexProfileItemAssocListId, customerId, projectId, collectionName);
        }
        
        public System.Threading.Tasks.Task<long> IndexProfileItemAssocDataInsertAsync(System.Nullable<long> indexProfileItemId, long indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName) {
            return base.Channel.IndexProfileItemAssocDataInsertAsync(indexProfileItemId, indexProfileItemAssocListId, customerId, projectId, collectionName);
        }
        
        public void IndexProfileItemAssocDataUpdate(long indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName) {
            base.Channel.IndexProfileItemAssocDataUpdate(indexProfileItemAssocDataId, indexProfileItemId, indexProfileItemAssocListId, customerId, projectId, collectionName);
        }
        
        public System.Threading.Tasks.Task IndexProfileItemAssocDataUpdateAsync(long indexProfileItemAssocDataId, System.Nullable<long> indexProfileItemId, System.Nullable<long> indexProfileItemAssocListId, System.Nullable<long> customerId, System.Nullable<long> projectId, string collectionName) {
            return base.Channel.IndexProfileItemAssocDataUpdateAsync(indexProfileItemAssocDataId, indexProfileItemId, indexProfileItemAssocListId, customerId, projectId, collectionName);
        }
        
        public int IndexProfileItemAssocDataDelete(long indexProfileItemAssocDataId) {
            return base.Channel.IndexProfileItemAssocDataDelete(indexProfileItemAssocDataId);
        }
        
        public System.Threading.Tasks.Task<int> IndexProfileItemAssocDataDeleteAsync(long indexProfileItemAssocDataId) {
            return base.Channel.IndexProfileItemAssocDataDeleteAsync(indexProfileItemAssocDataId);
        }
        
        public VastecOPMSP.FHSvc.IndexSaveStateItemList IndexSaveStateItemGetList(System.Nullable<long> indexSaveStateItemId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId) {
            return base.Channel.IndexSaveStateItemGetList(indexSaveStateItemId, fileInfoId, indexProfileItemId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexSaveStateItemList> IndexSaveStateItemGetListAsync(System.Nullable<long> indexSaveStateItemId, System.Nullable<long> fileInfoId, System.Nullable<long> indexProfileItemId) {
            return base.Channel.IndexSaveStateItemGetListAsync(indexSaveStateItemId, fileInfoId, indexProfileItemId);
        }
        
        public VastecOPMSP.FHSvc.IndexSaveStateItemList IndexSaveStateItemListGetForBox(long boxId, string optionalFieldName) {
            return base.Channel.IndexSaveStateItemListGetForBox(boxId, optionalFieldName);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.IndexSaveStateItemList> IndexSaveStateItemListGetForBoxAsync(long boxId, string optionalFieldName) {
            return base.Channel.IndexSaveStateItemListGetForBoxAsync(boxId, optionalFieldName);
        }
        
        public string IndexSaveStateGetUniqueItemWithFilesXml(System.Nullable<long> boxId, string boxContainer, bool metadataOnly) {
            return base.Channel.IndexSaveStateGetUniqueItemWithFilesXml(boxId, boxContainer, metadataOnly);
        }
        
        public System.Threading.Tasks.Task<string> IndexSaveStateGetUniqueItemWithFilesXmlAsync(System.Nullable<long> boxId, string boxContainer, bool metadataOnly) {
            return base.Channel.IndexSaveStateGetUniqueItemWithFilesXmlAsync(boxId, boxContainer, metadataOnly);
        }
        
        public VastecOPMSP.FHSvc.UniqueItemText[] IndexSaveStateGetUniqueTextByBoxId(int returnTopNumber, long boxId, System.Nullable<long> changeUserId) {
            return base.Channel.IndexSaveStateGetUniqueTextByBoxId(returnTopNumber, boxId, changeUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UniqueItemText[]> IndexSaveStateGetUniqueTextByBoxIdAsync(int returnTopNumber, long boxId, System.Nullable<long> changeUserId) {
            return base.Channel.IndexSaveStateGetUniqueTextByBoxIdAsync(returnTopNumber, boxId, changeUserId);
        }
        
        public VastecOPMSP.FHSvc.UniqueItemText[] IndexSaveStateGetUniqueTextByJobId(int returnTopNumber, long jobId, System.Nullable<long> changeUserId) {
            return base.Channel.IndexSaveStateGetUniqueTextByJobId(returnTopNumber, jobId, changeUserId);
        }
        
        public System.Threading.Tasks.Task<VastecOPMSP.FHSvc.UniqueItemText[]> IndexSaveStateGetUniqueTextByJobIdAsync(int returnTopNumber, long jobId, System.Nullable<long> changeUserId) {
            return base.Channel.IndexSaveStateGetUniqueTextByJobIdAsync(returnTopNumber, jobId, changeUserId);
        }
        
        public long IndexSaveStateItemInsert(long fileInfoId, long indexProfileItemId, System.Nullable<long> mdFieldId, System.Nullable<long> boxActivityId, long changeUserId, string itemText, bool userMustBeAssignedActivity) {
            return base.Channel.IndexSaveStateItemInsert(fileInfoId, indexProfileItemId, mdFieldId, boxActivityId, changeUserId, itemText, userMustBeAssignedActivity);
        }
        
        public System.Threading.Tasks.Task<long> IndexSaveStateItemInsertAsync(long fileInfoId, long indexProfileItemId, System.Nullable<long> mdFieldId, System.Nullable<long> boxActivityId, long changeUserId, string itemText, bool userMustBeAssignedActivity) {
            return base.Channel.IndexSaveStateItemInsertAsync(fileInfoId, indexProfileItemId, mdFieldId, boxActivityId, changeUserId, itemText, userMustBeAssignedActivity);
        }
        
        public void IndexSaveStateItemAutoFill(long fileInfoId, long projectId, bool useExtractedText, long changeUserId) {
            base.Channel.IndexSaveStateItemAutoFill(fileInfoId, projectId, useExtractedText, changeUserId);
        }
        
        public System.Threading.Tasks.Task IndexSaveStateItemAutoFillAsync(long fileInfoId, long projectId, bool useExtractedText, long changeUserId) {
            return base.Channel.IndexSaveStateItemAutoFillAsync(fileInfoId, projectId, useExtractedText, changeUserId);
        }
    }
}
